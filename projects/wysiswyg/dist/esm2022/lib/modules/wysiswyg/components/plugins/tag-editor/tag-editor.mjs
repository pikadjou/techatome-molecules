export class TagTool {
    static get isInline() {
        return true;
    }
    static get shortcut() {
        return 'CTRL+A';
    }
    static get sanitize() {
        return {
            span: {
                'class': true,
                'data-user-id': true,
            },
        };
    }
    constructor({ api, config }) {
        this.users = [];
        this.dropdown = document.createElement('div');
        this.templateTagSpan = document.createElement('span');
        this._currentTagSpan = null;
        this.handleKeydown = (event) => {
            if (!event || !(event instanceof KeyboardEvent)) {
                return;
            }
            if (event.key === '@') {
                event.preventDefault(); // Emp√™che l'insertion du @ par d√©faut
                this._insertTagAtCursor();
                return;
            }
            if (event.key === 'Escape') {
                this._cancelTag();
            }
        };
        this.handleTyping = () => {
            if (!this._currentTagSpan) {
                return;
            }
            const text = this._currentTagSpan?.textContent?.trim();
            const query = text?.slice(1).toLowerCase(); // Supprime le @ et met en minuscule
            const filteredUsers = !query || query?.length === 0 ? this.users : this.users.filter(user => user.name.toLowerCase().includes(query));
            this._updateDropdown(filteredUsers);
        };
        this.handleOutsideClick = (event) => {
            if (!event) {
                return;
            }
            if (this.dropdown.hidden) {
                return;
            }
            // V√©rifie si le clic n'est PAS sur la dropdown ni sur la mention en cours
            if (!this.dropdown.contains(event.target) && this._currentTagSpan !== event.target) {
                this._cancelTag();
            }
        };
        this.api = api;
        this.users = config?.users || [];
        this._initDOM();
    }
    render() {
        return {
            icon: '@',
            label: 'Tag',
            onActivate: () => {
                this._insertTagAtCursor();
            },
        };
    }
    surround(range) {
        if (!range) {
            return;
        }
        if (!this._currentTagSpan) {
            return;
        }
        this._currentTagSpan = this.templateTagSpan.cloneNode(true);
        range.insertNode(this._currentTagSpan);
        this._showDropdown();
    }
    checkState() {
        return false;
    }
    _initDOM() {
        this.templateTagSpan.classList.add('tag-user', 'text-color-text-brand-primary');
        this.templateTagSpan.dataset['userId'] = '';
        this.templateTagSpan.textContent = '@';
        this.dropdown.classList.add('tag-dropdown', 'p-space-sm', 'bxs-shadow-black-sm');
        this.dropdown.style.position = 'absolute';
        this.dropdown.style.background = 'white';
        this.dropdown.style.zIndex = '1000';
        this.dropdown.style.maxHeight = '150px';
        this.dropdown.style.overflowY = 'auto';
        const editorDiv = document.body.querySelector('.editor-container');
        if (editorDiv) {
            this.api.listeners.on(editorDiv, 'keydown', this.handleKeydown);
            this.api.listeners.on(editorDiv, 'input', this.handleTyping);
        }
        this.api.listeners.on(document.body, 'click', this.handleOutsideClick);
    }
    _insertTagAtCursor() {
        const selection = window.getSelection();
        if (!selection) {
            return;
        }
        const range = selection.getRangeAt(0);
        if (!range) {
            return;
        }
        this._currentTagSpan = this.templateTagSpan.cloneNode(true);
        range.insertNode(this._currentTagSpan);
        range.setStartAfter(this._currentTagSpan);
        range.setEndAfter(this._currentTagSpan);
        selection.removeAllRanges();
        selection.addRange(range);
        this._showDropdown();
    }
    _showDropdown() {
        if (!this._currentTagSpan) {
            return;
        }
        this._updateDropdown(this.users);
        document.body.appendChild(this.dropdown);
        const rect = this._currentTagSpan.getBoundingClientRect();
        this.dropdown.style.top = `${rect.bottom + window.scrollY}px`;
        this.dropdown.style.left = `${rect.left + window.scrollX}px`;
    }
    _hideDropdown() {
        document.body.removeChild(this.dropdown);
    }
    _updateDropdown(users) {
        this.dropdown.innerHTML = '';
        if (users.length === 0) {
            const noResult = document.createElement('div');
            noResult.textContent = 'Aucun r√©sultat';
            noResult.style.padding = '5px';
            this.dropdown.appendChild(noResult);
            return;
        }
        users.forEach((user, index) => {
            const option = document.createElement('div');
            option.textContent = user.name;
            option.style.padding = '5px';
            option.style.cursor = 'pointer';
            option.dataset['index'] = index.toString();
            option.addEventListener('click', () => this._selectUser(user));
            this.dropdown.appendChild(option);
        });
    }
    _selectUser(user) {
        if (!this._currentTagSpan) {
            return;
        }
        // Remplace le contenu du span avec le nom s√©lectionn√©
        this._currentTagSpan.textContent = `@${user.name}`;
        this._currentTagSpan.dataset['userId'] = user.id;
        // Ins√®re un n≈ìud texte apr√®s la tag pour √©viter de garder le style
        const textNode = document.createTextNode('\u00A0'); // Un espace pour √©viter que le curseur colle
        this._currentTagSpan.after(textNode);
        // üî• D√©place le curseur apr√®s la tag pour continuer √† √©crire normalement
        const range = document.createRange();
        const selection = window.getSelection();
        range.setStartAfter(textNode);
        range.collapse(true);
        selection?.removeAllRanges();
        selection?.addRange(range);
        // Cache la dropdown et r√©initialise
        this._currentTagSpan = null;
        this._hideDropdown();
    }
    _cancelTag() {
        if (!this._currentTagSpan) {
            return;
        }
        // R√©cup√®re le texte √† l'int√©rieur de la span
        const textContent = this._currentTagSpan.textContent || '';
        // Cr√©e un n≈ìud texte avec le m√™me contenu
        const textNode = document.createTextNode(textContent);
        // Remplace la span par le texte brut
        this._currentTagSpan.replaceWith(textNode);
        // R√©initialise la r√©f√©rence
        this._currentTagSpan = null;
        this._hideDropdown();
    }
}
//# sourceMappingURL=data:application/json;base64,