{"version":3,"file":"ta-capacitor.mjs","sources":["../../src/lib/services/device-info.service.ts","../../src/lib/services/device-network.service.ts","../../src/lib/services/device-position.service.ts","../../src/lib/services/pwa.service.ts","../../src/lib/capacitor.module.ts","../../src/public-api.ts","../../src/ta-capacitor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { filter, map } from 'rxjs/operators';\n\nimport { Device, DeviceInfo, OperatingSystem } from '@capacitor/device';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaDeviceInfoService {\n  public deviceClasses$: Observable<string[]>;\n  public os$: Observable<OperatingSystem>;\n\n  private _getInfo$ = new BehaviorSubject<DeviceInfo | null>(null);\n\n  constructor() {\n    Device.getInfo().then(deviceInformation => this._getInfo$.next(deviceInformation));\n\n    this.os$ = this._getInfo$.pipe(\n      filter(deviceInfo => !!deviceInfo),\n      map(deviceInfo => deviceInfo?.operatingSystem ?? 'unknown')\n    );\n\n    this.deviceClasses$ = this.os$.pipe(\n      map(os => {\n        return [os, this._getMobileClass(os)];\n      })\n    );\n  }\n\n  public isMobileOs$() {\n    return this.os$.pipe(map(value => this.isMobileOs(value)));\n  }\n  public isWeb$() {\n    return this.os$.pipe(map(value => !this.isMobileOs(value)));\n  }\n\n  public isMobileOs(os: OperatingSystem) {\n    return os === 'android' || os === 'ios';\n  }\n\n  private _getMobileClass(os: OperatingSystem) {\n    return this.isMobileOs(os) ? 'mobile-device' : 'desktop-device';\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Network } from '@capacitor/network';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Logger } from '@ta/server';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaDeviceNetworkService {\n  public isConnected$ = new BehaviorSubject<boolean>(false);\n\n  private _delayToDisplayNewNotification: number = 10 * 1000; // in ms\n  private _state: boolean = true;\n  private _timeoutActive: NodeJS.Timeout | null = null;\n\n  constructor() {}\n\n  public async observeNetworkStateChanges() {\n    // save the current\n    this._state = await this._getCurrentNetworkState();\n\n    Network.addListener('networkStatusChange', async (currentState: { connected: boolean }) => {\n      if (this._state === currentState.connected) {\n        return;\n      }\n      this._logNetworkStateChanged(currentState.connected);\n      this._state = currentState.connected;\n\n      if (this._timeoutActive) {\n        clearTimeout(this._timeoutActive);\n        this._timeoutActive = null;\n        return;\n      }\n      this._timeoutActive = setTimeout(async () => {\n        this.isConnected$.next(currentState.connected);\n        this._logNetworkStateChanged(currentState.connected, true);\n        this._timeoutActive = null;\n      }, this._delayToDisplayNewNotification);\n    });\n  }\n\n  private async _getCurrentNetworkState() {\n    return (await Network.getStatus()).connected;\n  }\n\n  private _logNetworkStateChanged(isConnected: boolean, canDisplayNotification: boolean = false): void {\n    if (isConnected)\n      Logger.LogWarning(`[Network] connection restored ${canDisplayNotification ? '[notification] send' : ''}`);\n    else Logger.LogWarning(`[Network] connection lost ${canDisplayNotification ? '[notification] send' : ''}`);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Geolocation, Position } from '@capacitor/geolocation';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaDevicePositionService {\n  private _currentPosition$ = new BehaviorSubject<Position | null>(null);\n  private _canAccessPosition$ = new BehaviorSubject<boolean>(false);\n\n  get currentPosition() {\n    return this._currentPosition$.getValue();\n  }\n\n  get canAccessPosition() {\n    return this._canAccessPosition$.getValue();\n  }\n\n  constructor() {}\n\n  public fetchCanAccessPosition() {\n    Geolocation.checkPermissions().then(permissionStatus =>\n      this._canAccessPosition$.next(permissionStatus.location !== 'denied')\n    );\n  }\n\n  public fetchCurrentPosition() {\n    Geolocation.getCurrentPosition().then(position => {\n      this._currentPosition$.next(position);\n    });\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\nexport const PWA_CONFIG_KEY = 'config_pwa';\n\nexport interface IPwaConfig {\n  active: boolean;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaPwaService {\n  public isPWaCapability$ = new BehaviorSubject<boolean>(false);\n\n  private _promptEvent!: any;\n\n  constructor(\n    @Inject(PWA_CONFIG_KEY)\n    private _config: IPwaConfig\n  ) {\n    if (this._config.active) {\n      window.addEventListener('beforeinstallprompt', event => {\n        this._promptEvent = event;\n        this.isPWaCapability$.next(true);\n      });\n    }\n  }\n\n  public isPWaCapability() {\n    return !!this._promptEvent;\n  }\n  public launchInstall(): void {\n    if (this._promptEvent) {\n      this._promptEvent.prompt();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\n/**\n * @deprecated Use standalone components instead.\n * This module will be removed in a future version.\n */\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n})\nexport class TaCapacitorModule {}\n","/*\n * Public API Surface of capacitor\n */\n\nexport * from './lib/services/public-api';\n\nexport * from './lib/capacitor.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}