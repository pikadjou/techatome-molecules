{"version":3,"file":"ta-charts.mjs","sources":["../../src/lib/components/base-chart/base-chart.component.ts","../../src/lib/components/bar-chart.component.ts","../../src/lib/components/base-chart/base-chart.component.html","../../src/lib/components/line-chart.component.ts","../../src/lib/components/doughnut-chart.component.ts","../../src/lib/components/mixed-chart.component.ts","../../src/lib/components/pie-chart.component.ts","../../src/lib/components/chart-color.ts","../../src/public-api.ts","../../src/ta-charts.ts"],"sourcesContent":["import { AfterViewInit, Component, ElementRef, Input, OnDestroy, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { ChartConfiguration, ChartDataset, ChartType, DefaultDataPoint } from 'chart.js';\nimport Chart from 'chart.js/auto';\nimport deepEqual from 'fast-deep-equal';\n\n@Component({ template: '' })\nexport abstract class BaseChartComponent<\n    TType extends ChartType = ChartType,\n    TData = DefaultDataPoint<TType>,\n    TLabel = unknown,\n  >\n  implements AfterViewInit, OnDestroy\n{\n  @Input()\n  labels!: TLabel[];\n\n  @Input()\n  datasets!: ChartDataset<ChartType, TData>[];\n\n  @Input() chartOptions: ChartConfiguration['options'] = {};\n\n  @Input() chartHeight?: number;\n\n  @ViewChild('chartCanvas') chartCanvas!: ElementRef;\n\n  public type!: TType;\n\n  public chart: Chart<ChartType, TData, TLabel> | null = null;\n\n  // readonly id = 'MyChart' + Math.random();\n\n  constructor() {}\n  ngAfterViewInit() {\n    this.createChart();\n  }\n  ngOnDestroy() {\n    this.chart?.destroy();\n    this.chart = null;\n  }\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      !deepEqual(changes['labels']?.previousValue, changes['labels']?.currentValue) ||\n      !deepEqual(changes['datasets']?.previousValue, changes['datasets']?.currentValue)\n    ) {\n      this.refreshChart();\n    }\n  }\n\n  public createChart() {\n    this.chart = new Chart(this.chartCanvas.nativeElement.getContext('2d'), {\n      type: this.type,\n      options: this.chartOptions,\n      data: {\n        labels: this.labels,\n        datasets: this.datasets,\n      },\n    });\n  }\n\n  public refreshChart() {\n    if (!this.chart) {\n      return;\n    }\n\n    this.chart.data.labels = this.labels;\n    this.chart.data.datasets = this.datasets;\n\n    this.chart?.update();\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { BaseChartComponent } from './base-chart/base-chart.component';\n\n@Component({\n  selector: 'ta-bar-chart',\n  templateUrl: './base-chart/base-chart.component.html',\n  styleUrls: ['./base-chart/base-chart.component.scss'],\n  standalone: true,\n  imports: [],\n})\nexport class TaChartBarComponent extends BaseChartComponent<'bar'> {\n  constructor() {\n    super();\n\n    this.type = 'bar';\n  }\n}\n","<div class=\"chart-container\" [style.height.px]=\"this.chartHeight\">\n  <!-- <canvas [attr.id]=\"this.id\"></canvas> -->\n  <canvas #chartCanvas></canvas>\n</div>\n","import { Component } from '@angular/core';\n\nimport { BaseChartComponent } from './base-chart/base-chart.component';\n\n@Component({\n  selector: 'ta-line-chart',\n  templateUrl: './base-chart/base-chart.component.html',\n  styleUrls: ['./base-chart/base-chart.component.scss'],\n  standalone: true,\n  imports: [],\n})\nexport class TaChartLineComponent extends BaseChartComponent<'line'> {\n  constructor() {\n    super();\n\n    this.type = 'line';\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { BaseChartComponent } from './base-chart/base-chart.component';\n\n@Component({\n  selector: 'ta-doughnut-chart',\n  templateUrl: './base-chart/base-chart.component.html',\n  styleUrls: ['./base-chart/base-chart.component.scss'],\n  standalone: true,\n  imports: [],\n})\nexport class TaChartDoughnutComponent extends BaseChartComponent<'doughnut'> {\n  constructor() {\n    super();\n\n    this.type = 'doughnut';\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { BaseChartComponent } from './base-chart/base-chart.component';\n\n@Component({\n  selector: 'ta-mixed-chart',\n  templateUrl: './base-chart/base-chart.component.html',\n  styleUrls: ['./base-chart/base-chart.component.scss'],\n  standalone: true,\n  imports: [],\n})\nexport class TaChartMixedComponent extends BaseChartComponent<'scatter'> {\n  constructor() {\n    super();\n\n    this.type = 'scatter';\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { BaseChartComponent } from './base-chart/base-chart.component';\n\n@Component({\n  selector: 'ta-pie-chart',\n  templateUrl: './base-chart/base-chart.component.html',\n  styleUrls: ['./base-chart/base-chart.component.scss'],\n  standalone: true,\n  imports: [],\n})\nexport class TaChartPieComponent extends BaseChartComponent<'pie'> {\n  @Input()\n  radius?: number;\n\n  constructor() {\n    super();\n\n    this.type = 'pie';\n  }\n}\n","export interface ColorPalette {\n  blue900: string;\n  blue800: string;\n  blue700: string;\n  blue600: string;\n  blue500: string;\n  blue400: string;\n  blue300: string;\n  blue200: string;\n  blue100: string;\n  blue50: string;\n  success: string;\n  danger: string;\n  warning: string;\n  info: string;\n  light: string;\n  dark: string;\n  white: string;\n  black: string;\n}\n\nexport const ChartColors: ColorPalette = {\n  blue900: '#1f2245',\n  blue800: '#172aa5',\n  blue700: '#3c54e4',\n  blue600: '#6b7cea',\n  blue500: '#98a6ff',\n  blue400: '#cbd3ff',\n  blue300: '#e5e9ff',\n  blue200: '#f2f4fe',\n  blue100: '#f8f9ff',\n  blue50: '#ffffff',\n  success: '#4CAF50',\n  danger: '#F44336',\n  warning: '#FFC107',\n  info: '#2196F3',\n  light: '#F1F1F1',\n  dark: '#212121',\n  white: '#FFFFFF',\n  black: '#000000',\n};\n\nexport type ChartColorKey = keyof typeof ChartColors;\n","/*\n * Public API Surface of charts\n */\nexport * from './lib/components/public-api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}