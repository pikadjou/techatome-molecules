import { AbstractNotificationTemplateComponent } from '../abstract';
import { IconComponent } from '../../icon/icon.component';
import { ItemComponent } from '../../item.component';
import { NotificationTitleComponent } from '../../title/title.component';
import { NgIf, NgTemplateOutlet } from '@angular/common';
import { Component } from '@angular/core';
import { TranslateModule } from '@ngx-translate/core';
import * as i0 from "@angular/core";
import * as i1 from "@ngx-translate/core";
export class ProjectStatusChangedComponent extends AbstractNotificationTemplateComponent {
    constructor() {
        super(...arguments);
        this.template = this.sharedService.projectStatusTemplate;
    }
    get projectStatus() {
        return Number(this.extractContext('ProjectStatus'));
    }
    goTo() {
        if (!this.sharedService.routing || !this.sharedService.routing.project) {
            return;
        }
        super.goTo();
        this.sharedService.routing.project({
            projectId: this.extractredirectContext('ProjectId'),
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: ProjectStatusChangedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: ProjectStatusChangedComponent, isStandalone: true, selector: "ta-notification-project-status-changed", usesInheritance: true, ngImport: i0, template: "<ta-notification-item [notification]=\"this.notification\" (click)=\"this.goTo()\">\n  <ta-notification-item-title>\n    <div class=\"flex-row g-space-sm\">\n      {{ 'notification.items.project-status-changed.title' | translate: this.getTranslation() }}\n      <div class=\"d-flex\">\n        @if (this.template) {\n          <ng-container\n            [ngTemplateOutlet]=\"this.template\"\n            [ngTemplateOutletContext]=\"{\n              data: this.projectStatus,\n            }\"\n          ></ng-container>\n        }\n      </div>\n    </div>\n  </ta-notification-item-title>\n  <ta-notification-item-icon icon=\"projects\"></ta-notification-item-icon>\n</ta-notification-item>\n", styles: [""], dependencies: [{ kind: "component", type: IconComponent, selector: "ta-notification-item-icon", inputs: ["level", "icon"] }, { kind: "component", type: ItemComponent, selector: "ta-notification-item", inputs: ["notification"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: NotificationTitleComponent, selector: "ta-notification-item-title" }, { kind: "ngmodule", type: TranslateModule }, { kind: "pipe", type: i1.TranslatePipe, name: "translate" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: ProjectStatusChangedComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-notification-project-status-changed', standalone: true, imports: [
                        IconComponent,
                        ItemComponent,
                        NgIf,
                        NgTemplateOutlet,
                        NotificationTitleComponent,
                        TranslateModule
                    ], template: "<ta-notification-item [notification]=\"this.notification\" (click)=\"this.goTo()\">\n  <ta-notification-item-title>\n    <div class=\"flex-row g-space-sm\">\n      {{ 'notification.items.project-status-changed.title' | translate: this.getTranslation() }}\n      <div class=\"d-flex\">\n        @if (this.template) {\n          <ng-container\n            [ngTemplateOutlet]=\"this.template\"\n            [ngTemplateOutletContext]=\"{\n              data: this.projectStatus,\n            }\"\n          ></ng-container>\n        }\n      </div>\n    </div>\n  </ta-notification-item-title>\n  <ta-notification-item-icon icon=\"projects\"></ta-notification-item-icon>\n</ta-notification-item>\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvamVjdC1zdGF0dXMtY2hhbmdlZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbXBvbmVudHMvaXRlbXMvaXRlbS90ZW1wbGF0ZS9wcm9qZWN0LXN0YXR1cy1jaGFuZ2VkL3Byb2plY3Qtc3RhdHVzLWNoYW5nZWQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL2l0ZW1zL2l0ZW0vdGVtcGxhdGUvcHJvamVjdC1zdGF0dXMtY2hhbmdlZC9wcm9qZWN0LXN0YXR1cy1jaGFuZ2VkLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxxQ0FBcUMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNwRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3JELE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3pFLE9BQU8sRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7O0FBZ0J0RCxNQUFNLE9BQU8sNkJBQThCLFNBQVEscUNBQXFDO0lBZHhGOztRQWVTLGFBQVEsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLHFCQUFxQixDQUFDO0tBYzVEO0lBYkMsSUFBSSxhQUFhO1FBQ2YsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO0lBQ3RELENBQUM7SUFFUSxJQUFJO1FBQ1gsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDdkUsT0FBTztRQUNULENBQUM7UUFDRCxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDYixJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUM7WUFDakMsU0FBUyxFQUFFLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxXQUFXLENBQUM7U0FDcEQsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzsrR0FkVSw2QkFBNkI7bUdBQTdCLDZCQUE2Qix5SEN0QjFDLHVyQkFrQkEsMERESkksYUFBYSxpR0FDYixhQUFhLDJGQUViLGdCQUFnQixvSkFDaEIsMEJBQTBCLHNFQUMxQixlQUFlOzs0RkFHTiw2QkFBNkI7a0JBZHpDLFNBQVM7K0JBQ0Usd0NBQXdDLGNBR3RDLElBQUksV0FDUDt3QkFDUCxhQUFhO3dCQUNiLGFBQWE7d0JBQ2IsSUFBSTt3QkFDSixnQkFBZ0I7d0JBQ2hCLDBCQUEwQjt3QkFDMUIsZUFBZTtxQkFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBYnN0cmFjdE5vdGlmaWNhdGlvblRlbXBsYXRlQ29tcG9uZW50IH0gZnJvbSAnLi4vYWJzdHJhY3QnO1xuaW1wb3J0IHsgSWNvbkNvbXBvbmVudCB9IGZyb20gJy4uLy4uL2ljb24vaWNvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgSXRlbUNvbXBvbmVudCB9IGZyb20gJy4uLy4uL2l0ZW0uY29tcG9uZW50JztcbmltcG9ydCB7IE5vdGlmaWNhdGlvblRpdGxlQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vdGl0bGUvdGl0bGUuY29tcG9uZW50JztcbmltcG9ydCB7IE5nSWYsIE5nVGVtcGxhdGVPdXRsZXQgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUcmFuc2xhdGVNb2R1bGUgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGEtbm90aWZpY2F0aW9uLXByb2plY3Qtc3RhdHVzLWNoYW5nZWQnLFxuICB0ZW1wbGF0ZVVybDogJy4vcHJvamVjdC1zdGF0dXMtY2hhbmdlZC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3Byb2plY3Qtc3RhdHVzLWNoYW5nZWQuY29tcG9uZW50LnNjc3MnXSxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW1xuICAgIEljb25Db21wb25lbnQsXG4gICAgSXRlbUNvbXBvbmVudCxcbiAgICBOZ0lmLFxuICAgIE5nVGVtcGxhdGVPdXRsZXQsXG4gICAgTm90aWZpY2F0aW9uVGl0bGVDb21wb25lbnQsXG4gICAgVHJhbnNsYXRlTW9kdWxlXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIFByb2plY3RTdGF0dXNDaGFuZ2VkQ29tcG9uZW50IGV4dGVuZHMgQWJzdHJhY3ROb3RpZmljYXRpb25UZW1wbGF0ZUNvbXBvbmVudCB7XG4gIHB1YmxpYyB0ZW1wbGF0ZSA9IHRoaXMuc2hhcmVkU2VydmljZS5wcm9qZWN0U3RhdHVzVGVtcGxhdGU7XG4gIGdldCBwcm9qZWN0U3RhdHVzKCkge1xuICAgIHJldHVybiBOdW1iZXIodGhpcy5leHRyYWN0Q29udGV4dCgnUHJvamVjdFN0YXR1cycpKTtcbiAgfVxuXG4gIG92ZXJyaWRlIGdvVG8oKSB7XG4gICAgaWYgKCF0aGlzLnNoYXJlZFNlcnZpY2Uucm91dGluZyB8fCAhdGhpcy5zaGFyZWRTZXJ2aWNlLnJvdXRpbmcucHJvamVjdCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzdXBlci5nb1RvKCk7XG4gICAgdGhpcy5zaGFyZWRTZXJ2aWNlLnJvdXRpbmcucHJvamVjdCh7XG4gICAgICBwcm9qZWN0SWQ6IHRoaXMuZXh0cmFjdHJlZGlyZWN0Q29udGV4dCgnUHJvamVjdElkJyksXG4gICAgfSk7XG4gIH1cbn1cbiIsIjx0YS1ub3RpZmljYXRpb24taXRlbSBbbm90aWZpY2F0aW9uXT1cInRoaXMubm90aWZpY2F0aW9uXCIgKGNsaWNrKT1cInRoaXMuZ29UbygpXCI+XG4gIDx0YS1ub3RpZmljYXRpb24taXRlbS10aXRsZT5cbiAgICA8ZGl2IGNsYXNzPVwiZmxleC1yb3cgZy1zcGFjZS1zbVwiPlxuICAgICAge3sgJ25vdGlmaWNhdGlvbi5pdGVtcy5wcm9qZWN0LXN0YXR1cy1jaGFuZ2VkLnRpdGxlJyB8IHRyYW5zbGF0ZTogdGhpcy5nZXRUcmFuc2xhdGlvbigpIH19XG4gICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4XCI+XG4gICAgICAgIEBpZiAodGhpcy50ZW1wbGF0ZSkge1xuICAgICAgICAgIDxuZy1jb250YWluZXJcbiAgICAgICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0XT1cInRoaXMudGVtcGxhdGVcIlxuICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cIntcbiAgICAgICAgICAgICAgZGF0YTogdGhpcy5wcm9qZWN0U3RhdHVzLFxuICAgICAgICAgICAgfVwiXG4gICAgICAgICAgPjwvbmctY29udGFpbmVyPlxuICAgICAgICB9XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC90YS1ub3RpZmljYXRpb24taXRlbS10aXRsZT5cbiAgPHRhLW5vdGlmaWNhdGlvbi1pdGVtLWljb24gaWNvbj1cInByb2plY3RzXCI+PC90YS1ub3RpZmljYXRpb24taXRlbS1pY29uPlxuPC90YS1ub3RpZmljYXRpb24taXRlbT5cbiJdfQ==