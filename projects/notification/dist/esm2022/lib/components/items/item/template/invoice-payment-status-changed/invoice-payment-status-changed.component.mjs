import { AbstractNotificationTemplateComponent } from '../abstract';
import { IconComponent } from '../../icon/icon.component';
import { ItemComponent } from '../../item.component';
import { NotificationTitleComponent } from '../../title/title.component';
import { NgIf, NgTemplateOutlet } from '@angular/common';
import { Component } from '@angular/core';
import { TranslateModule } from '@ngx-translate/core';
import * as i0 from "@angular/core";
import * as i1 from "@ngx-translate/core";
export class InvoicePaymentStatusChangedComponent extends AbstractNotificationTemplateComponent {
    constructor() {
        super(...arguments);
        this.template = this.sharedService.paymentStatusTemplate;
    }
    get paymentStatus() {
        return this.notification.context.find(item => item.key === 'PaymentStatus')?.value ?? 0;
    }
    goTo() {
        if (!this.sharedService.routing || !this.sharedService.routing.invoice) {
            return;
        }
        super.goTo();
        this.sharedService.routing?.invoice({
            projectId: this.extractredirectContext('ProjectId'),
            invoiceId: this.extractredirectContext('InvoiceId'),
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: InvoicePaymentStatusChangedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.14", type: InvoicePaymentStatusChangedComponent, isStandalone: true, selector: "ta-invoice-payment-status-changed", usesInheritance: true, ngImport: i0, template: "<ta-notification-item [notification]=\"this.notification\" (click)=\"this.goTo()\">\n  <ta-notification-item-title>\n    <div class=\"flex-row g-space-sm\">\n      {{ 'notification.items.invoice-payment-status-changed.title' | translate: this.getTranslation() }}\n      <div class=\"flex\">\n        @if (this.template) {\n          <ng-container\n            [ngTemplateOutlet]=\"this.template\"\n            [ngTemplateOutletContext]=\"{\n              data: this.paymentStatus,\n            }\"\n          ></ng-container>\n        }\n      </div>\n    </div>\n  </ta-notification-item-title>\n  <ta-notification-item-icon icon=\"bills\"></ta-notification-item-icon>\n</ta-notification-item>\n", styles: [""], dependencies: [{ kind: "component", type: IconComponent, selector: "ta-notification-item-icon", inputs: ["level", "icon"] }, { kind: "component", type: ItemComponent, selector: "ta-notification-item", inputs: ["notification"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: NotificationTitleComponent, selector: "ta-notification-item-title" }, { kind: "ngmodule", type: TranslateModule }, { kind: "pipe", type: i1.TranslatePipe, name: "translate" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: InvoicePaymentStatusChangedComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-invoice-payment-status-changed', standalone: true, imports: [
                        IconComponent,
                        ItemComponent,
                        NgIf,
                        NgTemplateOutlet,
                        NotificationTitleComponent,
                        TranslateModule
                    ], template: "<ta-notification-item [notification]=\"this.notification\" (click)=\"this.goTo()\">\n  <ta-notification-item-title>\n    <div class=\"flex-row g-space-sm\">\n      {{ 'notification.items.invoice-payment-status-changed.title' | translate: this.getTranslation() }}\n      <div class=\"flex\">\n        @if (this.template) {\n          <ng-container\n            [ngTemplateOutlet]=\"this.template\"\n            [ngTemplateOutletContext]=\"{\n              data: this.paymentStatus,\n            }\"\n          ></ng-container>\n        }\n      </div>\n    </div>\n  </ta-notification-item-title>\n  <ta-notification-item-icon icon=\"bills\"></ta-notification-item-icon>\n</ta-notification-item>\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW52b2ljZS1wYXltZW50LXN0YXR1cy1jaGFuZ2VkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9pdGVtcy9pdGVtL3RlbXBsYXRlL2ludm9pY2UtcGF5bWVudC1zdGF0dXMtY2hhbmdlZC9pbnZvaWNlLXBheW1lbnQtc3RhdHVzLWNoYW5nZWQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL2l0ZW1zL2l0ZW0vdGVtcGxhdGUvaW52b2ljZS1wYXltZW50LXN0YXR1cy1jaGFuZ2VkL2ludm9pY2UtcGF5bWVudC1zdGF0dXMtY2hhbmdlZC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUscUNBQXFDLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDcEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzFELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN6RSxPQUFPLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDekQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7OztBQWlCdEQsTUFBTSxPQUFPLG9DQUFxQyxTQUFRLHFDQUFxQztJQWQvRjs7UUFlUyxhQUFRLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxxQkFBcUIsQ0FBQztLQWM1RDtJQWJDLElBQUksYUFBYTtRQUNmLE9BQW9CLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLEtBQUssZUFBZSxDQUFDLEVBQUUsS0FBSyxJQUFJLENBQUMsQ0FBQztJQUN4RyxDQUFDO0lBQ1EsSUFBSTtRQUNYLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ3ZFLE9BQU87UUFDVCxDQUFDO1FBQ0QsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2IsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDO1lBQ2xDLFNBQVMsRUFBRSxJQUFJLENBQUMsc0JBQXNCLENBQUMsV0FBVyxDQUFDO1lBQ25ELFNBQVMsRUFBRSxJQUFJLENBQUMsc0JBQXNCLENBQUMsV0FBVyxDQUFDO1NBQ3BELENBQUMsQ0FBQztJQUNMLENBQUM7K0dBZFUsb0NBQW9DO21HQUFwQyxvQ0FBb0Msb0hDdkJqRCwwckJBa0JBLDBEREhJLGFBQWEsaUdBQ2IsYUFBYSwyRkFFYixnQkFBZ0Isb0pBQ2hCLDBCQUEwQixzRUFDMUIsZUFBZTs7NEZBR04sb0NBQW9DO2tCQWRoRCxTQUFTOytCQUNFLG1DQUFtQyxjQUdqQyxJQUFJLFdBQ1A7d0JBQ1AsYUFBYTt3QkFDYixhQUFhO3dCQUNiLElBQUk7d0JBQ0osZ0JBQWdCO3dCQUNoQiwwQkFBMEI7d0JBQzFCLGVBQWU7cUJBQ2hCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWJzdHJhY3ROb3RpZmljYXRpb25UZW1wbGF0ZUNvbXBvbmVudCB9IGZyb20gJy4uL2Fic3RyYWN0JztcbmltcG9ydCB7IEljb25Db21wb25lbnQgfSBmcm9tICcuLi8uLi9pY29uL2ljb24uY29tcG9uZW50JztcbmltcG9ydCB7IEl0ZW1Db21wb25lbnQgfSBmcm9tICcuLi8uLi9pdGVtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOb3RpZmljYXRpb25UaXRsZUNvbXBvbmVudCB9IGZyb20gJy4uLy4uL3RpdGxlL3RpdGxlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOZ0lmLCBOZ1RlbXBsYXRlT3V0bGV0IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVHJhbnNsYXRlTW9kdWxlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5pbXBvcnQgeyBLZXlWYWx1ZSB9IGZyb20gJ0B0YS9zZXJ2ZXInO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0YS1pbnZvaWNlLXBheW1lbnQtc3RhdHVzLWNoYW5nZWQnLFxuICB0ZW1wbGF0ZVVybDogJy4vaW52b2ljZS1wYXltZW50LXN0YXR1cy1jaGFuZ2VkLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vaW52b2ljZS1wYXltZW50LXN0YXR1cy1jaGFuZ2VkLmNvbXBvbmVudC5zY3NzJ10sXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtcbiAgICBJY29uQ29tcG9uZW50LFxuICAgIEl0ZW1Db21wb25lbnQsXG4gICAgTmdJZixcbiAgICBOZ1RlbXBsYXRlT3V0bGV0LFxuICAgIE5vdGlmaWNhdGlvblRpdGxlQ29tcG9uZW50LFxuICAgIFRyYW5zbGF0ZU1vZHVsZVxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBJbnZvaWNlUGF5bWVudFN0YXR1c0NoYW5nZWRDb21wb25lbnQgZXh0ZW5kcyBBYnN0cmFjdE5vdGlmaWNhdGlvblRlbXBsYXRlQ29tcG9uZW50IHtcbiAgcHVibGljIHRlbXBsYXRlID0gdGhpcy5zaGFyZWRTZXJ2aWNlLnBheW1lbnRTdGF0dXNUZW1wbGF0ZTtcbiAgZ2V0IHBheW1lbnRTdGF0dXMoKSB7XG4gICAgcmV0dXJuICg8S2V5VmFsdWVbXT50aGlzLm5vdGlmaWNhdGlvbi5jb250ZXh0KS5maW5kKGl0ZW0gPT4gaXRlbS5rZXkgPT09ICdQYXltZW50U3RhdHVzJyk/LnZhbHVlID8/IDA7XG4gIH1cbiAgb3ZlcnJpZGUgZ29UbygpIHtcbiAgICBpZiAoIXRoaXMuc2hhcmVkU2VydmljZS5yb3V0aW5nIHx8ICF0aGlzLnNoYXJlZFNlcnZpY2Uucm91dGluZy5pbnZvaWNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHN1cGVyLmdvVG8oKTtcbiAgICB0aGlzLnNoYXJlZFNlcnZpY2Uucm91dGluZz8uaW52b2ljZSh7XG4gICAgICBwcm9qZWN0SWQ6IHRoaXMuZXh0cmFjdHJlZGlyZWN0Q29udGV4dCgnUHJvamVjdElkJyksXG4gICAgICBpbnZvaWNlSWQ6IHRoaXMuZXh0cmFjdHJlZGlyZWN0Q29udGV4dCgnSW52b2ljZUlkJyksXG4gICAgfSk7XG4gIH1cbn1cbiIsIjx0YS1ub3RpZmljYXRpb24taXRlbSBbbm90aWZpY2F0aW9uXT1cInRoaXMubm90aWZpY2F0aW9uXCIgKGNsaWNrKT1cInRoaXMuZ29UbygpXCI+XG4gIDx0YS1ub3RpZmljYXRpb24taXRlbS10aXRsZT5cbiAgICA8ZGl2IGNsYXNzPVwiZmxleC1yb3cgZy1zcGFjZS1zbVwiPlxuICAgICAge3sgJ25vdGlmaWNhdGlvbi5pdGVtcy5pbnZvaWNlLXBheW1lbnQtc3RhdHVzLWNoYW5nZWQudGl0bGUnIHwgdHJhbnNsYXRlOiB0aGlzLmdldFRyYW5zbGF0aW9uKCkgfX1cbiAgICAgIDxkaXYgY2xhc3M9XCJmbGV4XCI+XG4gICAgICAgIEBpZiAodGhpcy50ZW1wbGF0ZSkge1xuICAgICAgICAgIDxuZy1jb250YWluZXJcbiAgICAgICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0XT1cInRoaXMudGVtcGxhdGVcIlxuICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cIntcbiAgICAgICAgICAgICAgZGF0YTogdGhpcy5wYXltZW50U3RhdHVzLFxuICAgICAgICAgICAgfVwiXG4gICAgICAgICAgPjwvbmctY29udGFpbmVyPlxuICAgICAgICB9XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC90YS1ub3RpZmljYXRpb24taXRlbS10aXRsZT5cbiAgPHRhLW5vdGlmaWNhdGlvbi1pdGVtLWljb24gaWNvbj1cImJpbGxzXCI+PC90YS1ub3RpZmljYXRpb24taXRlbS1pY29uPlxuPC90YS1ub3RpZmljYXRpb24taXRlbT5cbiJdfQ==