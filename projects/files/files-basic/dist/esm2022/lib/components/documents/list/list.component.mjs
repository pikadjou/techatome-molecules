import { NgIf, NgFor, AsyncPipe } from '@angular/common';
import { FontIconComponent } from '@ta/icons';
import { Component, EventEmitter, Input, Output, inject } from '@angular/core';
import { TranslateModule } from '@ngx-translate/core';
import { CamDocumentsService, FileType } from '@ta/services';
import { ButtonToolComponent, EmptyComponent, ErrorComponent, LinkComponent, LoaderComponent, MegaoctetComponent, TextComponent, TimeAgoComponent } from '@ta/ui';
import { TaBaseComponent, downloadFile } from '@ta/utils';
import * as i0 from "@angular/core";
import * as i1 from "@ngx-translate/core";
export class DocumentsListComponent extends TaBaseComponent {
    constructor() {
        super(...arguments);
        this.emptyMessage = '';
        this.actions = '';
        this.defaultSelected = [];
        this.readonly = false;
        this.remove = new EventEmitter();
        this.checkedFilesChanged = new EventEmitter();
        this._documentsService = inject(CamDocumentsService);
        this._checkedFiles = [];
        this.FileType = FileType;
    }
    get documents$() {
        return this._documentsService.getDocuments$(this.documentsIds);
    }
    ngOnInit() {
        this._fetch();
    }
    ngOnChanges(changes) {
        // this._fetch();
    }
    openDocument(doc) {
        downloadFile(doc.url);
    }
    removeDocument(doc) {
        this.remove.emit(doc.id);
    }
    isChecked(doc) {
        return this._checkedFiles.find(x => x.id === doc.id);
    }
    check(doc) {
        if (this.isChecked(doc)) {
            this._checkedFiles = this._checkedFiles.filter(x => x.id !== doc.id);
        }
        else {
            this._checkedFiles.push({ id: doc.id, name: doc.name, url: doc.url });
        }
        this.checkedFilesChanged.emit(this._checkedFiles);
    }
    _fetch() {
        this.requestState.asked();
        this._documentsService.fetchDocuments$(this.documentsIds).subscribe({
            next: documents => {
                this._checkedFiles = documents.filter(doc => this.defaultSelected.includes(doc.id));
            },
            complete: () => this.requestState.completed(),
            error: (error) => {
                this.requestState.onError(error.status, error.statusText);
            },
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: DocumentsListComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: DocumentsListComponent, isStandalone: true, selector: "ta-documents-list", inputs: { documentsIds: "documentsIds", emptyMessage: "emptyMessage", actions: "actions", defaultSelected: "defaultSelected", readonly: "readonly" }, outputs: { remove: "remove", checkedFilesChanged: "checkedFilesChanged" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<ta-loader [isLoading]=\"this.requestState.isLoading()\" *ngLet=\"this.documents$ | async as documents\">\n  <ta-error [message]=\"this.requestState.getErrorMessage()\" [code]=\"this.requestState.getErrorStatus()\">\n    <ta-empty\n      [isEmpty]=\"!documents || documents.length === 0\"\n      [text]=\"this.emptyMessage\"\n      [showMessage]=\"!!this.emptyMessage\"\n    >\n      <div class=\"list flex-column g-space-sm\">\n        @for (doc of documents; track doc) {\n          <div>\n            <ng-container\n              *ngTemplateOutlet=\"this.actions !== 'select' ? defaultTemplate : selectTemplate; context: { doc: doc }\"\n            ></ng-container>\n          </div>\n        }\n      </div>\n    </ta-empty>\n  </ta-error>\n</ta-loader>\n\n<ng-template #defaultTemplate let-doc=\"doc\">\n  <div class=\"flex-row g-space-xs justify-content-between\">\n    <div class=\"align-center\">\n      <ta-font-icon name=\"doc\" size=\"xs\"></ta-font-icon>\n      <div>\n        <ta-link [underline]=\"false\" (action)=\"this.openDocument(doc)\">{{ doc.name }}</ta-link>\n        <div class=\"extra flex-row g-space-md\">\n          <ta-time-ago [date]=\"doc.uploadedDate\"></ta-time-ago>\n          <ta-megaoctet [octet]=\"doc.size\"></ta-megaoctet>\n        </div>\n      </div>\n    </div>\n    <div class=\"cta align-content-center\">\n      @if (this.actions === 'select') {\n        <input [disabled]=\"this.readonly\" type=\"checkbox\" [checked]=\"this.isChecked(doc)\" (click)=\"this.check(doc)\" />\n      } @else if (this.actions === 'delete') {\n        <ta-button-tool\n          (action)=\"this.removeDocument(doc)\"\n          icon=\"delete\"\n          [size]=\"'sm'\"\n          [readonly]=\"this.readonly\"\n        ></ta-button-tool>\n      }\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #selectTemplate let-doc=\"doc\">\n  <div\n    class=\"card-document-upload flex-row g-space-xs justify-content-between\"\n    [class.selected]=\"this.isChecked(doc)\"\n    (click)=\"this.check(doc)\"\n  >\n    <div class=\"display flex-column align-items-start\">\n      <ta-link [bold]=\"true\" [underline]=\"false\" (click)=\"$event.stopPropagation()\" (action)=\"this.openDocument(doc)\">\n        {{ doc.name }}\n      </ta-link>\n      <div class=\"flex-row g-space-md\">\n        <div class=\"flex-row align-items-center\">\n          <ta-font-icon name=\"doc\" size=\"xs\"></ta-font-icon>\n          <ta-text>\n            {{ 'communication.documents.file-type.' + this.FileType[doc.fileType].toLocaleLowerCase() | translate }}\n          </ta-text>\n        </div>\n        <ta-megaoctet [icon]=\"true\" [octet]=\"doc.size\"></ta-megaoctet>\n      </div>\n    </div>\n    <div class=\"button align-content-center\">\n      @if (this.actions === 'select') {\n        <input type=\"checkbox\" [checked]=\"this.isChecked(doc)\" />\n      } @else if (this.actions === 'delete') {\n        <ta-button-tool (action)=\"this.removeDocument(doc)\" icon=\"delete\" [size]=\"'sm'\"></ta-button-tool>\n      }\n    </div>\n  </div>\n</ng-template>\n", styles: ["ta-font-icon{color:var(--ta-icon-brand-primary)}.extra{font-size:var(--ta-font-body-sm-default-size);line-height:var(--ta-font-body-sm-default-line);font-weight:var(--ta-font-body-sm-default-weight);color:var(--ta-text-tertiary)}input{width:20px;height:20px}.button{padding:var(--ta-space-sm)}.card-document-upload{padding:var(--ta-space-md);margin-right:var(--ta-space-sm)}.card-document-upload.selected{border:1px solid var(--ta-border-brand);border-radius:var(--ta-radius-rounded);background-color:var(--ta-surface-brand-tertiary)}.card-document-upload .display{gap:var(--ta-space-sm)}\n"], dependencies: [{ kind: "pipe", type: AsyncPipe, name: "async" }, { kind: "component", type: ButtonToolComponent, selector: "ta-button-tool", inputs: ["state", "type", "size", "icon", "stopPropagationActivation", "readonly"], outputs: ["action"] }, { kind: "component", type: EmptyComponent, selector: "ta-empty", inputs: ["isEmpty", "isLight", "showMessage", "text", "type", "icon", "iconSize"] }, { kind: "component", type: ErrorComponent, selector: "ta-error", inputs: ["message", "code"] }, { kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "component", type: LinkComponent, selector: "ta-link", inputs: ["state", "underline", "bold", "size", "icon"], outputs: ["action"] }, { kind: "component", type: LoaderComponent, selector: "ta-loader", inputs: ["isLoading", "skeleton"] }, { kind: "component", type: MegaoctetComponent, selector: "ta-megaoctet", inputs: ["octet", "icon"] }, { kind: "component", type: TextComponent, selector: "ta-text", inputs: ["size", "isBold", "color"] }, { kind: "component", type: TimeAgoComponent, selector: "ta-time-ago", inputs: ["date", "withHours"] }, { kind: "ngmodule", type: TranslateModule }, { kind: "pipe", type: i1.TranslatePipe, name: "translate" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: DocumentsListComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-documents-list', standalone: true, imports: [NgIf, NgFor, AsyncPipe, ButtonToolComponent, EmptyComponent, ErrorComponent, FontIconComponent, LinkComponent, LoaderComponent, MegaoctetComponent, TextComponent, TimeAgoComponent, TranslateModule], template: "<ta-loader [isLoading]=\"this.requestState.isLoading()\" *ngLet=\"this.documents$ | async as documents\">\n  <ta-error [message]=\"this.requestState.getErrorMessage()\" [code]=\"this.requestState.getErrorStatus()\">\n    <ta-empty\n      [isEmpty]=\"!documents || documents.length === 0\"\n      [text]=\"this.emptyMessage\"\n      [showMessage]=\"!!this.emptyMessage\"\n    >\n      <div class=\"list flex-column g-space-sm\">\n        @for (doc of documents; track doc) {\n          <div>\n            <ng-container\n              *ngTemplateOutlet=\"this.actions !== 'select' ? defaultTemplate : selectTemplate; context: { doc: doc }\"\n            ></ng-container>\n          </div>\n        }\n      </div>\n    </ta-empty>\n  </ta-error>\n</ta-loader>\n\n<ng-template #defaultTemplate let-doc=\"doc\">\n  <div class=\"flex-row g-space-xs justify-content-between\">\n    <div class=\"align-center\">\n      <ta-font-icon name=\"doc\" size=\"xs\"></ta-font-icon>\n      <div>\n        <ta-link [underline]=\"false\" (action)=\"this.openDocument(doc)\">{{ doc.name }}</ta-link>\n        <div class=\"extra flex-row g-space-md\">\n          <ta-time-ago [date]=\"doc.uploadedDate\"></ta-time-ago>\n          <ta-megaoctet [octet]=\"doc.size\"></ta-megaoctet>\n        </div>\n      </div>\n    </div>\n    <div class=\"cta align-content-center\">\n      @if (this.actions === 'select') {\n        <input [disabled]=\"this.readonly\" type=\"checkbox\" [checked]=\"this.isChecked(doc)\" (click)=\"this.check(doc)\" />\n      } @else if (this.actions === 'delete') {\n        <ta-button-tool\n          (action)=\"this.removeDocument(doc)\"\n          icon=\"delete\"\n          [size]=\"'sm'\"\n          [readonly]=\"this.readonly\"\n        ></ta-button-tool>\n      }\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #selectTemplate let-doc=\"doc\">\n  <div\n    class=\"card-document-upload flex-row g-space-xs justify-content-between\"\n    [class.selected]=\"this.isChecked(doc)\"\n    (click)=\"this.check(doc)\"\n  >\n    <div class=\"display flex-column align-items-start\">\n      <ta-link [bold]=\"true\" [underline]=\"false\" (click)=\"$event.stopPropagation()\" (action)=\"this.openDocument(doc)\">\n        {{ doc.name }}\n      </ta-link>\n      <div class=\"flex-row g-space-md\">\n        <div class=\"flex-row align-items-center\">\n          <ta-font-icon name=\"doc\" size=\"xs\"></ta-font-icon>\n          <ta-text>\n            {{ 'communication.documents.file-type.' + this.FileType[doc.fileType].toLocaleLowerCase() | translate }}\n          </ta-text>\n        </div>\n        <ta-megaoctet [icon]=\"true\" [octet]=\"doc.size\"></ta-megaoctet>\n      </div>\n    </div>\n    <div class=\"button align-content-center\">\n      @if (this.actions === 'select') {\n        <input type=\"checkbox\" [checked]=\"this.isChecked(doc)\" />\n      } @else if (this.actions === 'delete') {\n        <ta-button-tool (action)=\"this.removeDocument(doc)\" icon=\"delete\" [size]=\"'sm'\"></ta-button-tool>\n      }\n    </div>\n  </div>\n</ng-template>\n", styles: ["ta-font-icon{color:var(--ta-icon-brand-primary)}.extra{font-size:var(--ta-font-body-sm-default-size);line-height:var(--ta-font-body-sm-default-line);font-weight:var(--ta-font-body-sm-default-weight);color:var(--ta-text-tertiary)}input{width:20px;height:20px}.button{padding:var(--ta-space-sm)}.card-document-upload{padding:var(--ta-space-md);margin-right:var(--ta-space-sm)}.card-document-upload.selected{border:1px solid var(--ta-border-brand);border-radius:var(--ta-radius-rounded);background-color:var(--ta-surface-brand-tertiary)}.card-document-upload .display{gap:var(--ta-space-sm)}\n"] }]
        }], propDecorators: { documentsIds: [{
                type: Input
            }], emptyMessage: [{
                type: Input
            }], actions: [{
                type: Input
            }], defaultSelected: [{
                type: Input
            }], readonly: [{
                type: Input
            }], remove: [{
                type: Output
            }], checkedFilesChanged: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,