import { NgIf, NgFor } from '@angular/common';
import { FontIconComponent, LocalIconComponent } from '@ta/icons';
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { EmptyComponent } from '@ta/ui';
import { TaBaseComponent, StopPropagationDirective, SafePipe } from '@ta/utils';
import { FileCardComponent } from './card/file/file-card.component';
import * as i0 from "@angular/core";
export class FileListComponent extends TaBaseComponent {
    constructor() {
        super();
        this.files = [];
        this.canDeleteFile = false;
        this.fileSelected = new EventEmitter();
        this.moreInformationSelected = new EventEmitter();
        this.fileDeleted = new EventEmitter();
    }
    canDisplayFileType(fileType) {
        if (this.files && this.files[0])
            return this.files[0].type === fileType;
        return false;
    }
    onFileSelected(file, index) {
        if (file.isLoading)
            return;
        this.fileSelected.emit({ ...file, ...{ index } });
    }
    onMoreInformationSelected(file) {
        if (file.isLoading)
            return;
        this.moreInformationSelected.emit(file);
    }
    deleteFile(fileData) {
        this.fileDeleted.emit(fileData);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: FileListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: FileListComponent, isStandalone: true, selector: "ta-files-list", inputs: { files: "files", canDeleteFile: "canDeleteFile" }, outputs: { fileSelected: "fileSelected", moreInformationSelected: "moreInformationSelected", fileDeleted: "fileDeleted" }, usesInheritance: true, ngImport: i0, template: "<ta-empty [isEmpty]=\"this.files.length === 0\">\n  @if (this.canDisplayFileType('Image')) {\n    <div class=\"files-container\">\n      @for (file of this.files; track this.trackById($index, file); let i = $index) {\n        <div class=\"info-container\" (click)=\"this.onFileSelected(file, i)\">\n          @if (this.canDeleteFile) {\n            <div class=\"delete\" (click)=\"this.deleteFile(file)\" appStopPropagation>\n              <div class=\"delete-icon\">\n                <ta-font-icon type=\"sm\" name=\"close\"></ta-font-icon>\n              </div>\n            </div>\n          }\n\n          @if (file.type === 'Image') {\n            <img [src]=\"file.thumbnailUrl || file.url | safe: 'url'\" />\n          } @else if (file.type === 'Document') {\n            <ta-file-card [file]=\"file\"></ta-file-card>\n          }\n\n          @if (file.isLoading) {\n            <div class=\"is-loading\">\n              <ta-local-icon\n                class=\"align-middle\"\n                [rotation]=\"file.isLoading\"\n                [type]=\"this.icon.Loader\"\n                [size]=\"'xs'\"\n              ></ta-local-icon>\n            </div>\n          }\n          @if (file.isSelected) {\n            <div class=\"is-selected\">\n              <ta-local-icon class=\"align-middle\" [type]=\"this.icon.Checked\" [size]=\"'xs'\"></ta-local-icon>\n            </div>\n          }\n        </div>\n      }\n    </div>\n  }\n\n  @if (canDisplayFileType('Document')) {\n    <div class=\"row g-2 row-cols-1 row-cols-md-2 row-cols-xl-3 mb-space-lg\">\n      @for (file of this.files; track this.trackById($index, file); let i = $index) {\n        <div>\n          @if (file.type === 'Document') {\n            <ta-file-card\n              (fileSelected)=\"this.onFileSelected(file, i)\"\n              (moreInformationSelected)=\"this.onMoreInformationSelected(file)\"\n              [file]=\"file\"\n            ></ta-file-card>\n          }\n        </div>\n      }\n    </div>\n  }\n</ta-empty>\n", styles: ["img{border-radius:5px;width:100%}.files-container{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:flex-start;row-gap:1em;column-gap:5%}.files-container .info-container{position:relative;width:30%;margin-top:auto;margin-bottom:auto}.files-container .info-container .delete{position:absolute;width:32px;height:32px;border-radius:32px;top:4px;right:4px;background:var(--ta-neutral-50)}.files-container .info-container .delete .delete-icon{width:fit-content;display:block;height:fit-content;margin:6px auto auto}.files-container .info-container .is-loading,.files-container .info-container .is-selected{width:100%;height:100%;opacity:.5;position:absolute;inset:0;background-color:var(--ta-neutral-100)}.files-container .info-container .is-loading app-local-icon,.files-container .info-container .is-selected app-local-icon{position:relative;transform:translateY(-50%);top:40%}\n"], dependencies: [{ kind: "component", type: EmptyComponent, selector: "ta-empty", inputs: ["isEmpty", "isLight", "showMessage", "text", "type", "icon", "iconSize"] }, { kind: "component", type: FileCardComponent, selector: "ta-file-card", inputs: ["file"], outputs: ["fileSelected", "moreInformationSelected"] }, { kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "component", type: LocalIconComponent, selector: "ta-local-icon", inputs: ["type", "size", "rotation"] }, { kind: "pipe", type: SafePipe, name: "safe" }, { kind: "directive", type: StopPropagationDirective, selector: "[appStopPropagation]", inputs: ["stopPropagationActivation"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: FileListComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-files-list', standalone: true, imports: [NgIf, NgFor, EmptyComponent, FileCardComponent, FontIconComponent, LocalIconComponent, SafePipe, StopPropagationDirective], template: "<ta-empty [isEmpty]=\"this.files.length === 0\">\n  @if (this.canDisplayFileType('Image')) {\n    <div class=\"files-container\">\n      @for (file of this.files; track this.trackById($index, file); let i = $index) {\n        <div class=\"info-container\" (click)=\"this.onFileSelected(file, i)\">\n          @if (this.canDeleteFile) {\n            <div class=\"delete\" (click)=\"this.deleteFile(file)\" appStopPropagation>\n              <div class=\"delete-icon\">\n                <ta-font-icon type=\"sm\" name=\"close\"></ta-font-icon>\n              </div>\n            </div>\n          }\n\n          @if (file.type === 'Image') {\n            <img [src]=\"file.thumbnailUrl || file.url | safe: 'url'\" />\n          } @else if (file.type === 'Document') {\n            <ta-file-card [file]=\"file\"></ta-file-card>\n          }\n\n          @if (file.isLoading) {\n            <div class=\"is-loading\">\n              <ta-local-icon\n                class=\"align-middle\"\n                [rotation]=\"file.isLoading\"\n                [type]=\"this.icon.Loader\"\n                [size]=\"'xs'\"\n              ></ta-local-icon>\n            </div>\n          }\n          @if (file.isSelected) {\n            <div class=\"is-selected\">\n              <ta-local-icon class=\"align-middle\" [type]=\"this.icon.Checked\" [size]=\"'xs'\"></ta-local-icon>\n            </div>\n          }\n        </div>\n      }\n    </div>\n  }\n\n  @if (canDisplayFileType('Document')) {\n    <div class=\"row g-2 row-cols-1 row-cols-md-2 row-cols-xl-3 mb-space-lg\">\n      @for (file of this.files; track this.trackById($index, file); let i = $index) {\n        <div>\n          @if (file.type === 'Document') {\n            <ta-file-card\n              (fileSelected)=\"this.onFileSelected(file, i)\"\n              (moreInformationSelected)=\"this.onMoreInformationSelected(file)\"\n              [file]=\"file\"\n            ></ta-file-card>\n          }\n        </div>\n      }\n    </div>\n  }\n</ta-empty>\n", styles: ["img{border-radius:5px;width:100%}.files-container{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:flex-start;row-gap:1em;column-gap:5%}.files-container .info-container{position:relative;width:30%;margin-top:auto;margin-bottom:auto}.files-container .info-container .delete{position:absolute;width:32px;height:32px;border-radius:32px;top:4px;right:4px;background:var(--ta-neutral-50)}.files-container .info-container .delete .delete-icon{width:fit-content;display:block;height:fit-content;margin:6px auto auto}.files-container .info-container .is-loading,.files-container .info-container .is-selected{width:100%;height:100%;opacity:.5;position:absolute;inset:0;background-color:var(--ta-neutral-100)}.files-container .info-container .is-loading app-local-icon,.files-container .info-container .is-selected app-local-icon{position:relative;transform:translateY(-50%);top:40%}\n"] }]
        }], ctorParameters: () => [], propDecorators: { files: [{
                type: Input
            }], canDeleteFile: [{
                type: Input
            }], fileSelected: [{
                type: Output
            }], moreInformationSelected: [{
                type: Output
            }], fileDeleted: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZXMtbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbXBvbmVudHMvbGlzdC9maWxlcy1saXN0LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9saXN0L2ZpbGVzLWxpc3QuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUM5QyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDbEUsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV2RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQ3hDLE9BQU8sRUFBRSxlQUFlLEVBQXNCLHdCQUF3QixFQUFFLFFBQVEsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUNwRyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQzs7QUFTcEUsTUFBTSxPQUFPLGlCQUFrQixTQUFRLGVBQWU7SUFnQnBEO1FBQ0UsS0FBSyxFQUFFLENBQUM7UUFmVixVQUFLLEdBQWUsRUFBRSxDQUFDO1FBR3ZCLGtCQUFhLEdBQVksS0FBSyxDQUFDO1FBRy9CLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQWdDLENBQUM7UUFHaEUsNEJBQXVCLEdBQTJCLElBQUksWUFBWSxFQUFZLENBQUM7UUFHL0UsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBWSxDQUFDO0lBSTNDLENBQUM7SUFFTSxrQkFBa0IsQ0FBQyxRQUFrQjtRQUMxQyxJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFBRSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxLQUFLLFFBQVEsQ0FBQztRQUV4RSxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFFTSxjQUFjLENBQUMsSUFBYyxFQUFFLEtBQWE7UUFDakQsSUFBSSxJQUFJLENBQUMsU0FBUztZQUFFLE9BQU87UUFFM0IsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3BELENBQUM7SUFFTSx5QkFBeUIsQ0FBQyxJQUFjO1FBQzdDLElBQUksSUFBSSxDQUFDLFNBQVM7WUFBRSxPQUFPO1FBRTNCLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVNLFVBQVUsQ0FBQyxRQUFrQjtRQUNsQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsQyxDQUFDOytHQXhDVSxpQkFBaUI7bUdBQWpCLGlCQUFpQix1UkNmOUIsKzlEQXVEQSxtN0JEMUN5QixjQUFjLHdJQUFFLGlCQUFpQixpSUFBRSxpQkFBaUIsbUZBQUUsa0JBQWtCLDJGQUFFLFFBQVEsNkNBQUUsd0JBQXdCOzs0RkFFeEgsaUJBQWlCO2tCQVA3QixTQUFTOytCQUNBLGVBQWUsY0FHWCxJQUFJLFdBQ1AsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLGNBQWMsRUFBRSxpQkFBaUIsRUFBRSxpQkFBaUIsRUFBRSxrQkFBa0IsRUFBRSxRQUFRLEVBQUUsd0JBQXdCLENBQUM7d0RBSXBJLEtBQUs7c0JBREosS0FBSztnQkFJTixhQUFhO3NCQURaLEtBQUs7Z0JBSU4sWUFBWTtzQkFEWCxNQUFNO2dCQUlQLHVCQUF1QjtzQkFEdEIsTUFBTTtnQkFJUCxXQUFXO3NCQURWLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ0lmLCBOZ0ZvciB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBGb250SWNvbkNvbXBvbmVudCwgTG9jYWxJY29uQ29tcG9uZW50IH0gZnJvbSAnQHRhL2ljb25zJztcbmltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IEVtcHR5Q29tcG9uZW50IH0gZnJvbSAnQHRhL3VpJztcbmltcG9ydCB7IFRhQmFzZUNvbXBvbmVudCwgRmlsZURhdGEsIEZpbGVUeXBlLCBTdG9wUHJvcGFnYXRpb25EaXJlY3RpdmUsIFNhZmVQaXBlIH0gZnJvbSAnQHRhL3V0aWxzJztcbmltcG9ydCB7IEZpbGVDYXJkQ29tcG9uZW50IH0gZnJvbSAnLi9jYXJkL2ZpbGUvZmlsZS1jYXJkLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuc2VsZWN0b3I6ICd0YS1maWxlcy1saXN0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2ZpbGVzLWxpc3QuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9maWxlcy1saXN0LmNvbXBvbmVudC5zY3NzJ10sXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtOZ0lmLCBOZ0ZvciwgRW1wdHlDb21wb25lbnQsIEZpbGVDYXJkQ29tcG9uZW50LCBGb250SWNvbkNvbXBvbmVudCwgTG9jYWxJY29uQ29tcG9uZW50LCBTYWZlUGlwZSwgU3RvcFByb3BhZ2F0aW9uRGlyZWN0aXZlXSxcbn0pXG5leHBvcnQgY2xhc3MgRmlsZUxpc3RDb21wb25lbnQgZXh0ZW5kcyBUYUJhc2VDb21wb25lbnQge1xuICBASW5wdXQoKVxuICBmaWxlczogRmlsZURhdGFbXSA9IFtdO1xuXG4gIEBJbnB1dCgpXG4gIGNhbkRlbGV0ZUZpbGU6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBAT3V0cHV0KClcbiAgZmlsZVNlbGVjdGVkID0gbmV3IEV2ZW50RW1pdHRlcjxGaWxlRGF0YSAmIHsgaW5kZXg6IG51bWJlciB9PigpO1xuXG4gIEBPdXRwdXQoKVxuICBtb3JlSW5mb3JtYXRpb25TZWxlY3RlZDogRXZlbnRFbWl0dGVyPEZpbGVEYXRhPiA9IG5ldyBFdmVudEVtaXR0ZXI8RmlsZURhdGE+KCk7XG5cbiAgQE91dHB1dCgpXG4gIGZpbGVEZWxldGVkID0gbmV3IEV2ZW50RW1pdHRlcjxGaWxlRGF0YT4oKTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgcHVibGljIGNhbkRpc3BsYXlGaWxlVHlwZShmaWxlVHlwZTogRmlsZVR5cGUpOiBib29sZWFuIHtcbiAgICBpZiAodGhpcy5maWxlcyAmJiB0aGlzLmZpbGVzWzBdKSByZXR1cm4gdGhpcy5maWxlc1swXS50eXBlID09PSBmaWxlVHlwZTtcblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHB1YmxpYyBvbkZpbGVTZWxlY3RlZChmaWxlOiBGaWxlRGF0YSwgaW5kZXg6IG51bWJlcikge1xuICAgIGlmIChmaWxlLmlzTG9hZGluZykgcmV0dXJuO1xuXG4gICAgdGhpcy5maWxlU2VsZWN0ZWQuZW1pdCh7IC4uLmZpbGUsIC4uLnsgaW5kZXggfSB9KTtcbiAgfVxuXG4gIHB1YmxpYyBvbk1vcmVJbmZvcm1hdGlvblNlbGVjdGVkKGZpbGU6IEZpbGVEYXRhKSB7XG4gICAgaWYgKGZpbGUuaXNMb2FkaW5nKSByZXR1cm47XG5cbiAgICB0aGlzLm1vcmVJbmZvcm1hdGlvblNlbGVjdGVkLmVtaXQoZmlsZSk7XG4gIH1cblxuICBwdWJsaWMgZGVsZXRlRmlsZShmaWxlRGF0YTogRmlsZURhdGEpIHtcbiAgICB0aGlzLmZpbGVEZWxldGVkLmVtaXQoZmlsZURhdGEpO1xuICB9XG59XG4iLCI8dGEtZW1wdHkgW2lzRW1wdHldPVwidGhpcy5maWxlcy5sZW5ndGggPT09IDBcIj5cbiAgQGlmICh0aGlzLmNhbkRpc3BsYXlGaWxlVHlwZSgnSW1hZ2UnKSkge1xuICAgIDxkaXYgY2xhc3M9XCJmaWxlcy1jb250YWluZXJcIj5cbiAgICAgIEBmb3IgKGZpbGUgb2YgdGhpcy5maWxlczsgdHJhY2sgdGhpcy50cmFja0J5SWQoJGluZGV4LCBmaWxlKTsgbGV0IGkgPSAkaW5kZXgpIHtcbiAgICAgICAgPGRpdiBjbGFzcz1cImluZm8tY29udGFpbmVyXCIgKGNsaWNrKT1cInRoaXMub25GaWxlU2VsZWN0ZWQoZmlsZSwgaSlcIj5cbiAgICAgICAgICBAaWYgKHRoaXMuY2FuRGVsZXRlRmlsZSkge1xuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRlbGV0ZVwiIChjbGljayk9XCJ0aGlzLmRlbGV0ZUZpbGUoZmlsZSlcIiBhcHBTdG9wUHJvcGFnYXRpb24+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkZWxldGUtaWNvblwiPlxuICAgICAgICAgICAgICAgIDx0YS1mb250LWljb24gdHlwZT1cInNtXCIgbmFtZT1cImNsb3NlXCI+PC90YS1mb250LWljb24+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgQGlmIChmaWxlLnR5cGUgPT09ICdJbWFnZScpIHtcbiAgICAgICAgICAgIDxpbWcgW3NyY109XCJmaWxlLnRodW1ibmFpbFVybCB8fCBmaWxlLnVybCB8IHNhZmU6ICd1cmwnXCIgLz5cbiAgICAgICAgICB9IEBlbHNlIGlmIChmaWxlLnR5cGUgPT09ICdEb2N1bWVudCcpIHtcbiAgICAgICAgICAgIDx0YS1maWxlLWNhcmQgW2ZpbGVdPVwiZmlsZVwiPjwvdGEtZmlsZS1jYXJkPlxuICAgICAgICAgIH1cblxuICAgICAgICAgIEBpZiAoZmlsZS5pc0xvYWRpbmcpIHtcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1sb2FkaW5nXCI+XG4gICAgICAgICAgICAgIDx0YS1sb2NhbC1pY29uXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJhbGlnbi1taWRkbGVcIlxuICAgICAgICAgICAgICAgIFtyb3RhdGlvbl09XCJmaWxlLmlzTG9hZGluZ1wiXG4gICAgICAgICAgICAgICAgW3R5cGVdPVwidGhpcy5pY29uLkxvYWRlclwiXG4gICAgICAgICAgICAgICAgW3NpemVdPVwiJ3hzJ1wiXG4gICAgICAgICAgICAgID48L3RhLWxvY2FsLWljb24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICB9XG4gICAgICAgICAgQGlmIChmaWxlLmlzU2VsZWN0ZWQpIHtcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpcy1zZWxlY3RlZFwiPlxuICAgICAgICAgICAgICA8dGEtbG9jYWwtaWNvbiBjbGFzcz1cImFsaWduLW1pZGRsZVwiIFt0eXBlXT1cInRoaXMuaWNvbi5DaGVja2VkXCIgW3NpemVdPVwiJ3hzJ1wiPjwvdGEtbG9jYWwtaWNvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIH1cbiAgICAgICAgPC9kaXY+XG4gICAgICB9XG4gICAgPC9kaXY+XG4gIH1cblxuICBAaWYgKGNhbkRpc3BsYXlGaWxlVHlwZSgnRG9jdW1lbnQnKSkge1xuICAgIDxkaXYgY2xhc3M9XCJyb3cgZy0yIHJvdy1jb2xzLTEgcm93LWNvbHMtbWQtMiByb3ctY29scy14bC0zIG1iLXNwYWNlLWxnXCI+XG4gICAgICBAZm9yIChmaWxlIG9mIHRoaXMuZmlsZXM7IHRyYWNrIHRoaXMudHJhY2tCeUlkKCRpbmRleCwgZmlsZSk7IGxldCBpID0gJGluZGV4KSB7XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgQGlmIChmaWxlLnR5cGUgPT09ICdEb2N1bWVudCcpIHtcbiAgICAgICAgICAgIDx0YS1maWxlLWNhcmRcbiAgICAgICAgICAgICAgKGZpbGVTZWxlY3RlZCk9XCJ0aGlzLm9uRmlsZVNlbGVjdGVkKGZpbGUsIGkpXCJcbiAgICAgICAgICAgICAgKG1vcmVJbmZvcm1hdGlvblNlbGVjdGVkKT1cInRoaXMub25Nb3JlSW5mb3JtYXRpb25TZWxlY3RlZChmaWxlKVwiXG4gICAgICAgICAgICAgIFtmaWxlXT1cImZpbGVcIlxuICAgICAgICAgICAgPjwvdGEtZmlsZS1jYXJkPlxuICAgICAgICAgIH1cbiAgICAgICAgPC9kaXY+XG4gICAgICB9XG4gICAgPC9kaXY+XG4gIH1cbjwvdGEtZW1wdHk+XG4iXX0=