{"version":3,"file":"ta-files-extended.mjs","sources":["../../src/lib/components/upload/files-upload.component.ts","../../src/lib/components/upload/files-upload.component.html","../../src/lib/components/display/files-display.component.ts","../../src/lib/components/display/files-display.component.html","../../src/lib/services/document/upload-document-form.service.ts","../../src/lib/files-extended.module.ts","../../src/public-api.ts","../../src/ta-files-extended.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { Camera, CameraResultType } from '@capacitor/camera';\nimport { FilePicker, PickedFile } from '@capawesome/capacitor-file-picker';\n\nimport { ActionButtonComponent, ActionButtonData, ButtonComponent } from '@ta/ui';\nimport { FileStructure, pathToFile, pickImages } from '@ta/utils';\n\nexport type Feature = 'take-pic' | 'upload-pic' | 'upload-file';\n\n@Component({\n  selector: 'ta-files-upload',\n  templateUrl: './files-upload.component.html',\n  styleUrls: ['./files-upload.component.scss'],\n  standalone: true,\n  imports: [ActionButtonComponent, ButtonComponent],\n})\nexport class UploadComponent {\n  @Input()\n  features: Feature[] = [];\n\n  @Input()\n  canSelectMultipleFiles: boolean = false;\n\n  @Input()\n  showInActionButton: boolean = true;\n\n  @Output()\n  filesPicked = new EventEmitter<FileStructure[]>();\n\n  get addActions(): ActionButtonData[] {\n    const actionsAvailable: ActionButtonData[] = [];\n\n    if (this._haveFeature('take-pic')) {\n      actionsAvailable.push({\n        label: 'Take',\n        icon: 'add_a_photo',\n        callback: _ => this._takePic(),\n      });\n    }\n\n    if (this._haveFeature('upload-pic')) {\n      actionsAvailable.push({\n        label: 'Upload',\n        icon: 'insert_photo',\n        callback: _ => this._uploadPic(),\n      });\n    }\n\n    if (this._haveFeature('upload-file')) {\n      actionsAvailable.push({\n        label: 'upload file',\n        icon: 'upload_file',\n        callback: _ => this._uploadFile(),\n      });\n    }\n\n    return actionsAvailable;\n  }\n\n  private _haveFeature(feature: Feature) {\n    return this.features.includes(feature);\n  }\n\n  private async _takePic() {\n    const image = await Camera.getPhoto({\n      quality: 60,\n      allowEditing: true,\n      saveToGallery: true,\n      resultType: CameraResultType.Uri,\n    });\n\n    const file = {\n      file: await pathToFile(image),\n      localUrl: image.webPath || null,\n    };\n    if (!file.file) {\n      return;\n    }\n    this.filesPicked.emit([file]);\n  }\n\n  private async _uploadPic() {\n    const pics = await pickImages();\n    this.filesPicked.emit(pics);\n  }\n\n  private async _uploadFile() {\n    // todo move into a capacitor filesystem service\n    const pickFiles = await FilePicker.pickFiles({\n      multiple: this.canSelectMultipleFiles,\n      types: [\n        // pdf\n        'application/pdf',\n        // word\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n        'application/msword',\n        // excel\n        'application/vnd.ms-excel',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n        // text\n        'text/plain',\n      ],\n    });\n\n    const files = [];\n    for (let file of pickFiles.files) {\n      if (!file || !file.blob) continue;\n\n      files.push({ file: this._localToFile(file), localUrl: null });\n    }\n\n    this.filesPicked.emit(files);\n  }\n\n  private _localToFile(file: PickedFile): File {\n    return new File([file.blob!], file.name, {\n      type: file.mimeType,\n    });\n  }\n}\n","@if (this.showInActionButton) {\n  <ta-action-button [actions]=\"this.addActions\"> </ta-action-button>\n} @else {\n  @for (action of this.addActions; track action) {\n    <ta-button (action)=\"action.callback()\">\n      {{ action.label }}\n    </ta-button>\n  }\n}\n","import { AsyncPipe, NgIf } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { FileListComponent } from '@ta/files-basic';\nimport { Menu, ToggleNavigationComponent } from '@ta/menu';\nimport { ErrorComponent, LoaderComponent } from '@ta/ui';\nimport { FileData, FileStructure, FileType, TaBaseComponent } from '@ta/utils';\n\nimport { Feature, UploadComponent } from '../upload/files-upload.component';\n\n@Component({\n  selector: 'ta-files-display',\n  templateUrl: './files-display.component.html',\n  styleUrls: ['./files-display.component.scss'],\n  standalone: true,\n  imports: [\n    NgIf,\n    AsyncPipe,\n    LoaderComponent,\n    ErrorComponent,\n    UploadComponent,\n    ToggleNavigationComponent,\n    FileListComponent,\n  ],\n})\nexport class FilesDisplayComponent extends TaBaseComponent {\n  @Input() files$!: Observable<FileData[]>;\n  @Input() menu!: Menu;\n  @Input() canAddFile: boolean = true;\n  @Input() tempFiles!: FileData[];\n  @Input() fileType!: FileType;\n\n  @Output() fileSelected: EventEmitter<FileData & { index: number }> = new EventEmitter();\n  @Output() moreInformationSelected: EventEmitter<FileData> = new EventEmitter();\n  @Output() fileUploading: EventEmitter<FileStructure[]> = new EventEmitter();\n\n  get canSelectMultipleFiles(): boolean {\n    switch (this.fileType) {\n      case 'Document':\n        return false;\n      case 'Image':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  get canDisplayTempsFiles(): boolean {\n    return this.tempFiles?.length > 0;\n  }\n\n  public getFeature(): Feature[] {\n    switch (this.fileType) {\n      case 'Document':\n        return ['upload-file'];\n      case 'Image':\n        return ['upload-pic'];\n      default:\n        return [];\n    }\n  }\n}\n","<div class=\"toggle-navigation\">\n  <ta-toggle-navigation [menu]=\"this.menu\" [container]=\"'tab'\"></ta-toggle-navigation>\n</div>\n\n@if (this.canDisplayTempsFiles) {\n  <div>\n    <ta-files-list [files]=\"this.tempFiles\"></ta-files-list>\n    <hr />\n  </div>\n}\n\n<ta-loader [isLoading]=\"this.requestState.isLoading()\" skeleton=\"fileList\">\n  <ta-error [message]=\"this.requestState.getErrorMessage()\" [code]=\"this.requestState.getErrorStatus()\">\n    <div class=\"list\">\n      <ta-files-list\n        [files]=\"(this.files$ | async) || []\"\n        (fileSelected)=\"this.fileSelected.emit($event)\"\n        (moreInformationSelected)=\"this.moreInformationSelected.emit($event)\"\n      >\n      </ta-files-list>\n    </div>\n  </ta-error>\n</ta-loader>\n\n@if (this.canAddFile === true) {\n  <div class=\"floating-add\">\n    <ta-files-upload\n      [features]=\"this.getFeature()\"\n      [canSelectMultipleFiles]=\"this.canSelectMultipleFiles\"\n      (filesPicked)=\"this.fileUploading.emit($event)\"\n    >\n    </ta-files-upload>\n  </div>\n}\n","import { Injectable } from '@angular/core';\n\nimport { map } from 'rxjs/operators';\n\nimport { of } from 'rxjs';\n\nimport { InputBase, InputDropdown, InputPanel, InputTextarea } from '@ta/form-model';\nimport { TranslatedEnumeration } from '@ta/services';\n\nimport { UploadDocumentData } from './upload-document-data';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UploadDocumentFormService {\n  constructor() {}\n\n  public getGroupForm(data: UploadDocumentData): InputBase<any>[] {\n    return [\n      new InputPanel({\n        key: 'panel',\n        label: 'documents.upload.dialog.title',\n        containerClass: ['highlight-title', 'no-title-space', 'p-20'],\n        children: [\n          new InputDropdown({\n            key: 'documentType',\n            label: 'documents.upload.dialog.document-type',\n            options$: data.documentTypes$.pipe(\n              map((fileTypes: TranslatedEnumeration[]) => {\n                return fileTypes.map(fileType => {\n                  return {\n                    id: fileType.id.toString(),\n                    name: fileType.translatedValue,\n                  };\n                });\n              })\n            ),\n            multiple: false,\n            visible$: of(true),\n          }),\n          new InputTextarea({\n            key: 'description',\n            label: 'documents.upload.dialog.description',\n            value: data.description,\n          }),\n        ],\n      }),\n    ];\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { TaFilesBasicModule } from '@ta/files-basic';\nimport { TaFormModule } from '@ta/form-basic';\nimport { TaFormInputsModule } from '@ta/form-input';\nimport { TaIconsModule } from '@ta/icons';\nimport { TaMenuModule } from '@ta/menu';\nimport { TaEnumerationService } from '@ta/services';\nimport { TaCardModule, TaContainerModule, TaUiModule } from '@ta/ui';\nimport { TaDirectivePipeModule } from '@ta/utils';\n\nimport { FilesDisplayComponent } from './components/display/files-display.component';\nimport { UploadComponent } from './components/upload/files-upload.component';\nimport { UploadDocumentFormService } from './services/document/upload-document-form.service';\n\n/**\n * @deprecated Use standalone components instead.\n * This module will be removed in a future version.\n *\n * @example\n * // Instead of importing the module:\n * // import { TaFilesExtendedModule } from '@ta/library-name';\n *\n * // Import the standalone components directly:\n * import { FilesDisplayComponent, UploadComponent, TaFilesBasicModule } from '@ta/library-name';\n */\n@NgModule({\n  declarations: [],\n  imports: [\n    TaContainerModule,\n    TaDirectivePipeModule,\n    TaFormModule,\n    TaUiModule,\n    TaCardModule,\n    CommonModule,\n    TaFormInputsModule,\n    TaFilesBasicModule,\n    TaIconsModule,\n    TaMenuModule,\n    FilesDisplayComponent,\n    UploadComponent,\n  ],\n  exports: [FilesDisplayComponent, UploadComponent, TaFilesBasicModule],\n  providers: [TaEnumerationService, UploadDocumentFormService],\n})\nexport class TaFilesExtendedModule {}\n","/*\n * Public API Surface of files\n */\n\nexport * from './lib/components/public-api';\n\nexport * from './lib/services/public-api';\n\nexport * from './lib/files-extended.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}