import { NgClass, NgTemplateOutlet } from '@angular/common';
import { Component, Input, ViewChild } from '@angular/core';
import { MatMenuModule, MatMenuTrigger } from '@angular/material/menu';
import { RouterModule } from '@angular/router';
import { TranslateModule } from '@ngx-translate/core';
import { FontIconComponent } from '@ta/icons';
import { NotificationBadgeComponent } from '@ta/ui';
import { TemplateModalContainer } from '@ta/ui';
import { TaBaseComponent, TypedTemplateDirective } from '@ta/utils';
import { getFontIcon, getIcon, hasFontIcon, hasIconImage } from '../../../helpers/icon-manager';
import { TaTranslationMenu } from '../../../translation.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/dialog";
import * as i2 from "@angular/router";
import * as i3 from "@angular/material/menu";
import * as i4 from "@ngx-translate/core";
export class MenuItemComponent extends TaBaseComponent {
    constructor(modal) {
        super();
        this.modal = modal;
        this.styleType = 'bloc';
        this.isOpen = false;
        TaTranslationMenu.getInstance();
    }
    ngOnInit() {
        this.isOpen = this.item.defaultOpen;
    }
    getStyleType() {
        return this.styleType + ' ' + this.item.style;
    }
    hasFontIcon() {
        return hasFontIcon(this.item);
    }
    hasIconImage() {
        return hasIconImage(this.item);
    }
    getIcon() {
        return getIcon(this.item);
    }
    getFontIcon() {
        return getFontIcon(this.item);
    }
    hasChild() {
        return this.item.children.length > 0;
    }
    toggle() {
        this.isOpen = !this.isOpen;
    }
    getTemplate() {
        if (this.item.isMenuPanel) {
            return this.item.template;
        }
        return null;
    }
    trackByFn(index, item) {
        return this.item + '-' + item.key;
    }
    executeCallback() {
        const myTemplate = this.getTemplate();
        if (myTemplate) {
            if (this.breakpoints.isLessThanXS) {
                this.modal.open(TemplateModalContainer, {
                    data: {
                        template: myTemplate,
                    },
                });
            }
            else {
                this.triggerMenu.openMenu();
            }
        }
        else {
            this.item.callback?.();
        }
    }
    getLink() {
        if (this.item.link && this.item.link !== '')
            return this.item.link;
        return '';
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: MenuItemComponent, deps: [{ token: i1.MatDialog }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.14", type: MenuItemComponent, isStandalone: true, selector: "ta-menu-item", inputs: { item: "item", styleType: "styleType" }, viewQueries: [{ propertyName: "triggerMenu", first: true, predicate: MatMenuTrigger, descendants: true }], usesInheritance: true, ngImport: i0, template: "@if (!this.hasChild()) {\n  <ng-container [style.cursor]=\"this.item.callback ? 'pointer' : 'default'\">\n    @if (this.getLink()) {\n      <a\n        class=\"link\"\n        [ngClass]=\"this.getStyleType()\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: this.item.exact }\"\n        [routerLink]=\"[this.getLink()]\"\n        [replaceUrl]=\"this.item.replaceUrl\"\n      >\n        <ng-template [ngTemplateOutlet]=\"Item\"></ng-template>\n      </a>\n    } @else {\n      <a (click)=\"this.executeCallback()\" class=\"link\" [ngClass]=\"this.getStyleType()\">\n        <ng-template [ngTemplateOutlet]=\"Item\"></ng-template>\n      </a>\n    }\n  </ng-container>\n}\n\n<ng-template #Item [typedTemplate]=\"this.typeToken\">\n  <div class=\"item pointer\" [class.disable]=\"item.disabled\">\n    <div class=\"icon\">\n      @if (this.hasFontIcon()) {\n        <span class=\"icon-material\">\n          <ta-font-icon [name]=\"this.getFontIcon()\" size=\"xs\" [ngClass]=\"item.iconsColor\"></ta-font-icon>\n        </span>\n      }\n    </div>\n\n    <div class=\"title\">{{ item.label | translate }}</div>\n\n    <div class=\"badge-container d-flex\">\n      @if (item.options?.notificationBadge?.label) {\n        <ta-notification-badge\n          [number]=\"item.options?.notificationBadge?.label || 0\"\n          [style]=\"'brand-700'\"\n          fontSize=\"xs\"\n          [relative]=\"true\"\n        ></ta-notification-badge>\n      }\n      @let extraTemplate = item.options?.extraTemplate;\n      @if (extraTemplate) {\n        <ng-template [ngTemplateOutlet]=\"extraTemplate\"></ng-template>\n      }\n    </div>\n    @if (item.endingIcon) {\n      <div class=\"ending-icon-container\">\n        <ta-font-icon [name]=\"item.endingIcon\" [ngClass]=\"item.iconsColor\"></ta-font-icon>\n      </div>\n    }\n    @let template = this.getTemplate();\n    @if (template) {\n      <div class=\"trigger-container\">\n        <div class=\"trigger\" [matMenuTriggerFor]=\"menu\" #triggerPanel></div>\n        <mat-menu #menu=\"matMenu\">\n          <ng-container *ngTemplateOutlet=\"template\"></ng-container>\n        </mat-menu>\n      </div>\n    }\n  </div>\n</ng-template>\n", styles: [".link{display:flex;flex-direction:row;text-decoration:none;padding:var(--ta-space-xs)}.link .item{width:100%;text-align:center;align-items:center;display:flex;flex-wrap:wrap;justify-content:flex-start}.link .icon,.link .title{padding:0;margin:0;color:var(--ta-text-primary)}.link .icon{margin-right:var(--ta-space-sm)}.link.active .icon,.link:hover .icon{color:var(--ta-icon-brand-primary)}.link.active .title,.link:hover .title{color:var(--ta-text-brand-primary)}.link.dark .icon,.link.dark .ending-icon{color:get-var(icon,tertiary)}.link.dark .title{color:get-var(text,primary)}.link.dark:hover:not(.disabled):not(.active) .icon,.link.dark:hover:not(.disabled):not(.active) .ending-icon{color:get-var(icon,brand,primary)}.link.dark:hover:not(.disabled):not(.active) .title{color:get-var(text,brand,primary)}.link.dark:hover:not(.disabled):not(.active){background-color:get-var(surface,brand,tertiary);border-radius:get-var(radius,label)}.link.horizontal{justify-content:center}.link.horizontal .item{display:flex;flex:1 1 100%;position:relative}.link.horizontal .item .badge-container{position:absolute;top:-10px;right:0}.link.vertical{padding:var(--ta-space-md) var(--ta-space-md)}.link.vertical .icon,.link.vertical .title{font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-default-weight);text-align:left;flex:0 0 auto;width:auto}.link.vertical .icon{margin-right:var(--ta-space-md)}@media screen and (max-width: 575px){.link.responsive{justify-content:center}.link.responsive .item{display:flex;flex:1 1 100%;position:relative}.link.responsive .item .badge-container{position:absolute;top:-10px;right:0}.link.responsive .ending-icon-container{display:none}}@media screen and (min-width: 576px){.link.responsive{justify-content:center}.link.responsive .item{display:flex;flex:1 1 100%;position:relative}.link.responsive .item .badge-container{position:absolute;top:-10px;right:0}.link.responsive .ending-icon-container{display:none}}@media screen and (min-width: 992px){.link.responsive{padding:var(--ta-space-md) var(--ta-space-md)}.link.responsive .icon,.link.responsive .title{font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-default-weight);text-align:left;flex:0 0 auto;width:auto}.link.responsive .icon{margin-right:var(--ta-space-md)}}.link.responsive.menu-minimized .icon{margin-left:auto!important;margin-right:auto!important}.link.responsive.menu-minimized .title{display:none}.link .disable{opacity:.5}.link .icon-image{margin-bottom:3px}.link .badge-container{position:relative;margin-left:auto}.link .ending-icon-container{display:flex;align-items:center;justify-content:flex-end}.trigger-container{position:relative}.trigger-container .trigger{position:absolute;top:0;right:calc(var(--ta-space-xl) * -1)}\n"], dependencies: [{ kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "ngmodule", type: RouterModule }, { kind: "directive", type: i2.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "info", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "directive", type: i2.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "ariaCurrentWhenActive", "routerLinkActive"], outputs: ["isActiveChange"], exportAs: ["routerLinkActive"] }, { kind: "ngmodule", type: MatMenuModule }, { kind: "component", type: i3.MatMenu, selector: "mat-menu", inputs: ["backdropClass", "aria-label", "aria-labelledby", "aria-describedby", "xPosition", "yPosition", "overlapTrigger", "hasBackdrop", "class", "classList"], outputs: ["closed", "close"], exportAs: ["matMenu"] }, { kind: "directive", type: i3.MatMenuTrigger, selector: "[mat-menu-trigger-for], [matMenuTriggerFor]", inputs: ["mat-menu-trigger-for", "matMenuTriggerFor", "matMenuTriggerData", "matMenuTriggerRestoreFocus"], outputs: ["menuOpened", "onMenuOpen", "menuClosed", "onMenuClose"], exportAs: ["matMenuTrigger"] }, { kind: "ngmodule", type: TranslateModule }, { kind: "pipe", type: i4.TranslatePipe, name: "translate" }, { kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "component", type: NotificationBadgeComponent, selector: "ta-notification-badge", inputs: ["number", "fontSize", "style", "relative"] }, { kind: "directive", type: TypedTemplateDirective, selector: "ng-template[typedTemplate]", inputs: ["typedTemplate"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: MenuItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-menu-item', standalone: true, imports: [
                        NgClass,
                        NgTemplateOutlet,
                        RouterModule,
                        MatMenuModule,
                        TranslateModule,
                        FontIconComponent,
                        NotificationBadgeComponent,
                        TypedTemplateDirective,
                    ], template: "@if (!this.hasChild()) {\n  <ng-container [style.cursor]=\"this.item.callback ? 'pointer' : 'default'\">\n    @if (this.getLink()) {\n      <a\n        class=\"link\"\n        [ngClass]=\"this.getStyleType()\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: this.item.exact }\"\n        [routerLink]=\"[this.getLink()]\"\n        [replaceUrl]=\"this.item.replaceUrl\"\n      >\n        <ng-template [ngTemplateOutlet]=\"Item\"></ng-template>\n      </a>\n    } @else {\n      <a (click)=\"this.executeCallback()\" class=\"link\" [ngClass]=\"this.getStyleType()\">\n        <ng-template [ngTemplateOutlet]=\"Item\"></ng-template>\n      </a>\n    }\n  </ng-container>\n}\n\n<ng-template #Item [typedTemplate]=\"this.typeToken\">\n  <div class=\"item pointer\" [class.disable]=\"item.disabled\">\n    <div class=\"icon\">\n      @if (this.hasFontIcon()) {\n        <span class=\"icon-material\">\n          <ta-font-icon [name]=\"this.getFontIcon()\" size=\"xs\" [ngClass]=\"item.iconsColor\"></ta-font-icon>\n        </span>\n      }\n    </div>\n\n    <div class=\"title\">{{ item.label | translate }}</div>\n\n    <div class=\"badge-container d-flex\">\n      @if (item.options?.notificationBadge?.label) {\n        <ta-notification-badge\n          [number]=\"item.options?.notificationBadge?.label || 0\"\n          [style]=\"'brand-700'\"\n          fontSize=\"xs\"\n          [relative]=\"true\"\n        ></ta-notification-badge>\n      }\n      @let extraTemplate = item.options?.extraTemplate;\n      @if (extraTemplate) {\n        <ng-template [ngTemplateOutlet]=\"extraTemplate\"></ng-template>\n      }\n    </div>\n    @if (item.endingIcon) {\n      <div class=\"ending-icon-container\">\n        <ta-font-icon [name]=\"item.endingIcon\" [ngClass]=\"item.iconsColor\"></ta-font-icon>\n      </div>\n    }\n    @let template = this.getTemplate();\n    @if (template) {\n      <div class=\"trigger-container\">\n        <div class=\"trigger\" [matMenuTriggerFor]=\"menu\" #triggerPanel></div>\n        <mat-menu #menu=\"matMenu\">\n          <ng-container *ngTemplateOutlet=\"template\"></ng-container>\n        </mat-menu>\n      </div>\n    }\n  </div>\n</ng-template>\n", styles: [".link{display:flex;flex-direction:row;text-decoration:none;padding:var(--ta-space-xs)}.link .item{width:100%;text-align:center;align-items:center;display:flex;flex-wrap:wrap;justify-content:flex-start}.link .icon,.link .title{padding:0;margin:0;color:var(--ta-text-primary)}.link .icon{margin-right:var(--ta-space-sm)}.link.active .icon,.link:hover .icon{color:var(--ta-icon-brand-primary)}.link.active .title,.link:hover .title{color:var(--ta-text-brand-primary)}.link.dark .icon,.link.dark .ending-icon{color:get-var(icon,tertiary)}.link.dark .title{color:get-var(text,primary)}.link.dark:hover:not(.disabled):not(.active) .icon,.link.dark:hover:not(.disabled):not(.active) .ending-icon{color:get-var(icon,brand,primary)}.link.dark:hover:not(.disabled):not(.active) .title{color:get-var(text,brand,primary)}.link.dark:hover:not(.disabled):not(.active){background-color:get-var(surface,brand,tertiary);border-radius:get-var(radius,label)}.link.horizontal{justify-content:center}.link.horizontal .item{display:flex;flex:1 1 100%;position:relative}.link.horizontal .item .badge-container{position:absolute;top:-10px;right:0}.link.vertical{padding:var(--ta-space-md) var(--ta-space-md)}.link.vertical .icon,.link.vertical .title{font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-default-weight);text-align:left;flex:0 0 auto;width:auto}.link.vertical .icon{margin-right:var(--ta-space-md)}@media screen and (max-width: 575px){.link.responsive{justify-content:center}.link.responsive .item{display:flex;flex:1 1 100%;position:relative}.link.responsive .item .badge-container{position:absolute;top:-10px;right:0}.link.responsive .ending-icon-container{display:none}}@media screen and (min-width: 576px){.link.responsive{justify-content:center}.link.responsive .item{display:flex;flex:1 1 100%;position:relative}.link.responsive .item .badge-container{position:absolute;top:-10px;right:0}.link.responsive .ending-icon-container{display:none}}@media screen and (min-width: 992px){.link.responsive{padding:var(--ta-space-md) var(--ta-space-md)}.link.responsive .icon,.link.responsive .title{font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-default-weight);text-align:left;flex:0 0 auto;width:auto}.link.responsive .icon{margin-right:var(--ta-space-md)}}.link.responsive.menu-minimized .icon{margin-left:auto!important;margin-right:auto!important}.link.responsive.menu-minimized .title{display:none}.link .disable{opacity:.5}.link .icon-image{margin-bottom:3px}.link .badge-container{position:relative;margin-left:auto}.link .ending-icon-container{display:flex;align-items:center;justify-content:flex-end}.trigger-container{position:relative}.trigger-container .trigger{position:absolute;top:0;right:calc(var(--ta-space-xl) * -1)}\n"] }]
        }], ctorParameters: () => [{ type: i1.MatDialog }], propDecorators: { item: [{
                type: Input
            }], styleType: [{
                type: Input
            }], triggerMenu: [{
                type: ViewChild,
                args: [MatMenuTrigger]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9tZW51L2l0ZW0vbWVudS1pdGVtLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9tZW51L2l0ZW0vbWVudS1pdGVtLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFcEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxjQUFjLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN2RSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXRELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUM5QyxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDcEQsT0FBTyxFQUFFLHNCQUFzQixFQUE4QixNQUFNLFFBQVEsQ0FBQztBQUM1RSxPQUFPLEVBQUUsZUFBZSxFQUFFLHNCQUFzQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRXBFLE9BQU8sRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUtoRyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQzs7Ozs7O0FBa0JqRSxNQUFNLE9BQU8saUJBQWtCLFNBQVEsZUFBZTtJQVlwRCxZQUFtQixLQUFnQjtRQUNqQyxLQUFLLEVBQUUsQ0FBQztRQURTLFVBQUssR0FBTCxLQUFLLENBQVc7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SUFBSTtzQkFESCxLQUFLO2dCQUlOLFNBQVM7c0JBRFIsS0FBSztnQkFHcUIsV0FBVztzQkFBckMsU0FBUzt1QkFBQyxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdDbGFzcywgTmdUZW1wbGF0ZU91dGxldCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWF0RGlhbG9nIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvZGlhbG9nJztcbmltcG9ydCB7IE1hdE1lbnVNb2R1bGUsIE1hdE1lbnVUcmlnZ2VyIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvbWVudSc7XG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuXG5pbXBvcnQgeyBUcmFuc2xhdGVNb2R1bGUgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcblxuaW1wb3J0IHsgRm9udEljb25Db21wb25lbnQgfSBmcm9tICdAdGEvaWNvbnMnO1xuaW1wb3J0IHsgTm90aWZpY2F0aW9uQmFkZ2VDb21wb25lbnQgfSBmcm9tICdAdGEvdWknO1xuaW1wb3J0IHsgVGVtcGxhdGVNb2RhbENvbnRhaW5lciwgVGVtcGxhdGVNb2RhbENvbnRhaW5lckRhdGEgfSBmcm9tICdAdGEvdWknO1xuaW1wb3J0IHsgVGFCYXNlQ29tcG9uZW50LCBUeXBlZFRlbXBsYXRlRGlyZWN0aXZlIH0gZnJvbSAnQHRhL3V0aWxzJztcblxuaW1wb3J0IHsgZ2V0Rm9udEljb24sIGdldEljb24sIGhhc0ZvbnRJY29uLCBoYXNJY29uSW1hZ2UgfSBmcm9tICcuLi8uLi8uLi9oZWxwZXJzL2ljb24tbWFuYWdlcic7XG5pbXBvcnQgeyBNZW51QWN0aW9uIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWxzL21lbnUvaXRlbS9hY3Rpb24nO1xuaW1wb3J0IHsgTWVudUJhc2UgfSBmcm9tICcuLi8uLi8uLi9tb2RlbHMvbWVudS9pdGVtL2Jhc2UnO1xuaW1wb3J0IHsgTWVudUljb24gfSBmcm9tICcuLi8uLi8uLi9tb2RlbHMvbWVudS9pdGVtL2ljb24nO1xuaW1wb3J0IHsgTWVudVBhbmVsIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWxzL21lbnUvaXRlbS9wYW5lbCc7XG5pbXBvcnQgeyBUYVRyYW5zbGF0aW9uTWVudSB9IGZyb20gJy4uLy4uLy4uL3RyYW5zbGF0aW9uLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0YS1tZW51LWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vbWVudS1pdGVtLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbWVudS1pdGVtLmNvbXBvbmVudC5zY3NzJ10sXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtcbiAgICBOZ0NsYXNzLFxuICAgIE5nVGVtcGxhdGVPdXRsZXQsXG4gICAgUm91dGVyTW9kdWxlLFxuICAgIE1hdE1lbnVNb2R1bGUsXG4gICAgVHJhbnNsYXRlTW9kdWxlLFxuICAgIEZvbnRJY29uQ29tcG9uZW50LFxuICAgIE5vdGlmaWNhdGlvbkJhZGdlQ29tcG9uZW50LFxuICAgIFR5cGVkVGVtcGxhdGVEaXJlY3RpdmUsXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIE1lbnVJdGVtQ29tcG9uZW50IGV4dGVuZHMgVGFCYXNlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KClcbiAgaXRlbSE6IE1lbnVJY29uIHwgTWVudUFjdGlvbiB8IE1lbnVCYXNlIHwgTWVudVBhbmVsO1xuXG4gIEBJbnB1dCgpXG4gIHN0eWxlVHlwZTogU3RyaW5nID0gJ2Jsb2MnO1xuXG4gIEBWaWV3Q2hpbGQoTWF0TWVudVRyaWdnZXIpIHRyaWdnZXJNZW51ITogTWF0TWVudVRyaWdnZXI7XG5cbiAgcHVibGljIHJlYWRvbmx5IHR5cGVUb2tlbiE6IE1lbnVJY29uIHwgTWVudUFjdGlvbiB8IE1lbnVCYXNlIHwgTWVudVBhbmVsO1xuICBwdWJsaWMgaXNPcGVuOiBib29sZWFuID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IocHVibGljIG1vZGFsOiBNYXREaWFsb2cpIHtcbiAgICBzdXBlcigpO1xuICAgIFRhVHJhbnNsYXRpb25NZW51LmdldEluc3RhbmNlKCk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmlzT3BlbiA9IHRoaXMuaXRlbS5kZWZhdWx0T3BlbjtcbiAgfVxuXG4gIHB1YmxpYyBnZXRTdHlsZVR5cGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuc3R5bGVUeXBlICsgJyAnICsgdGhpcy5pdGVtLnN0eWxlO1xuICB9XG5cbiAgcHVibGljIGhhc0ZvbnRJY29uKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBoYXNGb250SWNvbih0aGlzLml0ZW0pO1xuICB9XG5cbiAgcHVibGljIGhhc0ljb25JbWFnZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gaGFzSWNvbkltYWdlKHRoaXMuaXRlbSk7XG4gIH1cblxuICBwdWJsaWMgZ2V0SWNvbigpIHtcbiAgICByZXR1cm4gZ2V0SWNvbih0aGlzLml0ZW0pO1xuICB9XG5cbiAgcHVibGljIGdldEZvbnRJY29uKCkge1xuICAgIHJldHVybiBnZXRGb250SWNvbih0aGlzLml0ZW0pO1xuICB9XG5cbiAgcHVibGljIGhhc0NoaWxkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLml0ZW0uY2hpbGRyZW4ubGVuZ3RoID4gMDtcbiAgfVxuICBwdWJsaWMgdG9nZ2xlKCkge1xuICAgIHRoaXMuaXNPcGVuID0gIXRoaXMuaXNPcGVuO1xuICB9XG5cbiAgcHVibGljIGdldFRlbXBsYXRlKCkge1xuICAgIGlmICh0aGlzLml0ZW0uaXNNZW51UGFuZWwpIHtcbiAgICAgIHJldHVybiAoPE1lbnVQYW5lbD50aGlzLml0ZW0pLnRlbXBsYXRlO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHB1YmxpYyB0cmFja0J5Rm4oaW5kZXg6IGFueSwgaXRlbTogTWVudUJhc2UpIHtcbiAgICByZXR1cm4gdGhpcy5pdGVtICsgJy0nICsgaXRlbS5rZXk7XG4gIH1cblxuICBwdWJsaWMgZXhlY3V0ZUNhbGxiYWNrKCkge1xuICAgIGNvbnN0IG15VGVtcGxhdGUgPSB0aGlzLmdldFRlbXBsYXRlKCk7XG4gICAgaWYgKG15VGVtcGxhdGUpIHtcbiAgICAgIGlmICh0aGlzLmJyZWFrcG9pbnRzLmlzTGVzc1RoYW5YUykge1xuICAgICAgICB0aGlzLm1vZGFsLm9wZW48VGVtcGxhdGVNb2RhbENvbnRhaW5lciwgVGVtcGxhdGVNb2RhbENvbnRhaW5lckRhdGE+KFRlbXBsYXRlTW9kYWxDb250YWluZXIsIHtcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICB0ZW1wbGF0ZTogbXlUZW1wbGF0ZSxcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMudHJpZ2dlck1lbnUub3Blbk1lbnUoKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5pdGVtLmNhbGxiYWNrPy4oKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgZ2V0TGluaygpIHtcbiAgICBpZiAodGhpcy5pdGVtLmxpbmsgJiYgdGhpcy5pdGVtLmxpbmsgIT09ICcnKSByZXR1cm4gdGhpcy5pdGVtLmxpbms7XG5cbiAgICByZXR1cm4gJyc7XG4gIH1cbn1cbiIsIkBpZiAoIXRoaXMuaGFzQ2hpbGQoKSkge1xuICA8bmctY29udGFpbmVyIFtzdHlsZS5jdXJzb3JdPVwidGhpcy5pdGVtLmNhbGxiYWNrID8gJ3BvaW50ZXInIDogJ2RlZmF1bHQnXCI+XG4gICAgQGlmICh0aGlzLmdldExpbmsoKSkge1xuICAgICAgPGFcbiAgICAgICAgY2xhc3M9XCJsaW5rXCJcbiAgICAgICAgW25nQ2xhc3NdPVwidGhpcy5nZXRTdHlsZVR5cGUoKVwiXG4gICAgICAgIHJvdXRlckxpbmtBY3RpdmU9XCJhY3RpdmVcIlxuICAgICAgICBbcm91dGVyTGlua0FjdGl2ZU9wdGlvbnNdPVwieyBleGFjdDogdGhpcy5pdGVtLmV4YWN0IH1cIlxuICAgICAgICBbcm91dGVyTGlua109XCJbdGhpcy5nZXRMaW5rKCldXCJcbiAgICAgICAgW3JlcGxhY2VVcmxdPVwidGhpcy5pdGVtLnJlcGxhY2VVcmxcIlxuICAgICAgPlxuICAgICAgICA8bmctdGVtcGxhdGUgW25nVGVtcGxhdGVPdXRsZXRdPVwiSXRlbVwiPjwvbmctdGVtcGxhdGU+XG4gICAgICA8L2E+XG4gICAgfSBAZWxzZSB7XG4gICAgICA8YSAoY2xpY2spPVwidGhpcy5leGVjdXRlQ2FsbGJhY2soKVwiIGNsYXNzPVwibGlua1wiIFtuZ0NsYXNzXT1cInRoaXMuZ2V0U3R5bGVUeXBlKClcIj5cbiAgICAgICAgPG5nLXRlbXBsYXRlIFtuZ1RlbXBsYXRlT3V0bGV0XT1cIkl0ZW1cIj48L25nLXRlbXBsYXRlPlxuICAgICAgPC9hPlxuICAgIH1cbiAgPC9uZy1jb250YWluZXI+XG59XG5cbjxuZy10ZW1wbGF0ZSAjSXRlbSBbdHlwZWRUZW1wbGF0ZV09XCJ0aGlzLnR5cGVUb2tlblwiPlxuICA8ZGl2IGNsYXNzPVwiaXRlbSBwb2ludGVyXCIgW2NsYXNzLmRpc2FibGVdPVwiaXRlbS5kaXNhYmxlZFwiPlxuICAgIDxkaXYgY2xhc3M9XCJpY29uXCI+XG4gICAgICBAaWYgKHRoaXMuaGFzRm9udEljb24oKSkge1xuICAgICAgICA8c3BhbiBjbGFzcz1cImljb24tbWF0ZXJpYWxcIj5cbiAgICAgICAgICA8dGEtZm9udC1pY29uIFtuYW1lXT1cInRoaXMuZ2V0Rm9udEljb24oKVwiIHNpemU9XCJ4c1wiIFtuZ0NsYXNzXT1cIml0ZW0uaWNvbnNDb2xvclwiPjwvdGEtZm9udC1pY29uPlxuICAgICAgICA8L3NwYW4+XG4gICAgICB9XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPVwidGl0bGVcIj57eyBpdGVtLmxhYmVsIHwgdHJhbnNsYXRlIH19PC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPVwiYmFkZ2UtY29udGFpbmVyIGQtZmxleFwiPlxuICAgICAgQGlmIChpdGVtLm9wdGlvbnM/Lm5vdGlmaWNhdGlvbkJhZGdlPy5sYWJlbCkge1xuICAgICAgICA8dGEtbm90aWZpY2F0aW9uLWJhZGdlXG4gICAgICAgICAgW251bWJlcl09XCJpdGVtLm9wdGlvbnM/Lm5vdGlmaWNhdGlvbkJhZGdlPy5sYWJlbCB8fCAwXCJcbiAgICAgICAgICBbc3R5bGVdPVwiJ2JyYW5kLTcwMCdcIlxuICAgICAgICAgIGZvbnRTaXplPVwieHNcIlxuICAgICAgICAgIFtyZWxhdGl2ZV09XCJ0cnVlXCJcbiAgICAgICAgPjwvdGEtbm90aWZpY2F0aW9uLWJhZGdlPlxuICAgICAgfVxuICAgICAgQGxldCBleHRyYVRlbXBsYXRlID0gaXRlbS5vcHRpb25zPy5leHRyYVRlbXBsYXRlO1xuICAgICAgQGlmIChleHRyYVRlbXBsYXRlKSB7XG4gICAgICAgIDxuZy10ZW1wbGF0ZSBbbmdUZW1wbGF0ZU91dGxldF09XCJleHRyYVRlbXBsYXRlXCI+PC9uZy10ZW1wbGF0ZT5cbiAgICAgIH1cbiAgICA8L2Rpdj5cbiAgICBAaWYgKGl0ZW0uZW5kaW5nSWNvbikge1xuICAgICAgPGRpdiBjbGFzcz1cImVuZGluZy1pY29uLWNvbnRhaW5lclwiPlxuICAgICAgICA8dGEtZm9udC1pY29uIFtuYW1lXT1cIml0ZW0uZW5kaW5nSWNvblwiIFtuZ0NsYXNzXT1cIml0ZW0uaWNvbnNDb2xvclwiPjwvdGEtZm9udC1pY29uPlxuICAgICAgPC9kaXY+XG4gICAgfVxuICAgIEBsZXQgdGVtcGxhdGUgPSB0aGlzLmdldFRlbXBsYXRlKCk7XG4gICAgQGlmICh0ZW1wbGF0ZSkge1xuICAgICAgPGRpdiBjbGFzcz1cInRyaWdnZXItY29udGFpbmVyXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0cmlnZ2VyXCIgW21hdE1lbnVUcmlnZ2VyRm9yXT1cIm1lbnVcIiAjdHJpZ2dlclBhbmVsPjwvZGl2PlxuICAgICAgICA8bWF0LW1lbnUgI21lbnU9XCJtYXRNZW51XCI+XG4gICAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cInRlbXBsYXRlXCI+PC9uZy1jb250YWluZXI+XG4gICAgICAgIDwvbWF0LW1lbnU+XG4gICAgICA8L2Rpdj5cbiAgICB9XG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT5cbiJdfQ==