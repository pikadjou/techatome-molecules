import { AsyncPipe, NgClass } from '@angular/common';
import { Component, Input } from '@angular/core';
import { TaBaseComponent } from '@ta/utils';
import { MenuItemComponent } from './item/menu-item.component';
import * as i0 from "@angular/core";
export class MenuComponent extends TaBaseComponent {
    get containerCss() {
        switch (this.container) {
            case 'overflow':
                return 'overflow vertical';
            case 'second':
                return 'second';
            case 'main':
                return 'main-nav ' + this.menu.direction;
            default:
                return '';
        }
    }
    constructor() {
        super();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: MenuComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: MenuComponent, isStandalone: true, selector: "ta-menu", inputs: { menu: "menu", container: "container" }, usesInheritance: true, ngImport: i0, template: "<ul class=\"menu\" [ngClass]=\"this.containerCss\">\n  @for (item of this.menu.elements; track this.trackByKey($index, item)) {\n    @if ((item.visible$ | async) === true) {\n      <li>\n        <ta-menu-item [item]=\"item\" [class]=\"item.key\" [styleType]=\"this.menu.direction\"></ta-menu-item>\n      </li>\n    }\n  }\n</ul>\n", styles: [".menu{display:flex;flex-direction:row;list-style:none;padding:0;margin:0}.menu li{padding:0;margin:0}.menu.horizontal li{flex:1}.menu.vertical{display:flex;flex-direction:column}.menu.vertical li{flex:0 0 100%;max-width:100%}@media screen and (max-width: 767px){.menu.responsive{width:100%}.menu.responsive li{flex:1}}@media screen and (min-width: 768px){.menu.responsive{display:flex;flex-direction:column}.menu.responsive li{flex:0 0 100%;max-width:100%}}ul.second{list-style:none;display:flex;flex-direction:row;padding:0;margin:0;background-color:var(--ta-neutral-50)}ul.second li{padding:0;margin:0;flex:1}\n"], dependencies: [{ kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "pipe", type: AsyncPipe, name: "async" }, { kind: "component", type: MenuItemComponent, selector: "ta-menu-item", inputs: ["item", "styleType"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: MenuComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-menu', standalone: true, imports: [NgClass, AsyncPipe, MenuItemComponent], template: "<ul class=\"menu\" [ngClass]=\"this.containerCss\">\n  @for (item of this.menu.elements; track this.trackByKey($index, item)) {\n    @if ((item.visible$ | async) === true) {\n      <li>\n        <ta-menu-item [item]=\"item\" [class]=\"item.key\" [styleType]=\"this.menu.direction\"></ta-menu-item>\n      </li>\n    }\n  }\n</ul>\n", styles: [".menu{display:flex;flex-direction:row;list-style:none;padding:0;margin:0}.menu li{padding:0;margin:0}.menu.horizontal li{flex:1}.menu.vertical{display:flex;flex-direction:column}.menu.vertical li{flex:0 0 100%;max-width:100%}@media screen and (max-width: 767px){.menu.responsive{width:100%}.menu.responsive li{flex:1}}@media screen and (min-width: 768px){.menu.responsive{display:flex;flex-direction:column}.menu.responsive li{flex:0 0 100%;max-width:100%}}ul.second{list-style:none;display:flex;flex-direction:row;padding:0;margin:0;background-color:var(--ta-neutral-50)}ul.second li{padding:0;margin:0;flex:1}\n"] }]
        }], ctorParameters: () => [], propDecorators: { menu: [{
                type: Input
            }], container: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbXBvbmVudHMvbWVudS9tZW51LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9tZW51L21lbnUuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRzVDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDOztBQVMvRCxNQUFNLE9BQU8sYUFBYyxTQUFRLGVBQWU7SUFPaEQsSUFBSSxZQUFZO1FBQ2QsUUFBUSxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7WUFDdkIsS0FBSyxVQUFVO2dCQUNiLE9BQU8sbUJBQW1CLENBQUM7WUFDN0IsS0FBSyxRQUFRO2dCQUNYLE9BQU8sUUFBUSxDQUFDO1lBQ2xCLEtBQUssTUFBTTtnQkFDVCxPQUFPLFdBQVcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUMzQztnQkFDRSxPQUFPLEVBQUUsQ0FBQztRQUNkLENBQUM7SUFDSCxDQUFDO0lBRUQ7UUFDRSxLQUFLLEVBQUUsQ0FBQztJQUNWLENBQUM7K0dBdEJVLGFBQWE7bUdBQWIsYUFBYSw0SUNmMUIsNlVBU0EsK3BCRElZLE9BQU8sK0VBQUUsU0FBUyw4Q0FBRSxpQkFBaUI7OzRGQUVwQyxhQUFhO2tCQVB6QixTQUFTOytCQUNFLFNBQVMsY0FHUCxJQUFJLFdBQ1AsQ0FBQyxPQUFPLEVBQUUsU0FBUyxFQUFFLGlCQUFpQixDQUFDO3dEQUloRCxJQUFJO3NCQURILEtBQUs7Z0JBSU4sU0FBUztzQkFEUixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXN5bmNQaXBlLCBOZ0NsYXNzIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgVGFCYXNlQ29tcG9uZW50IH0gZnJvbSAnQHRhL3V0aWxzJztcblxuaW1wb3J0IHsgTWVudSB9IGZyb20gJy4uLy4uL21vZGVscy9tZW51L21lbnUnO1xuaW1wb3J0IHsgTWVudUl0ZW1Db21wb25lbnQgfSBmcm9tICcuL2l0ZW0vbWVudS1pdGVtLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhLW1lbnUnLFxuICB0ZW1wbGF0ZVVybDogJy4vbWVudS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL21lbnUuY29tcG9uZW50LnNjc3MnXSxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW05nQ2xhc3MsIEFzeW5jUGlwZSwgTWVudUl0ZW1Db21wb25lbnRdLFxufSlcbmV4cG9ydCBjbGFzcyBNZW51Q29tcG9uZW50IGV4dGVuZHMgVGFCYXNlQ29tcG9uZW50IHtcbiAgQElucHV0KClcbiAgbWVudSE6IE1lbnU7XG5cbiAgQElucHV0KClcbiAgY29udGFpbmVyITogJ3NlY29uZCcgfCAnb3ZlcmZsb3cnIHwgJ21haW4nIHwgJ3BhbmVsJztcblxuICBnZXQgY29udGFpbmVyQ3NzKCkge1xuICAgIHN3aXRjaCAodGhpcy5jb250YWluZXIpIHtcbiAgICAgIGNhc2UgJ292ZXJmbG93JzpcbiAgICAgICAgcmV0dXJuICdvdmVyZmxvdyB2ZXJ0aWNhbCc7XG4gICAgICBjYXNlICdzZWNvbmQnOlxuICAgICAgICByZXR1cm4gJ3NlY29uZCc7XG4gICAgICBjYXNlICdtYWluJzpcbiAgICAgICAgcmV0dXJuICdtYWluLW5hdiAnICsgdGhpcy5tZW51LmRpcmVjdGlvbjtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG4gIH1cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG59XG4iLCI8dWwgY2xhc3M9XCJtZW51XCIgW25nQ2xhc3NdPVwidGhpcy5jb250YWluZXJDc3NcIj5cbiAgQGZvciAoaXRlbSBvZiB0aGlzLm1lbnUuZWxlbWVudHM7IHRyYWNrIHRoaXMudHJhY2tCeUtleSgkaW5kZXgsIGl0ZW0pKSB7XG4gICAgQGlmICgoaXRlbS52aXNpYmxlJCB8IGFzeW5jKSA9PT0gdHJ1ZSkge1xuICAgICAgPGxpPlxuICAgICAgICA8dGEtbWVudS1pdGVtIFtpdGVtXT1cIml0ZW1cIiBbY2xhc3NdPVwiaXRlbS5rZXlcIiBbc3R5bGVUeXBlXT1cInRoaXMubWVudS5kaXJlY3Rpb25cIj48L3RhLW1lbnUtaXRlbT5cbiAgICAgIDwvbGk+XG4gICAgfVxuICB9XG48L3VsPlxuIl19