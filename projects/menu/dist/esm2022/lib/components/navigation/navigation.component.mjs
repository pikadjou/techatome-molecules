import { NgClass, NgFor, NgIf, NgTemplateOutlet } from '@angular/common';
import { Component, Input } from '@angular/core';
import { RouterModule } from '@angular/router';
import { TranslateModule } from '@ngx-translate/core';
import { FontIconComponent } from '@ta/icons';
import { NotificationBadgeComponent, NotificationBadgeContainerComponent, SwiperLightComponent } from '@ta/ui';
import { TaAbstractComponent } from '@ta/utils';
import { getFontIcon, hasFontIcon } from '../../helpers/icon-manager';
import { CamTranslationMenu } from '../../translation.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@ngx-translate/core";
export class NavigationComponent extends TaAbstractComponent {
    constructor() {
        super();
        this.swiper = false;
        this.options = {};
        this.hasFontIcon = hasFontIcon;
        this.getFontIcon = getFontIcon;
        this.activeKey = '';
        CamTranslationMenu.getInstance();
    }
    ngOnInit() {
        const defaultOpen = this.menu.elements.find(e => e.defaultOpen);
        if (!defaultOpen || !defaultOpen.callback) {
            return;
        }
        this.callback(defaultOpen);
        if (this.manuallyChanged$) {
            this._registerSubscription(this.manuallyChanged$.subscribe({
                next: (key) => {
                    const found = this.menu.elements.find(element => element.key === key);
                    if (found) {
                        this.callback(found);
                    }
                },
            }));
        }
    }
    getSpaceClass() {
        if (this.options.spaceElement === null) {
            return '';
        }
        return `g-space-${this.options.spaceElement ?? 'lg'}`;
    }
    getLink(item) {
        if (item.link && item.link !== '') {
            return item.link;
        }
        return ''; // TODO this._navigationService.currentPageUrl;
    }
    callback(item) {
        if (item.disabled) {
            return;
        }
        this.activeKey = item.key;
        if (item.callback) {
            item.callback();
        }
    }
    isActive(item) {
        return item.key === this.activeKey;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NavigationComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: NavigationComponent, isStandalone: true, selector: "ta-menu-navigation", inputs: { menu: "menu", container: "container", swiper: "swiper", options: "options", manuallyChanged$: "manuallyChanged$" }, usesInheritance: true, ngImport: i0, template: "<div class=\"navigation-container\" [class]=\"this.container\">\n  <div class=\"list\">\n    @if (this.swiper) {\n      <ta-swiper-light\n        [items]=\"this.menu.elements\"\n        [template]=\"template\"\n        [forced]=\"true\"\n        [swiperClasses]=\"this.getSpaceClass()\"\n      ></ta-swiper-light>\n    } @else {\n      <div class=\"element-list\" [ngClass]=\"this.menu.direction + ' ' + this.getSpaceClass()\">\n        @for (element of this.menu.elements; track element) {\n          <div class=\"element\">\n            <ng-template\n              [ngTemplateOutlet]=\"template\"\n              [ngTemplateOutletContext]=\"{\n                element: element,\n              }\"\n            >\n            </ng-template>\n          </div>\n        }\n      </div>\n    }\n  </div>\n</div>\n\n<ng-template #template let-element=\"element\">\n  <ta-notification-badge-container class=\"c-pointer\">\n    @if (element.callback || element.disabled) {\n      <div\n        (click)=\"this.callback(element)\"\n        class=\"item-container\"\n        [ngClass]=\"{ active: this.isActive(element), disabled: element.disabled }\"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"Item\"\n          [ngTemplateOutletContext]=\"{\n            item: element,\n          }\"\n        >\n        </ng-template>\n      </div>\n    } @else {\n      <div\n        class=\"item-container\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: element.exact }\"\n        [routerLink]=\"[this.getLink(element)]\"\n        [queryParamsHandling]=\"element.queryParamsHandling\"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"Item\"\n          [ngTemplateOutletContext]=\"{\n            item: element,\n          }\"\n        >\n        </ng-template>\n      </div>\n    }\n    @if (element.options?.notificationBadge?.label) {\n      <ta-notification-badge\n        [number]=\"element.options?.notificationBadge?.label || 0\"\n        [style]=\"element.options?.notificationBadge?.style\"\n        fontSize=\"xs\"\n      ></ta-notification-badge>\n    }\n  </ta-notification-badge-container>\n</ng-template>\n\n<ng-template #Item let-item=\"item\" [typedTemplate]=\"this.typeItem\">\n  <div class=\"item\" [class.disabled]=\"item.disabled\">\n    @if (this.hasFontIcon(item)) {\n      <div class=\"icon\">\n        <ta-font-icon [name]=\"this.getFontIcon(item)\"></ta-font-icon>\n      </div>\n    }\n    @if (item.label) {\n      <div class=\"label\">\n        {{ item.label | translate }}\n      </div>\n    }\n    @if (item.translationData?.length) {\n      <div class=\"bullet\">({{ item.translationData?.length }})</div>\n    }\n  </div>\n</ng-template>\n", styles: [".element-list{gap:var(--ta-space-md);display:flex;flex-direction:row}.element-list.vertical{display:flex;flex-direction:column}.tags .item-container .item{flex-direction:row;display:flex;align-items:center;gap:var(--ta-space-xs);padding:var(--ta-space-md);border:1px solid transparent;color:var(--ta-text-tertiary);background-color:var(--ta-surface-tertiary);border-color:var(--ta-surface-tertiary);border-radius:var(--ta-radius-rounded);font-size:var(--ta-font-body-sm-default-size);line-height:var(--ta-font-body-sm-default-line);font-weight:var(--ta-font-body-sm-default-weight)}.tags .item-container.disabled .item{background-color:var(--ta-surface-primary);border-color:var(--ta-border-disabled)}.tags .item-container.active .item{color:var(--ta-text-brand-primary);background-color:var(--ta-surface-default);border-color:var(--ta-surface-default)}.tab .list{border-bottom:1px solid var(--ta-border-secondary)}.tab .item-container .item{flex-direction:row;display:flex;align-items:center;gap:var(--ta-space-xs);padding:var(--ta-space-md);border-bottom:2px solid transparent;color:var(--ta-text-tertiary);font-size:var(--ta-font-body-sm-default-size);line-height:var(--ta-font-body-sm-default-line);font-weight:var(--ta-font-body-sm-default-weight)}.tab .item-container.disabled{opacity:.5}.tab .item-container.active .item{color:var(--ta-text-brand-primary);border-bottom-color:var(--ta-border-brand)}:host ::ng-deep .swiper-container{gap:var(--ta-space-sm)!important}:host ::ng-deep ta-font-icon{margin-top:-6px;display:block}:host ::ng-deep ta-font-icon i{height:18px!important;font-size:18px!important}\n"], dependencies: [{ kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "ngmodule", type: RouterModule }, { kind: "directive", type: i1.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "info", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "directive", type: i1.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "ariaCurrentWhenActive", "routerLinkActive"], outputs: ["isActiveChange"], exportAs: ["routerLinkActive"] }, { kind: "ngmodule", type: TranslateModule }, { kind: "pipe", type: i2.TranslatePipe, name: "translate" }, { kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "component", type: NotificationBadgeComponent, selector: "ta-notification-badge", inputs: ["number", "fontSize", "style", "relative"] }, { kind: "component", type: NotificationBadgeContainerComponent, selector: "ta-notification-badge-container" }, { kind: "component", type: SwiperLightComponent, selector: "ta-swiper-light", inputs: ["items", "template", "swiperClasses", "containerClasses", "forced"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NavigationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-menu-navigation', standalone: true, imports: [
                        NgIf,
                        NgFor,
                        NgClass,
                        NgTemplateOutlet,
                        RouterModule,
                        TranslateModule,
                        FontIconComponent,
                        NotificationBadgeComponent,
                        NotificationBadgeContainerComponent,
                        SwiperLightComponent,
                    ], template: "<div class=\"navigation-container\" [class]=\"this.container\">\n  <div class=\"list\">\n    @if (this.swiper) {\n      <ta-swiper-light\n        [items]=\"this.menu.elements\"\n        [template]=\"template\"\n        [forced]=\"true\"\n        [swiperClasses]=\"this.getSpaceClass()\"\n      ></ta-swiper-light>\n    } @else {\n      <div class=\"element-list\" [ngClass]=\"this.menu.direction + ' ' + this.getSpaceClass()\">\n        @for (element of this.menu.elements; track element) {\n          <div class=\"element\">\n            <ng-template\n              [ngTemplateOutlet]=\"template\"\n              [ngTemplateOutletContext]=\"{\n                element: element,\n              }\"\n            >\n            </ng-template>\n          </div>\n        }\n      </div>\n    }\n  </div>\n</div>\n\n<ng-template #template let-element=\"element\">\n  <ta-notification-badge-container class=\"c-pointer\">\n    @if (element.callback || element.disabled) {\n      <div\n        (click)=\"this.callback(element)\"\n        class=\"item-container\"\n        [ngClass]=\"{ active: this.isActive(element), disabled: element.disabled }\"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"Item\"\n          [ngTemplateOutletContext]=\"{\n            item: element,\n          }\"\n        >\n        </ng-template>\n      </div>\n    } @else {\n      <div\n        class=\"item-container\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: element.exact }\"\n        [routerLink]=\"[this.getLink(element)]\"\n        [queryParamsHandling]=\"element.queryParamsHandling\"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"Item\"\n          [ngTemplateOutletContext]=\"{\n            item: element,\n          }\"\n        >\n        </ng-template>\n      </div>\n    }\n    @if (element.options?.notificationBadge?.label) {\n      <ta-notification-badge\n        [number]=\"element.options?.notificationBadge?.label || 0\"\n        [style]=\"element.options?.notificationBadge?.style\"\n        fontSize=\"xs\"\n      ></ta-notification-badge>\n    }\n  </ta-notification-badge-container>\n</ng-template>\n\n<ng-template #Item let-item=\"item\" [typedTemplate]=\"this.typeItem\">\n  <div class=\"item\" [class.disabled]=\"item.disabled\">\n    @if (this.hasFontIcon(item)) {\n      <div class=\"icon\">\n        <ta-font-icon [name]=\"this.getFontIcon(item)\"></ta-font-icon>\n      </div>\n    }\n    @if (item.label) {\n      <div class=\"label\">\n        {{ item.label | translate }}\n      </div>\n    }\n    @if (item.translationData?.length) {\n      <div class=\"bullet\">({{ item.translationData?.length }})</div>\n    }\n  </div>\n</ng-template>\n", styles: [".element-list{gap:var(--ta-space-md);display:flex;flex-direction:row}.element-list.vertical{display:flex;flex-direction:column}.tags .item-container .item{flex-direction:row;display:flex;align-items:center;gap:var(--ta-space-xs);padding:var(--ta-space-md);border:1px solid transparent;color:var(--ta-text-tertiary);background-color:var(--ta-surface-tertiary);border-color:var(--ta-surface-tertiary);border-radius:var(--ta-radius-rounded);font-size:var(--ta-font-body-sm-default-size);line-height:var(--ta-font-body-sm-default-line);font-weight:var(--ta-font-body-sm-default-weight)}.tags .item-container.disabled .item{background-color:var(--ta-surface-primary);border-color:var(--ta-border-disabled)}.tags .item-container.active .item{color:var(--ta-text-brand-primary);background-color:var(--ta-surface-default);border-color:var(--ta-surface-default)}.tab .list{border-bottom:1px solid var(--ta-border-secondary)}.tab .item-container .item{flex-direction:row;display:flex;align-items:center;gap:var(--ta-space-xs);padding:var(--ta-space-md);border-bottom:2px solid transparent;color:var(--ta-text-tertiary);font-size:var(--ta-font-body-sm-default-size);line-height:var(--ta-font-body-sm-default-line);font-weight:var(--ta-font-body-sm-default-weight)}.tab .item-container.disabled{opacity:.5}.tab .item-container.active .item{color:var(--ta-text-brand-primary);border-bottom-color:var(--ta-border-brand)}:host ::ng-deep .swiper-container{gap:var(--ta-space-sm)!important}:host ::ng-deep ta-font-icon{margin-top:-6px;display:block}:host ::ng-deep ta-font-icon i{height:18px!important;font-size:18px!important}\n"] }]
        }], ctorParameters: () => [], propDecorators: { menu: [{
                type: Input
            }], container: [{
                type: Input
            }], swiper: [{
                type: Input
            }], options: [{
                type: Input
            }], manuallyChanged$: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbXBvbmVudHMvbmF2aWdhdGlvbi9uYXZpZ2F0aW9uLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9uYXZpZ2F0aW9uL25hdmlnYXRpb24uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDekUsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUd0RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDOUMsT0FBTyxFQUFFLDBCQUEwQixFQUFFLG1DQUFtQyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQy9HLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUVoRCxPQUFPLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBSXRFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDJCQUEyQixDQUFDOzs7O0FBdUIvRCxNQUFNLE9BQU8sbUJBQW9CLFNBQVEsbUJBQW1CO0lBd0IxRDtRQUNFLEtBQUssRUFBRSxDQUFDO1FBakJWLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFHZixZQUFPLEdBRUgsRUFBRSxDQUFDO1FBS0UsZ0JBQVcsR0FBRyxXQUFXLENBQUM7UUFDMUIsZ0JBQVcsR0FBRyxXQUFXLENBQUM7UUFHNUIsY0FBUyxHQUFXLEVBQUUsQ0FBQztR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dXRsZXQgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuXG5pbXBvcnQgeyBUcmFuc2xhdGVNb2R1bGUgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgRm9udEljb25Db21wb25lbnQgfSBmcm9tICdAdGEvaWNvbnMnO1xuaW1wb3J0IHsgTm90aWZpY2F0aW9uQmFkZ2VDb21wb25lbnQsIE5vdGlmaWNhdGlvbkJhZGdlQ29udGFpbmVyQ29tcG9uZW50LCBTd2lwZXJMaWdodENvbXBvbmVudCB9IGZyb20gJ0B0YS91aSc7XG5pbXBvcnQgeyBUYUFic3RyYWN0Q29tcG9uZW50IH0gZnJvbSAnQHRhL3V0aWxzJztcblxuaW1wb3J0IHsgZ2V0Rm9udEljb24sIGhhc0ZvbnRJY29uIH0gZnJvbSAnLi4vLi4vaGVscGVycy9pY29uLW1hbmFnZXInO1xuaW1wb3J0IHsgTWVudUFjdGlvbiB9IGZyb20gJy4uLy4uL21vZGVscy9tZW51L2l0ZW0vYWN0aW9uJztcbmltcG9ydCB7IE1lbnVCYXNlIH0gZnJvbSAnLi4vLi4vbW9kZWxzL21lbnUvaXRlbS9iYXNlJztcbmltcG9ydCB7IE1lbnUsIE1lbnVJY29uIH0gZnJvbSAnLi4vLi4vbW9kZWxzL3B1YmxpYy1hcGknO1xuaW1wb3J0IHsgQ2FtVHJhbnNsYXRpb25NZW51IH0gZnJvbSAnLi4vLi4vdHJhbnNsYXRpb24uc2VydmljZSc7XG5cbi8vIFR5cGUgZMOpZmluaSBsb2NhbGVtZW50IHBvdXIgw6l2aXRlciBsYSBkw6lwZW5kYW5jZSB2ZXJzIEB0YS9zdHlsZXNcbnR5cGUgVGFTaXplcyA9ICd4cycgfCAnc20nIHwgJ21kJyB8ICdsZycgfCAneGwnIHwgJ3h4bCcgfCAnYmlnJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGEtbWVudS1uYXZpZ2F0aW9uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL25hdmlnYXRpb24uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9uYXZpZ2F0aW9uLmNvbXBvbmVudC5zY3NzJ10sXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtcbiAgICBOZ0lmLFxuICAgIE5nRm9yLFxuICAgIE5nQ2xhc3MsXG4gICAgTmdUZW1wbGF0ZU91dGxldCxcbiAgICBSb3V0ZXJNb2R1bGUsXG4gICAgVHJhbnNsYXRlTW9kdWxlLFxuICAgIEZvbnRJY29uQ29tcG9uZW50LFxuICAgIE5vdGlmaWNhdGlvbkJhZGdlQ29tcG9uZW50LFxuICAgIE5vdGlmaWNhdGlvbkJhZGdlQ29udGFpbmVyQ29tcG9uZW50LFxuICAgIFN3aXBlckxpZ2h0Q29tcG9uZW50LFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBOYXZpZ2F0aW9uQ29tcG9uZW50IGV4dGVuZHMgVGFBYnN0cmFjdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpXG4gIG1lbnUhOiBNZW51O1xuXG4gIEBJbnB1dCgpXG4gIGNvbnRhaW5lciE6ICd0YWdzJyB8ICd0YWInO1xuXG4gIEBJbnB1dCgpXG4gIHN3aXBlciA9IGZhbHNlO1xuXG4gIEBJbnB1dCgpXG4gIG9wdGlvbnM6IHtcbiAgICBzcGFjZUVsZW1lbnQ/OiBUYVNpemVzIHwgbnVsbDtcbiAgfSA9IHt9O1xuXG4gIEBJbnB1dCgpXG4gIG1hbnVhbGx5Q2hhbmdlZCQ/OiBPYnNlcnZhYmxlPHN0cmluZz47XG5cbiAgcmVhZG9ubHkgaGFzRm9udEljb24gPSBoYXNGb250SWNvbjtcbiAgcmVhZG9ubHkgZ2V0Rm9udEljb24gPSBnZXRGb250SWNvbjtcblxuICBwdWJsaWMgcmVhZG9ubHkgdHlwZUl0ZW0hOiB7IGl0ZW06IE1lbnVCYXNlIHwgTWVudUFjdGlvbiB8IE1lbnVJY29uIH07XG4gIHB1YmxpYyBhY3RpdmVLZXk6IHN0cmluZyA9ICcnO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgQ2FtVHJhbnNsYXRpb25NZW51LmdldEluc3RhbmNlKCk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICBjb25zdCBkZWZhdWx0T3BlbiA9IHRoaXMubWVudS5lbGVtZW50cy5maW5kKGUgPT4gZS5kZWZhdWx0T3Blbik7XG5cbiAgICBpZiAoIWRlZmF1bHRPcGVuIHx8ICFkZWZhdWx0T3Blbi5jYWxsYmFjaykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmNhbGxiYWNrKGRlZmF1bHRPcGVuKTtcblxuICAgIGlmICh0aGlzLm1hbnVhbGx5Q2hhbmdlZCQpIHtcbiAgICAgIHRoaXMuX3JlZ2lzdGVyU3Vic2NyaXB0aW9uKFxuICAgICAgICB0aGlzLm1hbnVhbGx5Q2hhbmdlZCQuc3Vic2NyaWJlKHtcbiAgICAgICAgICBuZXh0OiAoa2V5OiBzdHJpbmcpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGZvdW5kID0gdGhpcy5tZW51LmVsZW1lbnRzLmZpbmQoZWxlbWVudCA9PiBlbGVtZW50LmtleSA9PT0ga2V5KTtcbiAgICAgICAgICAgIGlmIChmb3VuZCkge1xuICAgICAgICAgICAgICB0aGlzLmNhbGxiYWNrKGZvdW5kKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICB9KVxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgZ2V0U3BhY2VDbGFzcygpIHtcbiAgICBpZiAodGhpcy5vcHRpb25zLnNwYWNlRWxlbWVudCA9PT0gbnVsbCkge1xuICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICByZXR1cm4gYGctc3BhY2UtJHt0aGlzLm9wdGlvbnMuc3BhY2VFbGVtZW50ID8/ICdsZyd9YDtcbiAgfVxuICBwdWJsaWMgZ2V0TGluayhpdGVtOiBNZW51SWNvbiB8IE1lbnVBY3Rpb24gfCBNZW51QmFzZSkge1xuICAgIGlmIChpdGVtLmxpbmsgJiYgaXRlbS5saW5rICE9PSAnJykge1xuICAgICAgcmV0dXJuIGl0ZW0ubGluaztcbiAgICB9XG5cbiAgICByZXR1cm4gJyc7IC8vIFRPRE8gdGhpcy5fbmF2aWdhdGlvblNlcnZpY2UuY3VycmVudFBhZ2VVcmw7XG4gIH1cblxuICBwdWJsaWMgY2FsbGJhY2soaXRlbTogTWVudUJhc2UpIHtcbiAgICBpZiAoaXRlbS5kaXNhYmxlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmFjdGl2ZUtleSA9IGl0ZW0ua2V5O1xuICAgIGlmIChpdGVtLmNhbGxiYWNrKSB7XG4gICAgICBpdGVtLmNhbGxiYWNrKCk7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGlzQWN0aXZlKGl0ZW06IE1lbnVCYXNlKSB7XG4gICAgcmV0dXJuIGl0ZW0ua2V5ID09PSB0aGlzLmFjdGl2ZUtleTtcbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cIm5hdmlnYXRpb24tY29udGFpbmVyXCIgW2NsYXNzXT1cInRoaXMuY29udGFpbmVyXCI+XG4gIDxkaXYgY2xhc3M9XCJsaXN0XCI+XG4gICAgQGlmICh0aGlzLnN3aXBlcikge1xuICAgICAgPHRhLXN3aXBlci1saWdodFxuICAgICAgICBbaXRlbXNdPVwidGhpcy5tZW51LmVsZW1lbnRzXCJcbiAgICAgICAgW3RlbXBsYXRlXT1cInRlbXBsYXRlXCJcbiAgICAgICAgW2ZvcmNlZF09XCJ0cnVlXCJcbiAgICAgICAgW3N3aXBlckNsYXNzZXNdPVwidGhpcy5nZXRTcGFjZUNsYXNzKClcIlxuICAgICAgPjwvdGEtc3dpcGVyLWxpZ2h0PlxuICAgIH0gQGVsc2Uge1xuICAgICAgPGRpdiBjbGFzcz1cImVsZW1lbnQtbGlzdFwiIFtuZ0NsYXNzXT1cInRoaXMubWVudS5kaXJlY3Rpb24gKyAnICcgKyB0aGlzLmdldFNwYWNlQ2xhc3MoKVwiPlxuICAgICAgICBAZm9yIChlbGVtZW50IG9mIHRoaXMubWVudS5lbGVtZW50czsgdHJhY2sgZWxlbWVudCkge1xuICAgICAgICAgIDxkaXYgY2xhc3M9XCJlbGVtZW50XCI+XG4gICAgICAgICAgICA8bmctdGVtcGxhdGVcbiAgICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRdPVwidGVtcGxhdGVcIlxuICAgICAgICAgICAgICBbbmdUZW1wbGF0ZU91dGxldENvbnRleHRdPVwie1xuICAgICAgICAgICAgICAgIGVsZW1lbnQ6IGVsZW1lbnQsXG4gICAgICAgICAgICAgIH1cIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgfVxuICAgICAgPC9kaXY+XG4gICAgfVxuICA8L2Rpdj5cbjwvZGl2PlxuXG48bmctdGVtcGxhdGUgI3RlbXBsYXRlIGxldC1lbGVtZW50PVwiZWxlbWVudFwiPlxuICA8dGEtbm90aWZpY2F0aW9uLWJhZGdlLWNvbnRhaW5lciBjbGFzcz1cImMtcG9pbnRlclwiPlxuICAgIEBpZiAoZWxlbWVudC5jYWxsYmFjayB8fCBlbGVtZW50LmRpc2FibGVkKSB7XG4gICAgICA8ZGl2XG4gICAgICAgIChjbGljayk9XCJ0aGlzLmNhbGxiYWNrKGVsZW1lbnQpXCJcbiAgICAgICAgY2xhc3M9XCJpdGVtLWNvbnRhaW5lclwiXG4gICAgICAgIFtuZ0NsYXNzXT1cInsgYWN0aXZlOiB0aGlzLmlzQWN0aXZlKGVsZW1lbnQpLCBkaXNhYmxlZDogZWxlbWVudC5kaXNhYmxlZCB9XCJcbiAgICAgID5cbiAgICAgICAgPG5nLXRlbXBsYXRlXG4gICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRdPVwiSXRlbVwiXG4gICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cIntcbiAgICAgICAgICAgIGl0ZW06IGVsZW1lbnQsXG4gICAgICAgICAgfVwiXG4gICAgICAgID5cbiAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgIDwvZGl2PlxuICAgIH0gQGVsc2Uge1xuICAgICAgPGRpdlxuICAgICAgICBjbGFzcz1cIml0ZW0tY29udGFpbmVyXCJcbiAgICAgICAgcm91dGVyTGlua0FjdGl2ZT1cImFjdGl2ZVwiXG4gICAgICAgIFtyb3V0ZXJMaW5rQWN0aXZlT3B0aW9uc109XCJ7IGV4YWN0OiBlbGVtZW50LmV4YWN0IH1cIlxuICAgICAgICBbcm91dGVyTGlua109XCJbdGhpcy5nZXRMaW5rKGVsZW1lbnQpXVwiXG4gICAgICAgIFtxdWVyeVBhcmFtc0hhbmRsaW5nXT1cImVsZW1lbnQucXVlcnlQYXJhbXNIYW5kbGluZ1wiXG4gICAgICA+XG4gICAgICAgIDxuZy10ZW1wbGF0ZVxuICAgICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0XT1cIkl0ZW1cIlxuICAgICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0Q29udGV4dF09XCJ7XG4gICAgICAgICAgICBpdGVtOiBlbGVtZW50LFxuICAgICAgICAgIH1cIlxuICAgICAgICA+XG4gICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgICA8L2Rpdj5cbiAgICB9XG4gICAgQGlmIChlbGVtZW50Lm9wdGlvbnM/Lm5vdGlmaWNhdGlvbkJhZGdlPy5sYWJlbCkge1xuICAgICAgPHRhLW5vdGlmaWNhdGlvbi1iYWRnZVxuICAgICAgICBbbnVtYmVyXT1cImVsZW1lbnQub3B0aW9ucz8ubm90aWZpY2F0aW9uQmFkZ2U/LmxhYmVsIHx8IDBcIlxuICAgICAgICBbc3R5bGVdPVwiZWxlbWVudC5vcHRpb25zPy5ub3RpZmljYXRpb25CYWRnZT8uc3R5bGVcIlxuICAgICAgICBmb250U2l6ZT1cInhzXCJcbiAgICAgID48L3RhLW5vdGlmaWNhdGlvbi1iYWRnZT5cbiAgICB9XG4gIDwvdGEtbm90aWZpY2F0aW9uLWJhZGdlLWNvbnRhaW5lcj5cbjwvbmctdGVtcGxhdGU+XG5cbjxuZy10ZW1wbGF0ZSAjSXRlbSBsZXQtaXRlbT1cIml0ZW1cIiBbdHlwZWRUZW1wbGF0ZV09XCJ0aGlzLnR5cGVJdGVtXCI+XG4gIDxkaXYgY2xhc3M9XCJpdGVtXCIgW2NsYXNzLmRpc2FibGVkXT1cIml0ZW0uZGlzYWJsZWRcIj5cbiAgICBAaWYgKHRoaXMuaGFzRm9udEljb24oaXRlbSkpIHtcbiAgICAgIDxkaXYgY2xhc3M9XCJpY29uXCI+XG4gICAgICAgIDx0YS1mb250LWljb24gW25hbWVdPVwidGhpcy5nZXRGb250SWNvbihpdGVtKVwiPjwvdGEtZm9udC1pY29uPlxuICAgICAgPC9kaXY+XG4gICAgfVxuICAgIEBpZiAoaXRlbS5sYWJlbCkge1xuICAgICAgPGRpdiBjbGFzcz1cImxhYmVsXCI+XG4gICAgICAgIHt7IGl0ZW0ubGFiZWwgfCB0cmFuc2xhdGUgfX1cbiAgICAgIDwvZGl2PlxuICAgIH1cbiAgICBAaWYgKGl0ZW0udHJhbnNsYXRpb25EYXRhPy5sZW5ndGgpIHtcbiAgICAgIDxkaXYgY2xhc3M9XCJidWxsZXRcIj4oe3sgaXRlbS50cmFuc2xhdGlvbkRhdGE/Lmxlbmd0aCB9fSk8L2Rpdj5cbiAgICB9XG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT5cbiJdfQ==