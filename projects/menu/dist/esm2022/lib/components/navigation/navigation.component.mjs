import { NgClass, NgTemplateOutlet } from '@angular/common';
import { Component, Input } from '@angular/core';
import { RouterModule } from '@angular/router';
import { TranslateModule } from '@ngx-translate/core';
import { FontIconComponent } from '@ta/icons';
import { NotificationBadgeComponent, NotificationBadgeContainerComponent, SwiperLightComponent } from '@ta/ui';
import { TaAbstractComponent, TypedTemplateDirective } from '@ta/utils';
import { getFontIcon, hasFontIcon } from '../../helpers/icon-manager';
import { TaTranslationMenu } from '../../translation.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@ngx-translate/core";
export class NavigationComponent extends TaAbstractComponent {
    constructor() {
        super();
        this.swiper = false;
        this.options = {};
        this.hasFontIcon = hasFontIcon;
        this.getFontIcon = getFontIcon;
        this.activeKey = '';
        TaTranslationMenu.getInstance();
    }
    ngOnInit() {
        const defaultOpen = this.menu.elements.find((e) => e.defaultOpen);
        if (!defaultOpen || !defaultOpen.callback) {
            return;
        }
        this.callback(defaultOpen);
        if (this.manuallyChanged$) {
            this._registerSubscription(this.manuallyChanged$.subscribe({
                next: (key) => {
                    const found = this.menu.elements.find((element) => element.key === key);
                    if (found) {
                        this.callback(found);
                    }
                },
            }));
        }
    }
    getSpaceClass() {
        if (this.options.spaceElement === null) {
            return '';
        }
        return `g-space-${this.options.spaceElement ?? 'lg'}`;
    }
    getLink(item) {
        if (item.link && item.link !== '') {
            return item.link;
        }
        return ''; // TODO this._navigationService.currentPageUrl;
    }
    callback(item) {
        if (item.disabled) {
            return;
        }
        this.activeKey = item.key;
        if (item.callback) {
            item.callback();
        }
    }
    isActive(item) {
        return item.key === this.activeKey;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: NavigationComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.14", type: NavigationComponent, isStandalone: true, selector: "ta-menu-navigation", inputs: { menu: "menu", container: "container", swiper: "swiper", options: "options", manuallyChanged$: "manuallyChanged$" }, usesInheritance: true, ngImport: i0, template: "<div class=\"navigation-container\" [class]=\"this.container\">\n  <div class=\"list\">\n    @if (this.swiper) {\n      <ta-swiper-light\n        [items]=\"this.menu.elements\"\n        [template]=\"template\"\n        [forced]=\"true\"\n        [swiperClasses]=\"this.getSpaceClass()\"\n      ></ta-swiper-light>\n    } @else {\n      <div class=\"element-list\" [ngClass]=\"this.menu.direction + ' ' + this.getSpaceClass()\">\n        @for (element of this.menu.elements; track element) {\n          <div class=\"element\">\n            <ng-template\n              [ngTemplateOutlet]=\"template\"\n              [ngTemplateOutletContext]=\"{\n                element: element,\n              }\"\n            >\n            </ng-template>\n          </div>\n        }\n      </div>\n    }\n  </div>\n</div>\n\n<ng-template #template let-element=\"element\">\n  <ta-notification-badge-container class=\"c-pointer\">\n    @if (element.callback || element.disabled) {\n      <div\n        (click)=\"this.callback(element)\"\n        class=\"item-container\"\n        [ngClass]=\"{ active: this.isActive(element), disabled: element.disabled }\"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"Item\"\n          [ngTemplateOutletContext]=\"{\n            item: element,\n          }\"\n        >\n        </ng-template>\n      </div>\n    } @else {\n      <div\n        class=\"item-container\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: element.exact }\"\n        [routerLink]=\"[this.getLink(element)]\"\n        [queryParamsHandling]=\"element.queryParamsHandling\"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"Item\"\n          [ngTemplateOutletContext]=\"{\n            item: element,\n          }\"\n        >\n        </ng-template>\n      </div>\n    }\n    @if (element.options?.notificationBadge?.label) {\n      <ta-notification-badge\n        [number]=\"element.options?.notificationBadge?.label || 0\"\n        [style]=\"element.options?.notificationBadge?.style\"\n        fontSize=\"xs\"\n      ></ta-notification-badge>\n    }\n  </ta-notification-badge-container>\n</ng-template>\n\n<ng-template #Item let-item=\"item\" [typedTemplate]=\"this.typeItem\">\n  <div class=\"item\" [class.disabled]=\"item.disabled\">\n    @if (this.hasFontIcon(item)) {\n      <div class=\"icon\">\n        <ta-font-icon [name]=\"this.getFontIcon(item)\"></ta-font-icon>\n      </div>\n    }\n    @if (item.label) {\n      <div class=\"label\">\n        {{ item.label | translate }}\n      </div>\n    }\n    @if (item.translationData?.length) {\n      <div class=\"bullet\">({{ item.translationData?.length }})</div>\n    }\n  </div>\n</ng-template>\n", styles: [".element-list{gap:var(--ta-space-md);display:flex;flex-direction:row}.element-list.vertical{display:flex;flex-direction:column}.tags .item-container .item{flex-direction:row;display:flex;align-items:center;gap:var(--ta-space-xs);padding:var(--ta-space-md);border:1px solid transparent;color:var(--ta-text-tertiary);background-color:var(--ta-surface-tertiary);border-color:var(--ta-surface-tertiary);border-radius:var(--ta-radius-rounded);font-size:var(--ta-font-body-sm-default-size);line-height:var(--ta-font-body-sm-default-line);font-weight:var(--ta-font-body-sm-default-weight)}.tags .item-container.disabled .item{background-color:var(--ta-surface-primary);border-color:var(--ta-border-disabled)}.tags .item-container.active .item{color:var(--ta-text-brand-primary);background-color:var(--ta-surface-default);border-color:var(--ta-surface-default)}.tab .list{border-bottom:1px solid var(--ta-border-secondary)}.tab .item-container .item{flex-direction:row;display:flex;align-items:center;gap:var(--ta-space-xs);padding:var(--ta-space-md);border-bottom:2px solid transparent;color:var(--ta-text-tertiary);font-size:var(--ta-font-body-sm-default-size);line-height:var(--ta-font-body-sm-default-line);font-weight:var(--ta-font-body-sm-default-weight)}.tab .item-container.disabled{opacity:.5}.tab .item-container.active .item{color:var(--ta-text-brand-primary);border-bottom-color:var(--ta-border-brand)}:host ::ng-deep .swiper-container{gap:var(--ta-space-sm)!important}:host ::ng-deep ta-font-icon{margin-top:-6px;display:block}:host ::ng-deep ta-font-icon i{height:18px!important;font-size:18px!important}\n"], dependencies: [{ kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "ngmodule", type: RouterModule }, { kind: "directive", type: i1.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "info", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "directive", type: i1.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "ariaCurrentWhenActive", "routerLinkActive"], outputs: ["isActiveChange"], exportAs: ["routerLinkActive"] }, { kind: "ngmodule", type: TranslateModule }, { kind: "pipe", type: i2.TranslatePipe, name: "translate" }, { kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "component", type: NotificationBadgeComponent, selector: "ta-notification-badge", inputs: ["number", "fontSize", "style", "relative"] }, { kind: "component", type: NotificationBadgeContainerComponent, selector: "ta-notification-badge-container" }, { kind: "component", type: SwiperLightComponent, selector: "ta-swiper-light", inputs: ["items", "template", "swiperClasses", "containerClasses", "forced"] }, { kind: "directive", type: TypedTemplateDirective, selector: "ng-template[typedTemplate]", inputs: ["typedTemplate"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: NavigationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-menu-navigation', standalone: true, imports: [
                        NgClass,
                        NgTemplateOutlet,
                        RouterModule,
                        TranslateModule,
                        FontIconComponent,
                        NotificationBadgeComponent,
                        NotificationBadgeContainerComponent,
                        SwiperLightComponent,
                        TypedTemplateDirective,
                    ], template: "<div class=\"navigation-container\" [class]=\"this.container\">\n  <div class=\"list\">\n    @if (this.swiper) {\n      <ta-swiper-light\n        [items]=\"this.menu.elements\"\n        [template]=\"template\"\n        [forced]=\"true\"\n        [swiperClasses]=\"this.getSpaceClass()\"\n      ></ta-swiper-light>\n    } @else {\n      <div class=\"element-list\" [ngClass]=\"this.menu.direction + ' ' + this.getSpaceClass()\">\n        @for (element of this.menu.elements; track element) {\n          <div class=\"element\">\n            <ng-template\n              [ngTemplateOutlet]=\"template\"\n              [ngTemplateOutletContext]=\"{\n                element: element,\n              }\"\n            >\n            </ng-template>\n          </div>\n        }\n      </div>\n    }\n  </div>\n</div>\n\n<ng-template #template let-element=\"element\">\n  <ta-notification-badge-container class=\"c-pointer\">\n    @if (element.callback || element.disabled) {\n      <div\n        (click)=\"this.callback(element)\"\n        class=\"item-container\"\n        [ngClass]=\"{ active: this.isActive(element), disabled: element.disabled }\"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"Item\"\n          [ngTemplateOutletContext]=\"{\n            item: element,\n          }\"\n        >\n        </ng-template>\n      </div>\n    } @else {\n      <div\n        class=\"item-container\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: element.exact }\"\n        [routerLink]=\"[this.getLink(element)]\"\n        [queryParamsHandling]=\"element.queryParamsHandling\"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"Item\"\n          [ngTemplateOutletContext]=\"{\n            item: element,\n          }\"\n        >\n        </ng-template>\n      </div>\n    }\n    @if (element.options?.notificationBadge?.label) {\n      <ta-notification-badge\n        [number]=\"element.options?.notificationBadge?.label || 0\"\n        [style]=\"element.options?.notificationBadge?.style\"\n        fontSize=\"xs\"\n      ></ta-notification-badge>\n    }\n  </ta-notification-badge-container>\n</ng-template>\n\n<ng-template #Item let-item=\"item\" [typedTemplate]=\"this.typeItem\">\n  <div class=\"item\" [class.disabled]=\"item.disabled\">\n    @if (this.hasFontIcon(item)) {\n      <div class=\"icon\">\n        <ta-font-icon [name]=\"this.getFontIcon(item)\"></ta-font-icon>\n      </div>\n    }\n    @if (item.label) {\n      <div class=\"label\">\n        {{ item.label | translate }}\n      </div>\n    }\n    @if (item.translationData?.length) {\n      <div class=\"bullet\">({{ item.translationData?.length }})</div>\n    }\n  </div>\n</ng-template>\n", styles: [".element-list{gap:var(--ta-space-md);display:flex;flex-direction:row}.element-list.vertical{display:flex;flex-direction:column}.tags .item-container .item{flex-direction:row;display:flex;align-items:center;gap:var(--ta-space-xs);padding:var(--ta-space-md);border:1px solid transparent;color:var(--ta-text-tertiary);background-color:var(--ta-surface-tertiary);border-color:var(--ta-surface-tertiary);border-radius:var(--ta-radius-rounded);font-size:var(--ta-font-body-sm-default-size);line-height:var(--ta-font-body-sm-default-line);font-weight:var(--ta-font-body-sm-default-weight)}.tags .item-container.disabled .item{background-color:var(--ta-surface-primary);border-color:var(--ta-border-disabled)}.tags .item-container.active .item{color:var(--ta-text-brand-primary);background-color:var(--ta-surface-default);border-color:var(--ta-surface-default)}.tab .list{border-bottom:1px solid var(--ta-border-secondary)}.tab .item-container .item{flex-direction:row;display:flex;align-items:center;gap:var(--ta-space-xs);padding:var(--ta-space-md);border-bottom:2px solid transparent;color:var(--ta-text-tertiary);font-size:var(--ta-font-body-sm-default-size);line-height:var(--ta-font-body-sm-default-line);font-weight:var(--ta-font-body-sm-default-weight)}.tab .item-container.disabled{opacity:.5}.tab .item-container.active .item{color:var(--ta-text-brand-primary);border-bottom-color:var(--ta-border-brand)}:host ::ng-deep .swiper-container{gap:var(--ta-space-sm)!important}:host ::ng-deep ta-font-icon{margin-top:-6px;display:block}:host ::ng-deep ta-font-icon i{height:18px!important;font-size:18px!important}\n"] }]
        }], ctorParameters: () => [], propDecorators: { menu: [{
                type: Input
            }], container: [{
                type: Input
            }], swiper: [{
                type: Input
            }], options: [{
                type: Input
            }], manuallyChanged$: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,