import { NgClass, NgFor, NgIf, NgTemplateOutlet } from '@angular/common';
import { Component, Input } from '@angular/core';
import { RouterModule } from '@angular/router';
import { TranslateModule } from '@ngx-translate/core';
import { FontIconComponent } from '@ta/icons';
import { NotificationBadgeComponent, NotificationBadgeContainerComponent, SwiperLightComponent } from '@ta/ui';
import { TaAbstractComponent } from '@ta/utils';
import { getFontIcon, hasFontIcon } from '../../helpers/icon-manager';
import { TaTranslationMenu } from '../../translation.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@ngx-translate/core";
export class NavigationComponent extends TaAbstractComponent {
    constructor() {
        super();
        this.swiper = false;
        this.options = {};
        this.hasFontIcon = hasFontIcon;
        this.getFontIcon = getFontIcon;
        this.activeKey = '';
        TaTranslationMenu.getInstance();
    }
    ngOnInit() {
        const defaultOpen = this.menu.elements.find(e => e.defaultOpen);
        if (!defaultOpen || !defaultOpen.callback) {
            return;
        }
        this.callback(defaultOpen);
        if (this.manuallyChanged$) {
            this._registerSubscription(this.manuallyChanged$.subscribe({
                next: (key) => {
                    const found = this.menu.elements.find(element => element.key === key);
                    if (found) {
                        this.callback(found);
                    }
                },
            }));
        }
    }
    getSpaceClass() {
        if (this.options.spaceElement === null) {
            return '';
        }
        return `g-space-${this.options.spaceElement ?? 'lg'}`;
    }
    getLink(item) {
        if (item.link && item.link !== '') {
            return item.link;
        }
        return ''; // TODO this._navigationService.currentPageUrl;
    }
    callback(item) {
        if (item.disabled) {
            return;
        }
        this.activeKey = item.key;
        if (item.callback) {
            item.callback();
        }
    }
    isActive(item) {
        return item.key === this.activeKey;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NavigationComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: NavigationComponent, isStandalone: true, selector: "ta-menu-navigation", inputs: { menu: "menu", container: "container", swiper: "swiper", options: "options", manuallyChanged$: "manuallyChanged$" }, usesInheritance: true, ngImport: i0, template: "<div class=\"navigation-container\" [class]=\"this.container\">\n  <div class=\"list\">\n    @if (this.swiper) {\n      <ta-swiper-light\n        [items]=\"this.menu.elements\"\n        [template]=\"template\"\n        [forced]=\"true\"\n        [swiperClasses]=\"this.getSpaceClass()\"\n      ></ta-swiper-light>\n    } @else {\n      <div class=\"element-list\" [ngClass]=\"this.menu.direction + ' ' + this.getSpaceClass()\">\n        @for (element of this.menu.elements; track element) {\n          <div class=\"element\">\n            <ng-template\n              [ngTemplateOutlet]=\"template\"\n              [ngTemplateOutletContext]=\"{\n                element: element,\n              }\"\n            >\n            </ng-template>\n          </div>\n        }\n      </div>\n    }\n  </div>\n</div>\n\n<ng-template #template let-element=\"element\">\n  <ta-notification-badge-container class=\"c-pointer\">\n    @if (element.callback || element.disabled) {\n      <div\n        (click)=\"this.callback(element)\"\n        class=\"item-container\"\n        [ngClass]=\"{ active: this.isActive(element), disabled: element.disabled }\"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"Item\"\n          [ngTemplateOutletContext]=\"{\n            item: element,\n          }\"\n        >\n        </ng-template>\n      </div>\n    } @else {\n      <div\n        class=\"item-container\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: element.exact }\"\n        [routerLink]=\"[this.getLink(element)]\"\n        [queryParamsHandling]=\"element.queryParamsHandling\"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"Item\"\n          [ngTemplateOutletContext]=\"{\n            item: element,\n          }\"\n        >\n        </ng-template>\n      </div>\n    }\n    @if (element.options?.notificationBadge?.label) {\n      <ta-notification-badge\n        [number]=\"element.options?.notificationBadge?.label || 0\"\n        [style]=\"element.options?.notificationBadge?.style\"\n        fontSize=\"xs\"\n      ></ta-notification-badge>\n    }\n  </ta-notification-badge-container>\n</ng-template>\n\n<ng-template #Item let-item=\"item\" [typedTemplate]=\"this.typeItem\">\n  <div class=\"item\" [class.disabled]=\"item.disabled\">\n    @if (this.hasFontIcon(item)) {\n      <div class=\"icon\">\n        <ta-font-icon [name]=\"this.getFontIcon(item)\"></ta-font-icon>\n      </div>\n    }\n    @if (item.label) {\n      <div class=\"label\">\n        {{ item.label | translate }}\n      </div>\n    }\n    @if (item.translationData?.length) {\n      <div class=\"bullet\">({{ item.translationData?.length }})</div>\n    }\n  </div>\n</ng-template>\n", styles: [".element-list{gap:var(--ta-space-md);display:flex;flex-direction:row}.element-list.vertical{display:flex;flex-direction:column}.tags .item-container .item{flex-direction:row;display:flex;align-items:center;gap:var(--ta-space-xs);padding:var(--ta-space-md);border:1px solid transparent;color:var(--ta-text-tertiary);background-color:var(--ta-surface-tertiary);border-color:var(--ta-surface-tertiary);border-radius:var(--ta-radius-rounded);font-size:var(--ta-font-body-sm-default-size);line-height:var(--ta-font-body-sm-default-line);font-weight:var(--ta-font-body-sm-default-weight)}.tags .item-container.disabled .item{background-color:var(--ta-surface-primary);border-color:var(--ta-border-disabled)}.tags .item-container.active .item{color:var(--ta-text-brand-primary);background-color:var(--ta-surface-default);border-color:var(--ta-surface-default)}.tab .list{border-bottom:1px solid var(--ta-border-secondary)}.tab .item-container .item{flex-direction:row;display:flex;align-items:center;gap:var(--ta-space-xs);padding:var(--ta-space-md);border-bottom:2px solid transparent;color:var(--ta-text-tertiary);font-size:var(--ta-font-body-sm-default-size);line-height:var(--ta-font-body-sm-default-line);font-weight:var(--ta-font-body-sm-default-weight)}.tab .item-container.disabled{opacity:.5}.tab .item-container.active .item{color:var(--ta-text-brand-primary);border-bottom-color:var(--ta-border-brand)}:host ::ng-deep .swiper-container{gap:var(--ta-space-sm)!important}:host ::ng-deep ta-font-icon{margin-top:-6px;display:block}:host ::ng-deep ta-font-icon i{height:18px!important;font-size:18px!important}\n"], dependencies: [{ kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "ngmodule", type: RouterModule }, { kind: "directive", type: i1.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "info", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "directive", type: i1.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "ariaCurrentWhenActive", "routerLinkActive"], outputs: ["isActiveChange"], exportAs: ["routerLinkActive"] }, { kind: "ngmodule", type: TranslateModule }, { kind: "pipe", type: i2.TranslatePipe, name: "translate" }, { kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "component", type: NotificationBadgeComponent, selector: "ta-notification-badge", inputs: ["number", "fontSize", "style", "relative"] }, { kind: "component", type: NotificationBadgeContainerComponent, selector: "ta-notification-badge-container" }, { kind: "component", type: SwiperLightComponent, selector: "ta-swiper-light", inputs: ["items", "template", "swiperClasses", "containerClasses", "forced"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NavigationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-menu-navigation', standalone: true, imports: [
                        NgIf,
                        NgFor,
                        NgClass,
                        NgTemplateOutlet,
                        RouterModule,
                        TranslateModule,
                        FontIconComponent,
                        NotificationBadgeComponent,
                        NotificationBadgeContainerComponent,
                        SwiperLightComponent,
                    ], template: "<div class=\"navigation-container\" [class]=\"this.container\">\n  <div class=\"list\">\n    @if (this.swiper) {\n      <ta-swiper-light\n        [items]=\"this.menu.elements\"\n        [template]=\"template\"\n        [forced]=\"true\"\n        [swiperClasses]=\"this.getSpaceClass()\"\n      ></ta-swiper-light>\n    } @else {\n      <div class=\"element-list\" [ngClass]=\"this.menu.direction + ' ' + this.getSpaceClass()\">\n        @for (element of this.menu.elements; track element) {\n          <div class=\"element\">\n            <ng-template\n              [ngTemplateOutlet]=\"template\"\n              [ngTemplateOutletContext]=\"{\n                element: element,\n              }\"\n            >\n            </ng-template>\n          </div>\n        }\n      </div>\n    }\n  </div>\n</div>\n\n<ng-template #template let-element=\"element\">\n  <ta-notification-badge-container class=\"c-pointer\">\n    @if (element.callback || element.disabled) {\n      <div\n        (click)=\"this.callback(element)\"\n        class=\"item-container\"\n        [ngClass]=\"{ active: this.isActive(element), disabled: element.disabled }\"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"Item\"\n          [ngTemplateOutletContext]=\"{\n            item: element,\n          }\"\n        >\n        </ng-template>\n      </div>\n    } @else {\n      <div\n        class=\"item-container\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: element.exact }\"\n        [routerLink]=\"[this.getLink(element)]\"\n        [queryParamsHandling]=\"element.queryParamsHandling\"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"Item\"\n          [ngTemplateOutletContext]=\"{\n            item: element,\n          }\"\n        >\n        </ng-template>\n      </div>\n    }\n    @if (element.options?.notificationBadge?.label) {\n      <ta-notification-badge\n        [number]=\"element.options?.notificationBadge?.label || 0\"\n        [style]=\"element.options?.notificationBadge?.style\"\n        fontSize=\"xs\"\n      ></ta-notification-badge>\n    }\n  </ta-notification-badge-container>\n</ng-template>\n\n<ng-template #Item let-item=\"item\" [typedTemplate]=\"this.typeItem\">\n  <div class=\"item\" [class.disabled]=\"item.disabled\">\n    @if (this.hasFontIcon(item)) {\n      <div class=\"icon\">\n        <ta-font-icon [name]=\"this.getFontIcon(item)\"></ta-font-icon>\n      </div>\n    }\n    @if (item.label) {\n      <div class=\"label\">\n        {{ item.label | translate }}\n      </div>\n    }\n    @if (item.translationData?.length) {\n      <div class=\"bullet\">({{ item.translationData?.length }})</div>\n    }\n  </div>\n</ng-template>\n", styles: [".element-list{gap:var(--ta-space-md);display:flex;flex-direction:row}.element-list.vertical{display:flex;flex-direction:column}.tags .item-container .item{flex-direction:row;display:flex;align-items:center;gap:var(--ta-space-xs);padding:var(--ta-space-md);border:1px solid transparent;color:var(--ta-text-tertiary);background-color:var(--ta-surface-tertiary);border-color:var(--ta-surface-tertiary);border-radius:var(--ta-radius-rounded);font-size:var(--ta-font-body-sm-default-size);line-height:var(--ta-font-body-sm-default-line);font-weight:var(--ta-font-body-sm-default-weight)}.tags .item-container.disabled .item{background-color:var(--ta-surface-primary);border-color:var(--ta-border-disabled)}.tags .item-container.active .item{color:var(--ta-text-brand-primary);background-color:var(--ta-surface-default);border-color:var(--ta-surface-default)}.tab .list{border-bottom:1px solid var(--ta-border-secondary)}.tab .item-container .item{flex-direction:row;display:flex;align-items:center;gap:var(--ta-space-xs);padding:var(--ta-space-md);border-bottom:2px solid transparent;color:var(--ta-text-tertiary);font-size:var(--ta-font-body-sm-default-size);line-height:var(--ta-font-body-sm-default-line);font-weight:var(--ta-font-body-sm-default-weight)}.tab .item-container.disabled{opacity:.5}.tab .item-container.active .item{color:var(--ta-text-brand-primary);border-bottom-color:var(--ta-border-brand)}:host ::ng-deep .swiper-container{gap:var(--ta-space-sm)!important}:host ::ng-deep ta-font-icon{margin-top:-6px;display:block}:host ::ng-deep ta-font-icon i{height:18px!important;font-size:18px!important}\n"] }]
        }], ctorParameters: () => [], propDecorators: { menu: [{
                type: Input
            }], container: [{
                type: Input
            }], swiper: [{
                type: Input
            }], options: [{
                type: Input
            }], manuallyChanged$: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbXBvbmVudHMvbmF2aWdhdGlvbi9uYXZpZ2F0aW9uLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9uYXZpZ2F0aW9uL25hdmlnYXRpb24uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDekUsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUd0RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDOUMsT0FBTyxFQUFFLDBCQUEwQixFQUFFLG1DQUFtQyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQy9HLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUVoRCxPQUFPLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBSXRFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDOzs7O0FBdUI5RCxNQUFNLE9BQU8sbUJBQW9CLFNBQVEsbUJBQW1CO0lBd0IxRDtRQUNFLEtBQUssRUFBRSxDQUFDO1FBakJWLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFHZixZQUFPLEdBRUgsRUFBRSxDQUFDO1FBS0UsZ0JBQVcsR0FBRyxXQUFXLENBQUM7UUFDMUIsZ0JBQVcsR0FBRyxXQUFXLENBQUM7UUFHNUIsY0FBUyxHQUFXLEVBQUUsQ0FBQztRQUk1QixpQkFBaUIsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNsQyxDQUFDO0lBRUQsUUFBUTtRQUNOLE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUVoRSxJQUFJLENBQUMsV0FBVyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsRUFBRSxDQUFDO1lBQzFDLE9BQU87UUFDVCxDQUFDO1FBQ0QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUUzQixJQUFJLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1lBQzFCLElBQUksQ0FBQyxxQkFBcUIsQ0FDeEIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFNBQVMsQ0FBQztnQkFDOUIsSUFBSSxFQUFFLENBQUMsR0FBVyxFQUFFLEVBQUU7b0JBQ3BCLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEtBQUssR0FBRyxDQUFDLENBQUM7b0JBQ3RFLElBQUksS0FBSyxFQUFFLENBQUM7d0JBQ1YsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztvQkFDdkIsQ0FBQztnQkFDSCxDQUFDO2FBQ0YsQ0FBQyxDQUNILENBQUM7UUFDSixDQUFDO0lBQ0gsQ0FBQztJQUVNLGFBQWE7UUFDbEIsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksS0FBSyxJQUFJLEVBQUUsQ0FBQztZQUN2QyxPQUFPLEVBQUUsQ0FBQztRQUNaLENBQUM7UUFDRCxPQUFPLFdBQVcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLElBQUksSUFBSSxFQUFFLENBQUM7SUFDeEQsQ0FBQztJQUNNLE9BQU8sQ0FBQyxJQUFzQztRQUNuRCxJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxFQUFFLEVBQUUsQ0FBQztZQUNsQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDbkIsQ0FBQztRQUVELE9BQU8sRUFBRSxDQUFDLENBQUMsK0NBQStDO0lBQzVELENBQUM7SUFFTSxRQUFRLENBQUMsSUFBYztRQUM1QixJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUNsQixPQUFPO1FBQ1QsQ0FBQztRQUNELElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQztRQUMxQixJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUNsQixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbEIsQ0FBQztJQUNILENBQUM7SUFFTSxRQUFRLENBQUMsSUFBYztRQUM1QixPQUFPLElBQUksQ0FBQyxHQUFHLEtBQUssSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUNyQyxDQUFDOytHQTdFVSxtQkFBbUI7bUdBQW5CLG1CQUFtQixtT0N0Q2hDLGlxRkF1RkEsc29ERDNESSxPQUFPLG9GQUNQLGdCQUFnQixtSkFDaEIsWUFBWSxnZkFDWixlQUFlLDRGQUNmLGlCQUFpQixtRkFDakIsMEJBQTBCLHVIQUMxQixtQ0FBbUMsNEVBQ25DLG9CQUFvQjs7NEZBR1gsbUJBQW1CO2tCQWxCL0IsU0FBUzsrQkFDRSxvQkFBb0IsY0FHbEIsSUFBSSxXQUNQO3dCQUNQLElBQUk7d0JBQ0osS0FBSzt3QkFDTCxPQUFPO3dCQUNQLGdCQUFnQjt3QkFDaEIsWUFBWTt3QkFDWixlQUFlO3dCQUNmLGlCQUFpQjt3QkFDakIsMEJBQTBCO3dCQUMxQixtQ0FBbUM7d0JBQ25DLG9CQUFvQjtxQkFDckI7d0RBSUQsSUFBSTtzQkFESCxLQUFLO2dCQUlOLFNBQVM7c0JBRFIsS0FBSztnQkFJTixNQUFNO3NCQURMLEtBQUs7Z0JBSU4sT0FBTztzQkFETixLQUFLO2dCQU1OLGdCQUFnQjtzQkFEZixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdDbGFzcywgTmdGb3IsIE5nSWYsIE5nVGVtcGxhdGVPdXRsZXQgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuXG5pbXBvcnQgeyBUcmFuc2xhdGVNb2R1bGUgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgRm9udEljb25Db21wb25lbnQgfSBmcm9tICdAdGEvaWNvbnMnO1xuaW1wb3J0IHsgTm90aWZpY2F0aW9uQmFkZ2VDb21wb25lbnQsIE5vdGlmaWNhdGlvbkJhZGdlQ29udGFpbmVyQ29tcG9uZW50LCBTd2lwZXJMaWdodENvbXBvbmVudCB9IGZyb20gJ0B0YS91aSc7XG5pbXBvcnQgeyBUYUFic3RyYWN0Q29tcG9uZW50IH0gZnJvbSAnQHRhL3V0aWxzJztcblxuaW1wb3J0IHsgZ2V0Rm9udEljb24sIGhhc0ZvbnRJY29uIH0gZnJvbSAnLi4vLi4vaGVscGVycy9pY29uLW1hbmFnZXInO1xuaW1wb3J0IHsgTWVudUFjdGlvbiB9IGZyb20gJy4uLy4uL21vZGVscy9tZW51L2l0ZW0vYWN0aW9uJztcbmltcG9ydCB7IE1lbnVCYXNlIH0gZnJvbSAnLi4vLi4vbW9kZWxzL21lbnUvaXRlbS9iYXNlJztcbmltcG9ydCB7IE1lbnUsIE1lbnVJY29uIH0gZnJvbSAnLi4vLi4vbW9kZWxzL3B1YmxpYy1hcGknO1xuaW1wb3J0IHsgVGFUcmFuc2xhdGlvbk1lbnUgfSBmcm9tICcuLi8uLi90cmFuc2xhdGlvbi5zZXJ2aWNlJztcblxuLy8gVHlwZSBkw6lmaW5pIGxvY2FsZW1lbnQgcG91ciDDqXZpdGVyIGxhIGTDqXBlbmRhbmNlIHZlcnMgQHRhL3N0eWxlc1xudHlwZSBUYVNpemVzID0gJ3hzJyB8ICdzbScgfCAnbWQnIHwgJ2xnJyB8ICd4bCcgfCAneHhsJyB8ICdiaWcnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0YS1tZW51LW5hdmlnYXRpb24nLFxuICB0ZW1wbGF0ZVVybDogJy4vbmF2aWdhdGlvbi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL25hdmlnYXRpb24uY29tcG9uZW50LnNjc3MnXSxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW1xuICAgIE5nSWYsXG4gICAgTmdGb3IsXG4gICAgTmdDbGFzcyxcbiAgICBOZ1RlbXBsYXRlT3V0bGV0LFxuICAgIFJvdXRlck1vZHVsZSxcbiAgICBUcmFuc2xhdGVNb2R1bGUsXG4gICAgRm9udEljb25Db21wb25lbnQsXG4gICAgTm90aWZpY2F0aW9uQmFkZ2VDb21wb25lbnQsXG4gICAgTm90aWZpY2F0aW9uQmFkZ2VDb250YWluZXJDb21wb25lbnQsXG4gICAgU3dpcGVyTGlnaHRDb21wb25lbnQsXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIE5hdmlnYXRpb25Db21wb25lbnQgZXh0ZW5kcyBUYUFic3RyYWN0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KClcbiAgbWVudSE6IE1lbnU7XG5cbiAgQElucHV0KClcbiAgY29udGFpbmVyITogJ3RhZ3MnIHwgJ3RhYic7XG5cbiAgQElucHV0KClcbiAgc3dpcGVyID0gZmFsc2U7XG5cbiAgQElucHV0KClcbiAgb3B0aW9uczoge1xuICAgIHNwYWNlRWxlbWVudD86IFRhU2l6ZXMgfCBudWxsO1xuICB9ID0ge307XG5cbiAgQElucHV0KClcbiAgbWFudWFsbHlDaGFuZ2VkJD86IE9ic2VydmFibGU8c3RyaW5nPjtcblxuICByZWFkb25seSBoYXNGb250SWNvbiA9IGhhc0ZvbnRJY29uO1xuICByZWFkb25seSBnZXRGb250SWNvbiA9IGdldEZvbnRJY29uO1xuXG4gIHB1YmxpYyByZWFkb25seSB0eXBlSXRlbSE6IHsgaXRlbTogTWVudUJhc2UgfCBNZW51QWN0aW9uIHwgTWVudUljb24gfTtcbiAgcHVibGljIGFjdGl2ZUtleTogc3RyaW5nID0gJyc7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICBUYVRyYW5zbGF0aW9uTWVudS5nZXRJbnN0YW5jZSgpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgY29uc3QgZGVmYXVsdE9wZW4gPSB0aGlzLm1lbnUuZWxlbWVudHMuZmluZChlID0+IGUuZGVmYXVsdE9wZW4pO1xuXG4gICAgaWYgKCFkZWZhdWx0T3BlbiB8fCAhZGVmYXVsdE9wZW4uY2FsbGJhY2spIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5jYWxsYmFjayhkZWZhdWx0T3Blbik7XG5cbiAgICBpZiAodGhpcy5tYW51YWxseUNoYW5nZWQkKSB7XG4gICAgICB0aGlzLl9yZWdpc3RlclN1YnNjcmlwdGlvbihcbiAgICAgICAgdGhpcy5tYW51YWxseUNoYW5nZWQkLnN1YnNjcmliZSh7XG4gICAgICAgICAgbmV4dDogKGtleTogc3RyaW5nKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBmb3VuZCA9IHRoaXMubWVudS5lbGVtZW50cy5maW5kKGVsZW1lbnQgPT4gZWxlbWVudC5rZXkgPT09IGtleSk7XG4gICAgICAgICAgICBpZiAoZm91bmQpIHtcbiAgICAgICAgICAgICAgdGhpcy5jYWxsYmFjayhmb3VuZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgfSlcbiAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGdldFNwYWNlQ2xhc3MoKSB7XG4gICAgaWYgKHRoaXMub3B0aW9ucy5zcGFjZUVsZW1lbnQgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgcmV0dXJuIGBnLXNwYWNlLSR7dGhpcy5vcHRpb25zLnNwYWNlRWxlbWVudCA/PyAnbGcnfWA7XG4gIH1cbiAgcHVibGljIGdldExpbmsoaXRlbTogTWVudUljb24gfCBNZW51QWN0aW9uIHwgTWVudUJhc2UpIHtcbiAgICBpZiAoaXRlbS5saW5rICYmIGl0ZW0ubGluayAhPT0gJycpIHtcbiAgICAgIHJldHVybiBpdGVtLmxpbms7XG4gICAgfVxuXG4gICAgcmV0dXJuICcnOyAvLyBUT0RPIHRoaXMuX25hdmlnYXRpb25TZXJ2aWNlLmN1cnJlbnRQYWdlVXJsO1xuICB9XG5cbiAgcHVibGljIGNhbGxiYWNrKGl0ZW06IE1lbnVCYXNlKSB7XG4gICAgaWYgKGl0ZW0uZGlzYWJsZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5hY3RpdmVLZXkgPSBpdGVtLmtleTtcbiAgICBpZiAoaXRlbS5jYWxsYmFjaykge1xuICAgICAgaXRlbS5jYWxsYmFjaygpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBpc0FjdGl2ZShpdGVtOiBNZW51QmFzZSkge1xuICAgIHJldHVybiBpdGVtLmtleSA9PT0gdGhpcy5hY3RpdmVLZXk7XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJuYXZpZ2F0aW9uLWNvbnRhaW5lclwiIFtjbGFzc109XCJ0aGlzLmNvbnRhaW5lclwiPlxuICA8ZGl2IGNsYXNzPVwibGlzdFwiPlxuICAgIEBpZiAodGhpcy5zd2lwZXIpIHtcbiAgICAgIDx0YS1zd2lwZXItbGlnaHRcbiAgICAgICAgW2l0ZW1zXT1cInRoaXMubWVudS5lbGVtZW50c1wiXG4gICAgICAgIFt0ZW1wbGF0ZV09XCJ0ZW1wbGF0ZVwiXG4gICAgICAgIFtmb3JjZWRdPVwidHJ1ZVwiXG4gICAgICAgIFtzd2lwZXJDbGFzc2VzXT1cInRoaXMuZ2V0U3BhY2VDbGFzcygpXCJcbiAgICAgID48L3RhLXN3aXBlci1saWdodD5cbiAgICB9IEBlbHNlIHtcbiAgICAgIDxkaXYgY2xhc3M9XCJlbGVtZW50LWxpc3RcIiBbbmdDbGFzc109XCJ0aGlzLm1lbnUuZGlyZWN0aW9uICsgJyAnICsgdGhpcy5nZXRTcGFjZUNsYXNzKClcIj5cbiAgICAgICAgQGZvciAoZWxlbWVudCBvZiB0aGlzLm1lbnUuZWxlbWVudHM7IHRyYWNrIGVsZW1lbnQpIHtcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZWxlbWVudFwiPlxuICAgICAgICAgICAgPG5nLXRlbXBsYXRlXG4gICAgICAgICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0XT1cInRlbXBsYXRlXCJcbiAgICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cIntcbiAgICAgICAgICAgICAgICBlbGVtZW50OiBlbGVtZW50LFxuICAgICAgICAgICAgICB9XCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIH1cbiAgICAgIDwvZGl2PlxuICAgIH1cbiAgPC9kaXY+XG48L2Rpdj5cblxuPG5nLXRlbXBsYXRlICN0ZW1wbGF0ZSBsZXQtZWxlbWVudD1cImVsZW1lbnRcIj5cbiAgPHRhLW5vdGlmaWNhdGlvbi1iYWRnZS1jb250YWluZXIgY2xhc3M9XCJjLXBvaW50ZXJcIj5cbiAgICBAaWYgKGVsZW1lbnQuY2FsbGJhY2sgfHwgZWxlbWVudC5kaXNhYmxlZCkge1xuICAgICAgPGRpdlxuICAgICAgICAoY2xpY2spPVwidGhpcy5jYWxsYmFjayhlbGVtZW50KVwiXG4gICAgICAgIGNsYXNzPVwiaXRlbS1jb250YWluZXJcIlxuICAgICAgICBbbmdDbGFzc109XCJ7IGFjdGl2ZTogdGhpcy5pc0FjdGl2ZShlbGVtZW50KSwgZGlzYWJsZWQ6IGVsZW1lbnQuZGlzYWJsZWQgfVwiXG4gICAgICA+XG4gICAgICAgIDxuZy10ZW1wbGF0ZVxuICAgICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0XT1cIkl0ZW1cIlxuICAgICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0Q29udGV4dF09XCJ7XG4gICAgICAgICAgICBpdGVtOiBlbGVtZW50LFxuICAgICAgICAgIH1cIlxuICAgICAgICA+XG4gICAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgICA8L2Rpdj5cbiAgICB9IEBlbHNlIHtcbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3M9XCJpdGVtLWNvbnRhaW5lclwiXG4gICAgICAgIHJvdXRlckxpbmtBY3RpdmU9XCJhY3RpdmVcIlxuICAgICAgICBbcm91dGVyTGlua0FjdGl2ZU9wdGlvbnNdPVwieyBleGFjdDogZWxlbWVudC5leGFjdCB9XCJcbiAgICAgICAgW3JvdXRlckxpbmtdPVwiW3RoaXMuZ2V0TGluayhlbGVtZW50KV1cIlxuICAgICAgICBbcXVlcnlQYXJhbXNIYW5kbGluZ109XCJlbGVtZW50LnF1ZXJ5UGFyYW1zSGFuZGxpbmdcIlxuICAgICAgPlxuICAgICAgICA8bmctdGVtcGxhdGVcbiAgICAgICAgICBbbmdUZW1wbGF0ZU91dGxldF09XCJJdGVtXCJcbiAgICAgICAgICBbbmdUZW1wbGF0ZU91dGxldENvbnRleHRdPVwie1xuICAgICAgICAgICAgaXRlbTogZWxlbWVudCxcbiAgICAgICAgICB9XCJcbiAgICAgICAgPlxuICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgPC9kaXY+XG4gICAgfVxuICAgIEBpZiAoZWxlbWVudC5vcHRpb25zPy5ub3RpZmljYXRpb25CYWRnZT8ubGFiZWwpIHtcbiAgICAgIDx0YS1ub3RpZmljYXRpb24tYmFkZ2VcbiAgICAgICAgW251bWJlcl09XCJlbGVtZW50Lm9wdGlvbnM/Lm5vdGlmaWNhdGlvbkJhZGdlPy5sYWJlbCB8fCAwXCJcbiAgICAgICAgW3N0eWxlXT1cImVsZW1lbnQub3B0aW9ucz8ubm90aWZpY2F0aW9uQmFkZ2U/LnN0eWxlXCJcbiAgICAgICAgZm9udFNpemU9XCJ4c1wiXG4gICAgICA+PC90YS1ub3RpZmljYXRpb24tYmFkZ2U+XG4gICAgfVxuICA8L3RhLW5vdGlmaWNhdGlvbi1iYWRnZS1jb250YWluZXI+XG48L25nLXRlbXBsYXRlPlxuXG48bmctdGVtcGxhdGUgI0l0ZW0gbGV0LWl0ZW09XCJpdGVtXCIgW3R5cGVkVGVtcGxhdGVdPVwidGhpcy50eXBlSXRlbVwiPlxuICA8ZGl2IGNsYXNzPVwiaXRlbVwiIFtjbGFzcy5kaXNhYmxlZF09XCJpdGVtLmRpc2FibGVkXCI+XG4gICAgQGlmICh0aGlzLmhhc0ZvbnRJY29uKGl0ZW0pKSB7XG4gICAgICA8ZGl2IGNsYXNzPVwiaWNvblwiPlxuICAgICAgICA8dGEtZm9udC1pY29uIFtuYW1lXT1cInRoaXMuZ2V0Rm9udEljb24oaXRlbSlcIj48L3RhLWZvbnQtaWNvbj5cbiAgICAgIDwvZGl2PlxuICAgIH1cbiAgICBAaWYgKGl0ZW0ubGFiZWwpIHtcbiAgICAgIDxkaXYgY2xhc3M9XCJsYWJlbFwiPlxuICAgICAgICB7eyBpdGVtLmxhYmVsIHwgdHJhbnNsYXRlIH19XG4gICAgICA8L2Rpdj5cbiAgICB9XG4gICAgQGlmIChpdGVtLnRyYW5zbGF0aW9uRGF0YT8ubGVuZ3RoKSB7XG4gICAgICA8ZGl2IGNsYXNzPVwiYnVsbGV0XCI+KHt7IGl0ZW0udHJhbnNsYXRpb25EYXRhPy5sZW5ndGggfX0pPC9kaXY+XG4gICAgfVxuICA8L2Rpdj5cbjwvbmctdGVtcGxhdGU+XG4iXX0=