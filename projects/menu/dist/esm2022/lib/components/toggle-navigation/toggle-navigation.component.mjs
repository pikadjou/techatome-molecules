import { NgClass, NgIf, NgTemplateOutlet } from '@angular/common';
import { Component, Input } from '@angular/core';
import { RouterModule } from '@angular/router';
import { TranslateModule } from '@ngx-translate/core';
import { FontIconComponent, LocalIconComponent } from '@ta/icons';
import { SwiperLightComponent } from '@ta/ui';
import { getFontIcon, getIcon, hasFontIcon, hasIconImage } from '../../helpers/icon-manager';
import { TaTranslationMenu } from '../../translation.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@ngx-translate/core";
/*
 ** @deprecated
 */
export class ToggleNavigationComponent {
    constructor() {
        this.activeKey = '';
        this.notifEnabled = false;
        TaTranslationMenu.getInstance();
    }
    get containerCss() {
        return this.container ?? '';
    }
    ngOnInit() {
        if (this.menu.elements.find(element => element.options?.notificationBadge?.label)) {
            this.notifEnabled = true;
        }
        const activeItem = this.menu.elements.find(item => item.defaultOpen);
        if (activeItem) {
            this.callback(activeItem);
        }
    }
    hasFontIcon(item) {
        return hasFontIcon(item);
    }
    hasIconImage(item) {
        return hasIconImage(item);
    }
    getIcon(item) {
        return getIcon(item);
    }
    getFontIcon(item) {
        return getFontIcon(item);
    }
    getLink(item) {
        if (item.link && item.link !== '')
            return item.link;
        return ''; // TODO this._navigationService.currentPageUrl;
    }
    callback(item) {
        if (item.disabled) {
            return;
        }
        this.activeKey = item.key;
        if (item.callback) {
            item.callback();
        }
    }
    isActive(item) {
        return item.key === this.activeKey;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: ToggleNavigationComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.14", type: ToggleNavigationComponent, isStandalone: true, selector: "ta-toggle-navigation", inputs: { menu: "menu", container: "container" }, ngImport: i0, template: "<div class=\"toggle-container\" [ngClass]=\"this.containerCss\" [class.switch-container]=\"this.container === 'switch'\">\n  <ta-swiper-light\n    [items]=\"this.menu.elements\"\n    [template]=\"template\"\n    [forced]=\"true\"\n    swiperClasses=\"g-space-lg pt-space-md\"\n  ></ta-swiper-light>\n</div>\n\n<ng-template #template let-element=\"element\">\n  @if (element.callback || element.disabled) {\n    <div\n      (click)=\"this.callback(element)\"\n      class=\"toggle-element\"\n      [class.active]=\"this.isActive(element)\"\n      [class.disabled]=\"element.disabled\"\n    >\n      <ng-template\n        [ngTemplateOutlet]=\"Item\"\n        [ngTemplateOutletContext]=\"{\n          item: element,\n        }\"\n      >\n      </ng-template>\n    </div>\n  } @else {\n    <div\n      class=\"toggle-element\"\n      routerLinkActive=\"active\"\n      [routerLinkActiveOptions]=\"{ exact: element.exact }\"\n      [routerLink]=\"[this.getLink(element)]\"\n      [queryParamsHandling]=\"element.queryParamsHandling\"\n      [replaceUrl]=\"element.replaceUrl\"\n      [ngClass]=\"{ disabled: element.disabled }\"\n    >\n      <ng-template\n        [ngTemplateOutlet]=\"Item\"\n        [ngTemplateOutletContext]=\"{\n          item: element,\n        }\"\n      >\n      </ng-template>\n    </div>\n  }\n</ng-template>\n\n<ng-template #Item let-item=\"item\" [typedTemplate]=\"this.typeItem\">\n  <div class=\"label flex-row align-center mb-space-xs\">\n    @if (this.hasFontIcon(item) || this.hasIconImage(item)) {\n      <div class=\"icon\">\n        @if (this.hasFontIcon(item)) {\n          <span class=\"icon-material\">\n            <ta-font-icon [name]=\"this.getFontIcon(item)\"></ta-font-icon>\n          </span>\n        } @else if (this.hasIconImage(item)) {\n          <span class=\"icon-image\">\n            <ta-local-icon [type]=\"this.getIcon(item)\" size=\"xs\"></ta-local-icon>\n          </span>\n        }\n      </div>\n    }\n    @if (item.label) {\n      <div class=\"text-truncate\">\n        {{ item.label | translate }}\n      </div>\n    }\n    @if (item.options?.notificationBadge !== null) {\n      <div class=\"badge ml-space-xs\">\n        {{ item.options?.notificationBadge?.label }}\n      </div>\n    }\n    @if (item.translationData?.length) {\n      <div>({{ item.translationData?.length }})</div>\n    }\n  </div>\n</ng-template>\n", styles: [".toggle-container{border-bottom:1px solid var(--ta-neutral-300)}.toggle-container.switch-container{overflow:hidden}.toggle-container .badge{width:20px;height:20px;background-color:var(--ta-brand-700);color:var(--ta-brand-50);border-radius:50%;display:flex;justify-content:center;align-items:center}.toggle-container .toggle-element{color:var(--ta-neutral-800);font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-bold-weight);cursor:pointer}.toggle-container .toggle-element .icon{margin:auto;color:var(--ta-brand-700)}.toggle-container .toggle-element.active .icon{color:var(--ta-icon-brand-primary)}.toggle-container.switch{border-radius:var(--ta-space-xs)}.toggle-container.switch .toggle-element{background:var(--ta-surface-secondary)}.toggle-container.switch .toggle-element.disabled{opacity:.5}.toggle-container.switch .toggle-element.active{background:var(--ta-brand-700);color:var(--ta-neutral-50)}.toggle-container.tab .toggle-element.disabled{opacity:.5}.toggle-container.tab .toggle-element.active{color:var(--ta-text-brand-primary);border-bottom:2px solid var(--ta-border-brand)}.label{font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-default-weight)}\n"], dependencies: [{ kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "ngmodule", type: RouterModule }, { kind: "directive", type: i1.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "info", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "directive", type: i1.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "ariaCurrentWhenActive", "routerLinkActive"], outputs: ["isActiveChange"], exportAs: ["routerLinkActive"] }, { kind: "ngmodule", type: TranslateModule }, { kind: "pipe", type: i2.TranslatePipe, name: "translate" }, { kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "component", type: LocalIconComponent, selector: "ta-local-icon", inputs: ["type", "size", "rotation"] }, { kind: "component", type: SwiperLightComponent, selector: "ta-swiper-light", inputs: ["items", "template", "swiperClasses", "containerClasses", "forced"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: ToggleNavigationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-toggle-navigation', standalone: true, imports: [
                        NgIf,
                        NgClass,
                        NgTemplateOutlet,
                        RouterModule,
                        TranslateModule,
                        FontIconComponent,
                        LocalIconComponent,
                        SwiperLightComponent,
                    ], template: "<div class=\"toggle-container\" [ngClass]=\"this.containerCss\" [class.switch-container]=\"this.container === 'switch'\">\n  <ta-swiper-light\n    [items]=\"this.menu.elements\"\n    [template]=\"template\"\n    [forced]=\"true\"\n    swiperClasses=\"g-space-lg pt-space-md\"\n  ></ta-swiper-light>\n</div>\n\n<ng-template #template let-element=\"element\">\n  @if (element.callback || element.disabled) {\n    <div\n      (click)=\"this.callback(element)\"\n      class=\"toggle-element\"\n      [class.active]=\"this.isActive(element)\"\n      [class.disabled]=\"element.disabled\"\n    >\n      <ng-template\n        [ngTemplateOutlet]=\"Item\"\n        [ngTemplateOutletContext]=\"{\n          item: element,\n        }\"\n      >\n      </ng-template>\n    </div>\n  } @else {\n    <div\n      class=\"toggle-element\"\n      routerLinkActive=\"active\"\n      [routerLinkActiveOptions]=\"{ exact: element.exact }\"\n      [routerLink]=\"[this.getLink(element)]\"\n      [queryParamsHandling]=\"element.queryParamsHandling\"\n      [replaceUrl]=\"element.replaceUrl\"\n      [ngClass]=\"{ disabled: element.disabled }\"\n    >\n      <ng-template\n        [ngTemplateOutlet]=\"Item\"\n        [ngTemplateOutletContext]=\"{\n          item: element,\n        }\"\n      >\n      </ng-template>\n    </div>\n  }\n</ng-template>\n\n<ng-template #Item let-item=\"item\" [typedTemplate]=\"this.typeItem\">\n  <div class=\"label flex-row align-center mb-space-xs\">\n    @if (this.hasFontIcon(item) || this.hasIconImage(item)) {\n      <div class=\"icon\">\n        @if (this.hasFontIcon(item)) {\n          <span class=\"icon-material\">\n            <ta-font-icon [name]=\"this.getFontIcon(item)\"></ta-font-icon>\n          </span>\n        } @else if (this.hasIconImage(item)) {\n          <span class=\"icon-image\">\n            <ta-local-icon [type]=\"this.getIcon(item)\" size=\"xs\"></ta-local-icon>\n          </span>\n        }\n      </div>\n    }\n    @if (item.label) {\n      <div class=\"text-truncate\">\n        {{ item.label | translate }}\n      </div>\n    }\n    @if (item.options?.notificationBadge !== null) {\n      <div class=\"badge ml-space-xs\">\n        {{ item.options?.notificationBadge?.label }}\n      </div>\n    }\n    @if (item.translationData?.length) {\n      <div>({{ item.translationData?.length }})</div>\n    }\n  </div>\n</ng-template>\n", styles: [".toggle-container{border-bottom:1px solid var(--ta-neutral-300)}.toggle-container.switch-container{overflow:hidden}.toggle-container .badge{width:20px;height:20px;background-color:var(--ta-brand-700);color:var(--ta-brand-50);border-radius:50%;display:flex;justify-content:center;align-items:center}.toggle-container .toggle-element{color:var(--ta-neutral-800);font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-bold-weight);cursor:pointer}.toggle-container .toggle-element .icon{margin:auto;color:var(--ta-brand-700)}.toggle-container .toggle-element.active .icon{color:var(--ta-icon-brand-primary)}.toggle-container.switch{border-radius:var(--ta-space-xs)}.toggle-container.switch .toggle-element{background:var(--ta-surface-secondary)}.toggle-container.switch .toggle-element.disabled{opacity:.5}.toggle-container.switch .toggle-element.active{background:var(--ta-brand-700);color:var(--ta-neutral-50)}.toggle-container.tab .toggle-element.disabled{opacity:.5}.toggle-container.tab .toggle-element.active{color:var(--ta-text-brand-primary);border-bottom:2px solid var(--ta-border-brand)}.label{font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-default-weight)}\n"] }]
        }], ctorParameters: () => [], propDecorators: { menu: [{
                type: Input
            }], container: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,