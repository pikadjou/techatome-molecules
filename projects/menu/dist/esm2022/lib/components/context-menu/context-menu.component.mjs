import { AsyncPipe, NgFor, NgIf } from '@angular/common';
import { Component, Input } from '@angular/core';
import { RouterModule } from '@angular/router';
import { TranslateModule } from '@ngx-translate/core';
import { FontIconComponent, LocalIconComponent } from '@ta/icons';
import { TaBaseComponent } from '@ta/utils';
import { getFontIcon, getIcon, hasFontIcon, hasIconImage } from '../../helpers/icon-manager';
import { CamTranslationMenu } from '../../translation.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@ngx-translate/core";
export class ContextMenuComponent extends TaBaseComponent {
    constructor() {
        super();
        CamTranslationMenu.getInstance();
    }
    hasFontIcon(item) {
        return hasFontIcon(item);
    }
    hasIconImage(item) {
        return hasIconImage(item);
    }
    getIcon(item) {
        return getIcon(item);
    }
    getFontIcon(item) {
        return getFontIcon(item);
    }
    getLink(item) {
        if (item.link && item.link !== '')
            return item.link;
        return '';
    }
    getRoute(item) {
        return item.disabled ? [] : [this.getLink(item)];
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: ContextMenuComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: ContextMenuComponent, isStandalone: true, selector: "ta-context-menu", inputs: { menu: "menu" }, usesInheritance: true, ngImport: i0, template: "<ul class=\"context-menu row\">\n  @for (item of this.menu.elements; track this.trackByKey($index, item)) {\n    @if ((item.visible$ | async) === true) {\n      <li class=\"col-6 col-md-4 col-lg-2\">\n        <div\n          class=\"element\"\n          routerLinkActive=\"active\"\n          [routerLinkActiveOptions]=\"{ exact: item.exact }\"\n          [routerLink]=\"this.getRoute(item)\"\n          [queryParamsHandling]=\"item.queryParamsHandling\"\n          [class.disabled]=\"item.disabled\"\n        >\n          <div class=\"icon align-self-center\">\n            @if (this.hasFontIcon(item)) {\n              <span class=\"icon-material\">\n                <ta-font-icon [name]=\"this.getFontIcon(item)\" size=\"xs\"></ta-font-icon>\n              </span>\n            }\n            @if (this.hasIconImage(item)) {\n              <span class=\"icon-image\">\n                <ta-local-icon [type]=\"this.getIcon(item)\" size=\"xs\"></ta-local-icon>\n              </span>\n            }\n          </div>\n          <div class=\"label align-self-center\">\n            {{ item.label | translate }}\n          </div>\n        </div>\n      </li>\n    }\n  }\n</ul>\n", styles: [".context-menu{list-style:none;padding:0;margin:0}.context-menu .disabled{opacity:.5}.context-menu .element{text-align:center;border:1px solid var(--ta-neutral-400);padding:var(--ta-space-md) 0;margin-bottom:var(--ta-space-sm);border-radius:var(--ta-space-md)}.context-menu .element .icon{color:var(--ta-surface-brand-primary)}.context-menu .element .label{font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-bold-weight);overflow:hidden;text-overflow:ellipsis;white-space:nowrap;margin-top:var(--ta-space-xs)}\n"], dependencies: [{ kind: "pipe", type: AsyncPipe, name: "async" }, { kind: "ngmodule", type: RouterModule }, { kind: "directive", type: i1.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "info", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "directive", type: i1.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "ariaCurrentWhenActive", "routerLinkActive"], outputs: ["isActiveChange"], exportAs: ["routerLinkActive"] }, { kind: "ngmodule", type: TranslateModule }, { kind: "pipe", type: i2.TranslatePipe, name: "translate" }, { kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "component", type: LocalIconComponent, selector: "ta-local-icon", inputs: ["type", "size", "rotation"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: ContextMenuComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-context-menu', standalone: true, imports: [NgIf, NgFor, AsyncPipe, RouterModule, TranslateModule, FontIconComponent, LocalIconComponent], template: "<ul class=\"context-menu row\">\n  @for (item of this.menu.elements; track this.trackByKey($index, item)) {\n    @if ((item.visible$ | async) === true) {\n      <li class=\"col-6 col-md-4 col-lg-2\">\n        <div\n          class=\"element\"\n          routerLinkActive=\"active\"\n          [routerLinkActiveOptions]=\"{ exact: item.exact }\"\n          [routerLink]=\"this.getRoute(item)\"\n          [queryParamsHandling]=\"item.queryParamsHandling\"\n          [class.disabled]=\"item.disabled\"\n        >\n          <div class=\"icon align-self-center\">\n            @if (this.hasFontIcon(item)) {\n              <span class=\"icon-material\">\n                <ta-font-icon [name]=\"this.getFontIcon(item)\" size=\"xs\"></ta-font-icon>\n              </span>\n            }\n            @if (this.hasIconImage(item)) {\n              <span class=\"icon-image\">\n                <ta-local-icon [type]=\"this.getIcon(item)\" size=\"xs\"></ta-local-icon>\n              </span>\n            }\n          </div>\n          <div class=\"label align-self-center\">\n            {{ item.label | translate }}\n          </div>\n        </div>\n      </li>\n    }\n  }\n</ul>\n", styles: [".context-menu{list-style:none;padding:0;margin:0}.context-menu .disabled{opacity:.5}.context-menu .element{text-align:center;border:1px solid var(--ta-neutral-400);padding:var(--ta-space-md) 0;margin-bottom:var(--ta-space-sm);border-radius:var(--ta-space-md)}.context-menu .element .icon{color:var(--ta-surface-brand-primary)}.context-menu .element .label{font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-bold-weight);overflow:hidden;text-overflow:ellipsis;white-space:nowrap;margin-top:var(--ta-space-xs)}\n"] }]
        }], ctorParameters: () => [], propDecorators: { menu: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGV4dC1tZW51LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9jb250ZXh0LW1lbnUvY29udGV4dC1tZW51LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9jb250ZXh0LW1lbnUvY29udGV4dC1tZW51LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLGtCQUFrQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFNUMsT0FBTyxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBSzdGLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDJCQUEyQixDQUFDOzs7O0FBUy9ELE1BQU0sT0FBTyxvQkFBcUIsU0FBUSxlQUFlO0lBSXZEO1FBQ0UsS0FBSyxFQUFFLENBQUM7UUFDUixrQkFBa0IsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNuQyxDQUFDO0lBRU0sV0FBVyxDQUFDLElBQXNDO1FBQ3ZELE9BQU8sV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFFTSxZQUFZLENBQUMsSUFBc0M7UUFDeEQsT0FBTyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUVNLE9BQU8sQ0FBQyxJQUFzQztRQUNuRCxPQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN2QixDQUFDO0lBRU0sV0FBVyxDQUFDLElBQWdDO1FBQ2pELE9BQU8sV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFFTSxPQUFPLENBQUMsSUFBc0M7UUFDbkQsSUFBSSxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssRUFBRTtZQUFFLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztRQUVwRCxPQUFPLEVBQUUsQ0FBQztJQUNaLENBQUM7SUFFTSxRQUFRLENBQUMsSUFBc0M7UUFDcEQsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ25ELENBQUM7K0dBakNVLG9CQUFvQjttR0FBcEIsb0JBQW9CLDRIQ3RCakMsNHBDQWdDQSxnb0JEWnlCLFNBQVMsNkNBQUUsWUFBWSxnZkFBRSxlQUFlLDRGQUFFLGlCQUFpQixtRkFBRSxrQkFBa0I7OzRGQUUzRixvQkFBb0I7a0JBUGhDLFNBQVM7K0JBQ0UsaUJBQWlCLGNBR2YsSUFBSSxXQUNQLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLGVBQWUsRUFBRSxpQkFBaUIsRUFBRSxrQkFBa0IsQ0FBQzt3REFJdkcsSUFBSTtzQkFESCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXN5bmNQaXBlLCBOZ0ZvciwgTmdJZiB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuXG5pbXBvcnQgeyBUcmFuc2xhdGVNb2R1bGUgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcbmltcG9ydCB7IEZvbnRJY29uQ29tcG9uZW50LCBMb2NhbEljb25Db21wb25lbnQgfSBmcm9tICdAdGEvaWNvbnMnO1xuaW1wb3J0IHsgVGFCYXNlQ29tcG9uZW50IH0gZnJvbSAnQHRhL3V0aWxzJztcblxuaW1wb3J0IHsgZ2V0Rm9udEljb24sIGdldEljb24sIGhhc0ZvbnRJY29uLCBoYXNJY29uSW1hZ2UgfSBmcm9tICcuLi8uLi9oZWxwZXJzL2ljb24tbWFuYWdlcic7XG5pbXBvcnQgeyBNZW51QWN0aW9uIH0gZnJvbSAnLi4vLi4vbW9kZWxzL21lbnUvaXRlbS9hY3Rpb24nO1xuaW1wb3J0IHsgTWVudUJhc2UgfSBmcm9tICcuLi8uLi9tb2RlbHMvbWVudS9pdGVtL2Jhc2UnO1xuaW1wb3J0IHsgTWVudUljb24gfSBmcm9tICcuLi8uLi9tb2RlbHMvbWVudS9pdGVtL2ljb24nO1xuaW1wb3J0IHsgTWVudSB9IGZyb20gJy4uLy4uL21vZGVscy9tZW51L21lbnUnO1xuaW1wb3J0IHsgQ2FtVHJhbnNsYXRpb25NZW51IH0gZnJvbSAnLi4vLi4vdHJhbnNsYXRpb24uc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhLWNvbnRleHQtbWVudScsXG4gIHRlbXBsYXRlVXJsOiAnLi9jb250ZXh0LW1lbnUuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9jb250ZXh0LW1lbnUuY29tcG9uZW50LnNjc3MnXSxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW05nSWYsIE5nRm9yLCBBc3luY1BpcGUsIFJvdXRlck1vZHVsZSwgVHJhbnNsYXRlTW9kdWxlLCBGb250SWNvbkNvbXBvbmVudCwgTG9jYWxJY29uQ29tcG9uZW50XSxcbn0pXG5leHBvcnQgY2xhc3MgQ29udGV4dE1lbnVDb21wb25lbnQgZXh0ZW5kcyBUYUJhc2VDb21wb25lbnQge1xuICBASW5wdXQoKVxuICBtZW51ITogTWVudTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIENhbVRyYW5zbGF0aW9uTWVudS5nZXRJbnN0YW5jZSgpO1xuICB9XG5cbiAgcHVibGljIGhhc0ZvbnRJY29uKGl0ZW06IE1lbnVJY29uIHwgTWVudUFjdGlvbiB8IE1lbnVCYXNlKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIGhhc0ZvbnRJY29uKGl0ZW0pO1xuICB9XG5cbiAgcHVibGljIGhhc0ljb25JbWFnZShpdGVtOiBNZW51SWNvbiB8IE1lbnVBY3Rpb24gfCBNZW51QmFzZSk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBoYXNJY29uSW1hZ2UoaXRlbSk7XG4gIH1cblxuICBwdWJsaWMgZ2V0SWNvbihpdGVtOiBNZW51SWNvbiB8IE1lbnVBY3Rpb24gfCBNZW51QmFzZSkge1xuICAgIHJldHVybiBnZXRJY29uKGl0ZW0pO1xuICB9XG5cbiAgcHVibGljIGdldEZvbnRJY29uKGl0ZW06IE1lbnUgfCBNZW51SWNvbiB8IE1lbnVCYXNlKSB7XG4gICAgcmV0dXJuIGdldEZvbnRJY29uKGl0ZW0pO1xuICB9XG5cbiAgcHVibGljIGdldExpbmsoaXRlbTogTWVudUljb24gfCBNZW51QWN0aW9uIHwgTWVudUJhc2UpIHtcbiAgICBpZiAoaXRlbS5saW5rICYmIGl0ZW0ubGluayAhPT0gJycpIHJldHVybiBpdGVtLmxpbms7XG5cbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBwdWJsaWMgZ2V0Um91dGUoaXRlbTogTWVudUljb24gfCBNZW51QWN0aW9uIHwgTWVudUJhc2UpIHtcbiAgICByZXR1cm4gaXRlbS5kaXNhYmxlZCA/IFtdIDogW3RoaXMuZ2V0TGluayhpdGVtKV07XG4gIH1cbn1cbiIsIjx1bCBjbGFzcz1cImNvbnRleHQtbWVudSByb3dcIj5cbiAgQGZvciAoaXRlbSBvZiB0aGlzLm1lbnUuZWxlbWVudHM7IHRyYWNrIHRoaXMudHJhY2tCeUtleSgkaW5kZXgsIGl0ZW0pKSB7XG4gICAgQGlmICgoaXRlbS52aXNpYmxlJCB8IGFzeW5jKSA9PT0gdHJ1ZSkge1xuICAgICAgPGxpIGNsYXNzPVwiY29sLTYgY29sLW1kLTQgY29sLWxnLTJcIj5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNsYXNzPVwiZWxlbWVudFwiXG4gICAgICAgICAgcm91dGVyTGlua0FjdGl2ZT1cImFjdGl2ZVwiXG4gICAgICAgICAgW3JvdXRlckxpbmtBY3RpdmVPcHRpb25zXT1cInsgZXhhY3Q6IGl0ZW0uZXhhY3QgfVwiXG4gICAgICAgICAgW3JvdXRlckxpbmtdPVwidGhpcy5nZXRSb3V0ZShpdGVtKVwiXG4gICAgICAgICAgW3F1ZXJ5UGFyYW1zSGFuZGxpbmddPVwiaXRlbS5xdWVyeVBhcmFtc0hhbmRsaW5nXCJcbiAgICAgICAgICBbY2xhc3MuZGlzYWJsZWRdPVwiaXRlbS5kaXNhYmxlZFwiXG4gICAgICAgID5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiaWNvbiBhbGlnbi1zZWxmLWNlbnRlclwiPlxuICAgICAgICAgICAgQGlmICh0aGlzLmhhc0ZvbnRJY29uKGl0ZW0pKSB7XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiaWNvbi1tYXRlcmlhbFwiPlxuICAgICAgICAgICAgICAgIDx0YS1mb250LWljb24gW25hbWVdPVwidGhpcy5nZXRGb250SWNvbihpdGVtKVwiIHNpemU9XCJ4c1wiPjwvdGEtZm9udC1pY29uPlxuICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBAaWYgKHRoaXMuaGFzSWNvbkltYWdlKGl0ZW0pKSB7XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiaWNvbi1pbWFnZVwiPlxuICAgICAgICAgICAgICAgIDx0YS1sb2NhbC1pY29uIFt0eXBlXT1cInRoaXMuZ2V0SWNvbihpdGVtKVwiIHNpemU9XCJ4c1wiPjwvdGEtbG9jYWwtaWNvbj5cbiAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJsYWJlbCBhbGlnbi1zZWxmLWNlbnRlclwiPlxuICAgICAgICAgICAge3sgaXRlbS5sYWJlbCB8IHRyYW5zbGF0ZSB9fVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvbGk+XG4gICAgfVxuICB9XG48L3VsPlxuIl19