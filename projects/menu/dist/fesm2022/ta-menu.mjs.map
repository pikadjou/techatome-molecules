{"version":3,"file":"ta-menu.mjs","sources":["../../src/lib/helpers/icon-manager.ts","../../src/lib/translation.service.ts","../../src/lib/components/menu/item/menu-item.component.ts","../../src/lib/components/menu/item/menu-item.component.html","../../src/lib/components/menu/menu.component.ts","../../src/lib/components/menu/menu.component.html","../../src/lib/components/main-menu/main-menu.component.ts","../../src/lib/components/main-menu/main-menu.component.html","../../src/lib/components/bottom-sheet/templates/basic/bottom-sheet-template-basic.component.ts","../../src/lib/components/bottom-sheet/templates/basic/bottom-sheet-template-basic.component.html","../../src/lib/components/bottom-sheet/templates/generic/bottom-sheet-template-generic.component.ts","../../src/lib/components/bottom-sheet/templates/generic/bottom-sheet-template-generic.component.html","../../src/lib/components/quick-actions/quick-actions.component.ts","../../src/lib/components/quick-actions/quick-actions.component.html","../../src/lib/components/quick-actions-custom/quick-actions-custom.component.ts","../../src/lib/components/quick-actions-custom/quick-actions-custom.component.html","../../src/lib/components/toggle-navigation/toggle-navigation.component.ts","../../src/lib/components/toggle-navigation/toggle-navigation.component.html","../../src/lib/components/context-menu/context-menu.component.ts","../../src/lib/components/context-menu/context-menu.component.html","../../src/lib/components/navigation/navigation.component.ts","../../src/lib/components/navigation/navigation.component.html","../../src/lib/models/menu/menu.ts","../../src/lib/models/menu/item/base.ts","../../src/lib/models/menu/item/icon.ts","../../src/lib/models/menu/item/panel.ts","../../src/lib/models/routes.ts","../../src/lib/helpers/filter.ts","../../src/lib/components/list/list.component.ts","../../src/lib/components/list/list.component.html","../../src/lib/menu.module.ts","../../src/public-api.ts","../../src/ta-menu.ts"],"sourcesContent":["import { MenuBase } from '../models/menu/item/base';\nimport { MenuIcon } from '../models/menu/item/icon';\nimport { Menu } from '../models/menu/menu';\n\nexport const hasFontIcon = (item: Menu | MenuIcon | MenuBase) => {\n  if (item.hasOwnProperty('icon')) {\n    return typeof (<MenuIcon>item).icon === 'string';\n  }\n  return false;\n};\n\nexport const hasIconImage = (item: Menu | MenuIcon | MenuBase) => {\n  if (item.hasOwnProperty('icon')) {\n    return typeof (<MenuIcon>item).icon === 'number';\n  }\n  return false;\n};\n\nexport const getIcon = (item: Menu | MenuIcon | MenuBase) => {\n  if (hasFontIcon(item) || hasIconImage(item)) {\n    return (<MenuIcon>item).icon;\n  }\n  return '';\n};\n\nexport const getFontIcon = (item: Menu | MenuIcon | MenuBase) => {\n  if (hasFontIcon(item)) {\n    return <string>(<MenuIcon>item).icon;\n  }\n  return '';\n};\n","import { Injectable } from '@angular/core';\n\nimport { TaLazyTranslationService } from '@ta/translation';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaTranslationMenu extends TaLazyTranslationService {\n  constructor() {\n    super('menu');\n  }\n}\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\nimport { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\nimport { RouterModule } from '@angular/router';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { FontIconComponent } from '@ta/icons';\nimport { NotificationBadgeComponent } from '@ta/ui';\nimport { TemplateModalContainer, TemplateModalContainerData } from '@ta/ui';\nimport { TaBaseComponent, TypedTemplateDirective } from '@ta/utils';\n\nimport { getFontIcon, getIcon, hasFontIcon, hasIconImage } from '../../../helpers/icon-manager';\nimport { MenuAction } from '../../../models/menu/item/action';\nimport { MenuBase } from '../../../models/menu/item/base';\nimport { MenuIcon } from '../../../models/menu/item/icon';\nimport { MenuPanel } from '../../../models/menu/item/panel';\nimport { TaTranslationMenu } from '../../../translation.service';\n\n@Component({\n  selector: 'ta-menu-item',\n  templateUrl: './menu-item.component.html',\n  styleUrls: ['./menu-item.component.scss'],\n  standalone: true,\n  imports: [\n    NgClass,\n    NgTemplateOutlet,\n    RouterModule,\n    MatMenuModule,\n    TranslateModule,\n    FontIconComponent,\n    NotificationBadgeComponent,\n    TypedTemplateDirective,\n  ],\n})\nexport class MenuItemComponent extends TaBaseComponent implements OnInit {\n  @Input()\n  item!: MenuIcon | MenuAction | MenuBase | MenuPanel;\n\n  @Input()\n  styleType: String = 'bloc';\n\n  @ViewChild(MatMenuTrigger) triggerMenu!: MatMenuTrigger;\n\n  public readonly typeToken!: MenuIcon | MenuAction | MenuBase | MenuPanel;\n  public isOpen: boolean = false;\n\n  constructor(public modal: MatDialog) {\n    super();\n    TaTranslationMenu.getInstance();\n  }\n\n  ngOnInit() {\n    this.isOpen = this.item.defaultOpen;\n  }\n\n  public getStyleType() {\n    return this.styleType + ' ' + this.item.style;\n  }\n\n  public hasFontIcon(): boolean {\n    return hasFontIcon(this.item);\n  }\n\n  public hasIconImage(): boolean {\n    return hasIconImage(this.item);\n  }\n\n  public getIcon() {\n    return getIcon(this.item);\n  }\n\n  public getFontIcon() {\n    return getFontIcon(this.item);\n  }\n\n  public hasChild(): boolean {\n    return this.item.children.length > 0;\n  }\n  public toggle() {\n    this.isOpen = !this.isOpen;\n  }\n\n  public getTemplate() {\n    if (this.item.isMenuPanel) {\n      return (<MenuPanel>this.item).template;\n    }\n    return null;\n  }\n\n  public trackByFn(index: any, item: MenuBase) {\n    return this.item + '-' + item.key;\n  }\n\n  public executeCallback() {\n    const myTemplate = this.getTemplate();\n    if (myTemplate) {\n      if (this.breakpoints.isLessThanXS) {\n        this.modal.open<TemplateModalContainer, TemplateModalContainerData>(TemplateModalContainer, {\n          data: {\n            template: myTemplate,\n          },\n        });\n      } else {\n        this.triggerMenu.openMenu();\n      }\n    } else {\n      this.item.callback?.();\n    }\n  }\n\n  public getLink() {\n    if (this.item.link && this.item.link !== '') return this.item.link;\n\n    return '';\n  }\n}\n","@if (!this.hasChild()) {\n  <ng-container [style.cursor]=\"this.item.callback ? 'pointer' : 'default'\">\n    @if (this.getLink()) {\n      <a\n        class=\"link\"\n        [ngClass]=\"this.getStyleType()\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: this.item.exact }\"\n        [routerLink]=\"[this.getLink()]\"\n        [replaceUrl]=\"this.item.replaceUrl\"\n      >\n        <ng-template [ngTemplateOutlet]=\"Item\"></ng-template>\n      </a>\n    } @else {\n      <a (click)=\"this.executeCallback()\" class=\"link\" [ngClass]=\"this.getStyleType()\">\n        <ng-template [ngTemplateOutlet]=\"Item\"></ng-template>\n      </a>\n    }\n  </ng-container>\n}\n\n<ng-template #Item [typedTemplate]=\"this.typeToken\">\n  <div class=\"item pointer\" [class.disable]=\"item.disabled\">\n    <div class=\"icon\">\n      @if (this.hasFontIcon()) {\n        <span class=\"icon-material\">\n          <ta-font-icon [name]=\"this.getFontIcon()\" size=\"xs\" [ngClass]=\"item.iconsColor\"></ta-font-icon>\n        </span>\n      }\n    </div>\n\n    <div class=\"title\">{{ item.label | translate }}</div>\n\n    <div class=\"badge-container d-flex\">\n      @if (item.options?.notificationBadge?.label) {\n        <ta-notification-badge\n          [number]=\"item.options?.notificationBadge?.label || 0\"\n          [style]=\"'brand-700'\"\n          fontSize=\"xs\"\n          [relative]=\"true\"\n        ></ta-notification-badge>\n      }\n      @let extraTemplate = item.options?.extraTemplate;\n      @if (extraTemplate) {\n        <ng-template [ngTemplateOutlet]=\"extraTemplate\"></ng-template>\n      }\n    </div>\n    @if (item.endingIcon) {\n      <div class=\"ending-icon-container\">\n        <ta-font-icon [name]=\"item.endingIcon\" [ngClass]=\"item.iconsColor\"></ta-font-icon>\n      </div>\n    }\n    @let template = this.getTemplate();\n    @if (template) {\n      <div class=\"trigger-container\">\n        <div class=\"trigger\" [matMenuTriggerFor]=\"menu\" #triggerPanel></div>\n        <mat-menu #menu=\"matMenu\">\n          <ng-container *ngTemplateOutlet=\"template\"></ng-container>\n        </mat-menu>\n      </div>\n    }\n  </div>\n</ng-template>\n","import { AsyncPipe, NgClass } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { TaBaseComponent } from '@ta/utils';\n\nimport { Menu } from '../../models/menu/menu';\nimport { MenuItemComponent } from './item/menu-item.component';\n\n@Component({\n  selector: 'ta-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n  standalone: true,\n  imports: [NgClass, AsyncPipe, MenuItemComponent],\n})\nexport class MenuComponent extends TaBaseComponent {\n  @Input()\n  menu!: Menu;\n\n  @Input()\n  container!: 'second' | 'overflow' | 'main' | 'panel';\n\n  get containerCss() {\n    switch (this.container) {\n      case 'overflow':\n        return 'overflow vertical';\n      case 'second':\n        return 'second ' + this.menu.direction;\n      case 'main':\n        return 'main-nav ' + this.menu.direction;\n      default:\n        return '';\n    }\n  }\n\n  constructor() {\n    super();\n  }\n}\n","<ul class=\"menu\" [ngClass]=\"this.containerCss\">\n  @for (item of this.menu.elements; track item.key) {\n    @if ((item.visible$ | async) === true) {\n      <li>\n        <ta-menu-item [item]=\"item\" [class]=\"item.key\" [styleType]=\"this.menu.direction\"></ta-menu-item>\n      </li>\n    }\n  }\n</ul>\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\nimport { Component, Input, TemplateRef, inject } from '@angular/core';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\nimport { TaSharedMenuService } from '@ta/services';\nimport { LogoComponent } from '@ta/ui';\nimport { TaBaseComponent } from '@ta/utils';\n\nimport { Menu } from '../../models/menu/menu';\nimport { MenuComponent } from '../menu/menu.component';\n\n@Component({\n  selector: 'ta-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.scss'],\n  standalone: true,\n  imports: [NgClass, LogoComponent, MenuComponent, MatExpansionModule, NgTemplateOutlet],\n})\nexport class MainMenuComponent extends TaBaseComponent {\n  @Input()\n  menuMain!: Menu;\n\n  @Input()\n  menuUser!: Menu;\n\n  @Input()\n  userMenuTemplate?: TemplateRef<any>;\n\n  @Input()\n  direction: 'horizontal' | 'vertical' = 'vertical';\n\n  public sharedMenu = inject(TaSharedMenuService);\n\n  public toggleView() {\n    this.sharedMenu.isMinimized$.next(!this.sharedMenu.isMinimized$.getValue());\n  }\n}\n","<div class=\"main-nav-container\">   \n  <div class=\"max-container\">\n\n    <div class=\"main-nav\" [ngClass]=\"this.direction\">\n      <div class=\"logo\">\n        <ta-logo class=\"small\"></ta-logo>\n        <ta-logo class=\"oneline\" [type]=\"'oneline'\"></ta-logo>\n      </div>\n      <div class=\"flex-start align-center\">\n        <div class=\"menu-nav\">\n          <ta-menu class=\"menu\" [menu]=\"this.menuMain\" [container]=\"'main'\"></ta-menu>\n        </div>\n        @if (this.menuUser) {\n          <div class=\"user-nav\">\n            <div class=\"sep\"></div>\n            <ta-menu class=\"menu\" [menu]=\"this.menuUser\" [container]=\"'main'\"></ta-menu>\n          </div>\n        }\n        @if (this.userMenuTemplate) {\n          <div class=\"user-template\">\n            <ng-template [ngTemplateOutlet]=\"this.userMenuTemplate\"></ng-template>\n          </div>\n        }\n      </div>\n    </div>\n    \n  </div>\n    \n</div>\n","import { AsyncPipe, NgClass, NgFor, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { Component, Inject } from '@angular/core';\nimport { MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\n\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\n\nimport { FontIconComponent } from '@ta/icons';\nimport { ContainerValidationComponent } from '@ta/ui';\n\nimport { BottomSheetData } from '../../../../models/bottom/bottom-sheet-data';\nimport { TaTranslationMenu } from '../../../../translation.service';\n\nexport interface BottomSheetTemplateBasicParams {\n  orientation: 'horizontal' | 'vertical';\n  menu$: Observable<BottomSheetData[]>;\n}\n@Component({\n  selector: 'ta-bottom-sheet-template-basic',\n  templateUrl: './bottom-sheet-template-basic.component.html',\n  styleUrls: ['./bottom-sheet-template-basic.component.scss'],\n  standalone: true,\n  imports: [\n    NgIf,\n    NgFor,\n    NgClass,\n    AsyncPipe,\n    NgTemplateOutlet,\n    TranslateModule,\n    FontIconComponent,\n    ContainerValidationComponent,\n  ],\n})\nexport class BottomSheetTemplateBasicComponent {\n  public typeItem!: { item: BottomSheetData };\n\n  constructor(@Inject(MAT_BOTTOM_SHEET_DATA) public data: BottomSheetTemplateBasicParams) {\n    TaTranslationMenu.getInstance();\n  }\n}\n","<div class=\"handler\">\n  <span></span>\n</div>\n\n<div class=\"row bottom-sheet-template-basic\">\n  @for (item of this.data.menu$ | async; track item) {\n    <div\n      class=\"ta-c\"\n      [ngClass]=\"this.data.orientation === 'horizontal' ? 'col-12' : 'col'\"\n    >\n      @if (!item.secure) {\n        <div (click)=\"item.action()\">\n          <ng-template\n            [ngTemplateOutlet]=\"Item\"\n            [ngTemplateOutletContext]=\"{\n              item: item,\n            }\"\n          >\n          </ng-template>\n        </div>\n      } @else {\n        <ta-container-validation (validated)=\"item.action()\">\n          <ng-template\n            [ngTemplateOutlet]=\"Item\"\n            [ngTemplateOutletContext]=\"{\n              item: item,\n            }\"\n          >\n          </ng-template>\n        </ta-container-validation>\n      }\n    </div>\n  }\n</div>\n\n<ng-template #Item let-item=\"item\" [typedTemplate]=\"this.typeItem\">\n  <div class=\"item\" [ngClass]=\"this.data.orientation\">\n    @if (item.icon) {\n      <ta-font-icon [name]=\"item.icon\" class=\"icon\"></ta-font-icon>\n    }\n\n    <div class=\"title-container\">\n      <div class=\"label\">{{ item.label | translate }}</div>\n\n      @if (item.subtitle) {\n        <div>\n          {{ item.subtitle | translate }}\n        </div>\n      }\n    </div>\n  </div>\n</ng-template>\n","import { NgStyle } from '@angular/common';\nimport { Component, Inject, TemplateRef } from '@angular/core';\nimport { MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\n\nexport type BottomSheetTemplateGenericParams<T = any> = {\n  maxHeight?: number;\n  template: TemplateRef<any>;\n  context?: T;\n};\n\n@Component({\nselector: 'ta-bottom-sheet-template-generic',\n  templateUrl: './bottom-sheet-template-generic.component.html',\n  styleUrls: ['./bottom-sheet-template-generic.component.scss'],\n  standalone: true,\n  imports: [NgStyle],\n})\nexport class BottomSheetTemplateGenericComponent {\n  constructor(@Inject(MAT_BOTTOM_SHEET_DATA) public data: BottomSheetTemplateGenericParams) {}\n}\n","<div class=\"handler\">\n  <span></span>\n</div>\n\n<div\n  class=\"bottom-sheet-template-generic\"\n  [ngStyle]=\"{ 'max-height': this.data.maxHeight ?? 'auto' }\"\n>\n  <ng-template\n    [ngTemplateOutlet]=\"this.data.template\"\n    [ngTemplateOutletContext]=\"this.data.context ?? {}\"\n  ></ng-template>\n</div>\n","import { NgIf, NgTemplateOutlet } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { LocalIconComponent } from '@ta/icons';\nimport { SwiperComponent } from '@ta/ui';\n\nimport { MenuIcon } from '../../models/menu/item/icon';\nimport { Menu } from '../../models/menu/menu';\nimport { TaTranslationMenu } from '../../translation.service';\n\n@Component({\n  selector: 'ta-quick-actions',\n  templateUrl: './quick-actions.component.html',\n  styleUrls: ['./quick-actions.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgTemplateOutlet, TranslateModule, LocalIconComponent, SwiperComponent],\n})\nexport class QuickActionsComponent {\n  @Input()\n  tabSelection: string | null = null;\n\n  @Input()\n  menu!: Menu;\n\n  @Input()\n  public elementPerPage: number = 3.5;\n\n  @Input()\n  canDeselect: boolean = false;\n\n  @Output()\n  tabSelected = new EventEmitter<string | null>();\n\n  typeToken!: { element: MenuIcon };\n\n  constructor() {\n    TaTranslationMenu.getInstance();\n  }\n\n  public onQuickActionSelected(menuIcon: MenuIcon) {\n    if (menuIcon.disabled) {\n      return;\n    }\n\n    this.tabSelected.emit(this._selectedValue(menuIcon.key));\n  }\n\n  private _selectedValue(newSelection: string): string | null {\n    if (this.canDeselect && this.tabSelection === newSelection) return null;\n\n    return newSelection;\n  }\n}\n","@if (this.menu) {\n  <div class=\"tabs my-space-2\">\n    <div class=\"menu-tab\">\n      <ta-swiper\n        [slidesPerPage]=\"this.elementPerPage\"\n        [swipeTemplate]=\"swipeTemplate\"\n        [slides]=\"this.menu.elements\"\n      ></ta-swiper>\n    </div>\n  </div>\n}\n\n<ng-template #swipeTemplate let-element=\"element\" [typedTemplate]=\"typeToken\">\n  <div\n    class=\"menu-item\"\n    [class.active]=\"this.tabSelection === element.key\"\n    [class.disabled]=\"element.disabled === true\"\n    (click)=\"this.onQuickActionSelected(element)\"\n  >\n    @if (element.icon) {\n      <ta-local-icon [type]=\"element.icon\" [size]=\"'xs'\"></ta-local-icon>\n    }\n    <p class=\"text-truncate\">{{ element.label | translate }}</p>\n    <div class=\"bottom\"></div>\n  </div>\n</ng-template>\n","import { NgIf } from '@angular/common';\nimport { Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\n\nimport { SwiperData, SwiperComponent } from '@ta/ui';\n\n@Component({\nselector: 'ta-quick-actions-custom',\n  templateUrl: './quick-actions-custom.component.html',\n  styleUrls: ['./quick-actions-custom.component.scss'],\n  standalone: true,\n  imports: [NgIf, SwiperComponent],\n})\nexport class QuickActionsCustomComponent {\n  @Input()\n  public elementPerPage: number = 3.5;\n\n  @Input()\n  public swipeTemplate!: TemplateRef<any>;\n  @Input()\n  public slidesPerGroup: number = 1;\n\n  @Input()\n  public isFreeMode: boolean = true;\n\n  @Output()\n  public onSlideChanged = new EventEmitter<number>();\n\n  @Input()\n  public elements!: SwiperData[];\n}\n","@if (this.elements && this.elements.length > 0) {\n  <div class=\"tabs my-space-2\">\n    <div class=\"menu-tab\">\n      <ta-swiper\n        [slidesPerPage]=\"this.elementPerPage\"\n        [slidesPerGroup]=\"this.slidesPerGroup\"\n        [swipeTemplate]=\"swipeTemplate\"\n        [slides]=\"this.elements\"\n        [isFreeMode]=\"this.isFreeMode\"\n        (onSlideChanged)=\"this.onSlideChanged.emit($event)\"\n      ></ta-swiper>\n    </div>\n  </div>\n}\n","import { NgClass, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { FontIconComponent, LocalIconComponent } from '@ta/icons';\nimport { SwiperLightComponent } from '@ta/ui';\n\nimport { getFontIcon, getIcon, hasFontIcon, hasIconImage } from '../../helpers/icon-manager';\nimport { MenuAction } from '../../models/menu/item/action';\nimport { MenuBase } from '../../models/menu/item/base';\nimport { MenuIcon } from '../../models/menu/item/icon';\nimport { Menu } from '../../models/menu/menu';\nimport { TaTranslationMenu } from '../../translation.service';\n\n/*\n ** @deprecated\n */\n@Component({\n  selector: 'ta-toggle-navigation',\n  templateUrl: './toggle-navigation.component.html',\n  styleUrls: ['./toggle-navigation.component.scss'],\n  standalone: true,\n  imports: [\n    NgIf,\n    NgClass,\n    NgTemplateOutlet,\n    RouterModule,\n    TranslateModule,\n    FontIconComponent,\n    LocalIconComponent,\n    SwiperLightComponent,\n  ],\n})\nexport class ToggleNavigationComponent implements OnInit {\n  @Input()\n  menu!: Menu;\n\n  @Input()\n  container!: 'tab' | 'switch';\n\n  public activeKey: string = '';\n  public readonly typeItem!: { item: MenuBase | MenuAction | MenuIcon };\n  public notifEnabled: boolean = false;\n\n  constructor() {\n    TaTranslationMenu.getInstance();\n  }\n\n  get containerCss() {\n    return this.container ?? '';\n  }\n\n  ngOnInit() {\n    if (this.menu.elements.find(element => element.options?.notificationBadge?.label)) {\n      this.notifEnabled = true;\n    }\n\n    const activeItem = this.menu.elements.find(item => item.defaultOpen);\n    if (activeItem) {\n      this.callback(activeItem);\n    }\n  }\n\n  public hasFontIcon(item: MenuIcon | MenuAction | MenuBase): boolean {\n    return hasFontIcon(item);\n  }\n\n  public hasIconImage(item: MenuIcon | MenuAction | MenuBase): boolean {\n    return hasIconImage(item);\n  }\n\n  public getIcon(item: MenuIcon | MenuAction | MenuBase) {\n    return getIcon(item);\n  }\n\n  public getFontIcon(item: MenuIcon | MenuAction | MenuBase) {\n    return getFontIcon(item);\n  }\n\n  public getLink(item: MenuIcon | MenuAction | MenuBase) {\n    if (item.link && item.link !== '') return item.link;\n\n    return ''; // TODO this._navigationService.currentPageUrl;\n  }\n\n  public callback(item: MenuBase) {\n    if (item.disabled) {\n      return;\n    }\n    this.activeKey = item.key;\n    if (item.callback) {\n      item.callback();\n    }\n  }\n\n  public isActive(item: MenuBase) {\n    return item.key === this.activeKey;\n  }\n}\n","<div class=\"toggle-container\" [ngClass]=\"this.containerCss\" [class.switch-container]=\"this.container === 'switch'\">\n  <ta-swiper-light\n    [items]=\"this.menu.elements\"\n    [template]=\"template\"\n    [forced]=\"true\"\n    swiperClasses=\"g-space-lg pt-space-md\"\n  ></ta-swiper-light>\n</div>\n\n<ng-template #template let-element=\"element\">\n  @if (element.callback || element.disabled) {\n    <div\n      (click)=\"this.callback(element)\"\n      class=\"toggle-element\"\n      [class.active]=\"this.isActive(element)\"\n      [class.disabled]=\"element.disabled\"\n    >\n      <ng-template\n        [ngTemplateOutlet]=\"Item\"\n        [ngTemplateOutletContext]=\"{\n          item: element,\n        }\"\n      >\n      </ng-template>\n    </div>\n  } @else {\n    <div\n      class=\"toggle-element\"\n      routerLinkActive=\"active\"\n      [routerLinkActiveOptions]=\"{ exact: element.exact }\"\n      [routerLink]=\"[this.getLink(element)]\"\n      [queryParamsHandling]=\"element.queryParamsHandling\"\n      [replaceUrl]=\"element.replaceUrl\"\n      [ngClass]=\"{ disabled: element.disabled }\"\n    >\n      <ng-template\n        [ngTemplateOutlet]=\"Item\"\n        [ngTemplateOutletContext]=\"{\n          item: element,\n        }\"\n      >\n      </ng-template>\n    </div>\n  }\n</ng-template>\n\n<ng-template #Item let-item=\"item\" [typedTemplate]=\"this.typeItem\">\n  <div class=\"label flex-row align-center mb-space-xs\">\n    @if (this.hasFontIcon(item) || this.hasIconImage(item)) {\n      <div class=\"icon\">\n        @if (this.hasFontIcon(item)) {\n          <span class=\"icon-material\">\n            <ta-font-icon [name]=\"this.getFontIcon(item)\"></ta-font-icon>\n          </span>\n        } @else if (this.hasIconImage(item)) {\n          <span class=\"icon-image\">\n            <ta-local-icon [type]=\"this.getIcon(item)\" size=\"xs\"></ta-local-icon>\n          </span>\n        }\n      </div>\n    }\n    @if (item.label) {\n      <div class=\"text-truncate\">\n        {{ item.label | translate }}\n      </div>\n    }\n    @if (item.options?.notificationBadge !== null) {\n      <div class=\"badge ml-space-xs\">\n        {{ item.options?.notificationBadge?.label }}\n      </div>\n    }\n    @if (item.translationData?.length) {\n      <div>({{ item.translationData?.length }})</div>\n    }\n  </div>\n</ng-template>\n","import { AsyncPipe, NgFor, NgIf } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { FontIconComponent, LocalIconComponent } from '@ta/icons';\nimport { TaBaseComponent } from '@ta/utils';\n\nimport { getFontIcon, getIcon, hasFontIcon, hasIconImage } from '../../helpers/icon-manager';\nimport { MenuAction } from '../../models/menu/item/action';\nimport { MenuBase } from '../../models/menu/item/base';\nimport { MenuIcon } from '../../models/menu/item/icon';\nimport { Menu } from '../../models/menu/menu';\nimport { TaTranslationMenu } from '../../translation.service';\n\n@Component({\n  selector: 'ta-context-menu',\n  templateUrl: './context-menu.component.html',\n  styleUrls: ['./context-menu.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgFor, AsyncPipe, RouterModule, TranslateModule, FontIconComponent, LocalIconComponent],\n})\nexport class ContextMenuComponent extends TaBaseComponent {\n  @Input()\n  menu!: Menu;\n\n  constructor() {\n    super();\n    TaTranslationMenu.getInstance();\n  }\n\n  public hasFontIcon(item: MenuIcon | MenuAction | MenuBase): boolean {\n    return hasFontIcon(item);\n  }\n\n  public hasIconImage(item: MenuIcon | MenuAction | MenuBase): boolean {\n    return hasIconImage(item);\n  }\n\n  public getIcon(item: MenuIcon | MenuAction | MenuBase) {\n    return getIcon(item);\n  }\n\n  public getFontIcon(item: Menu | MenuIcon | MenuBase) {\n    return getFontIcon(item);\n  }\n\n  public getLink(item: MenuIcon | MenuAction | MenuBase) {\n    if (item.link && item.link !== '') return item.link;\n\n    return '';\n  }\n\n  public getRoute(item: MenuIcon | MenuAction | MenuBase) {\n    return item.disabled ? [] : [this.getLink(item)];\n  }\n}\n","<ul class=\"context-menu row\">\n  @for (item of this.menu.elements; track item.key) {\n    @if ((item.visible$ | async) === true) {\n      <li class=\"col-6 col-md-4 col-lg-2\">\n        <div\n          class=\"element\"\n          routerLinkActive=\"active\"\n          [routerLinkActiveOptions]=\"{ exact: item.exact }\"\n          [routerLink]=\"this.getRoute(item)\"\n          [queryParamsHandling]=\"item.queryParamsHandling\"\n          [class.disabled]=\"item.disabled\"\n        >\n          <div class=\"icon align-self-center\">\n            @if (this.hasFontIcon(item)) {\n              <span class=\"icon-material\">\n                <ta-font-icon [name]=\"this.getFontIcon(item)\" size=\"xs\"></ta-font-icon>\n              </span>\n            }\n            @if (this.hasIconImage(item)) {\n              <span class=\"icon-image\">\n                <ta-local-icon [type]=\"this.getIcon(item)\" size=\"xs\"></ta-local-icon>\n              </span>\n            }\n          </div>\n          <div class=\"label align-self-center\">\n            {{ item.label | translate }}\n          </div>\n        </div>\n      </li>\n    }\n  }\n</ul>\n","import { NgClass, NgFor, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\n\nimport { FontIconComponent } from '@ta/icons';\nimport { NotificationBadgeComponent, NotificationBadgeContainerComponent, SwiperLightComponent } from '@ta/ui';\nimport { TaAbstractComponent } from '@ta/utils';\n\nimport { getFontIcon, hasFontIcon } from '../../helpers/icon-manager';\nimport { MenuAction } from '../../models/menu/item/action';\nimport { MenuBase } from '../../models/menu/item/base';\nimport { Menu, MenuIcon } from '../../models/public-api';\nimport { TaTranslationMenu } from '../../translation.service';\n\n// Type défini localement pour éviter la dépendance vers @ta/styles\ntype TaSizes = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl' | 'big';\n\n@Component({\n  selector: 'ta-menu-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n  standalone: true,\n  imports: [\n    NgIf,\n    NgFor,\n    NgClass,\n    NgTemplateOutlet,\n    RouterModule,\n    TranslateModule,\n    FontIconComponent,\n    NotificationBadgeComponent,\n    NotificationBadgeContainerComponent,\n    SwiperLightComponent,\n  ],\n})\nexport class NavigationComponent extends TaAbstractComponent implements OnInit {\n  @Input()\n  menu!: Menu;\n\n  @Input()\n  container!: 'tags' | 'tab';\n\n  @Input()\n  swiper = false;\n\n  @Input()\n  options: {\n    spaceElement?: TaSizes | null;\n  } = {};\n\n  @Input()\n  manuallyChanged$?: Observable<string>;\n\n  readonly hasFontIcon = hasFontIcon;\n  readonly getFontIcon = getFontIcon;\n\n  public readonly typeItem!: { item: MenuBase | MenuAction | MenuIcon };\n  public activeKey: string = '';\n\n  constructor() {\n    super();\n    TaTranslationMenu.getInstance();\n  }\n\n  ngOnInit() {\n    const defaultOpen = this.menu.elements.find(e => e.defaultOpen);\n\n    if (!defaultOpen || !defaultOpen.callback) {\n      return;\n    }\n    this.callback(defaultOpen);\n\n    if (this.manuallyChanged$) {\n      this._registerSubscription(\n        this.manuallyChanged$.subscribe({\n          next: (key: string) => {\n            const found = this.menu.elements.find(element => element.key === key);\n            if (found) {\n              this.callback(found);\n            }\n          },\n        })\n      );\n    }\n  }\n\n  public getSpaceClass() {\n    if (this.options.spaceElement === null) {\n      return '';\n    }\n    return `g-space-${this.options.spaceElement ?? 'lg'}`;\n  }\n  public getLink(item: MenuIcon | MenuAction | MenuBase) {\n    if (item.link && item.link !== '') {\n      return item.link;\n    }\n\n    return ''; // TODO this._navigationService.currentPageUrl;\n  }\n\n  public callback(item: MenuBase) {\n    if (item.disabled) {\n      return;\n    }\n    this.activeKey = item.key;\n    if (item.callback) {\n      item.callback();\n    }\n  }\n\n  public isActive(item: MenuBase) {\n    return item.key === this.activeKey;\n  }\n}\n","<div class=\"navigation-container\" [class]=\"this.container\">\n  <div class=\"list\">\n    @if (this.swiper) {\n      <ta-swiper-light\n        [items]=\"this.menu.elements\"\n        [template]=\"template\"\n        [forced]=\"true\"\n        [swiperClasses]=\"this.getSpaceClass()\"\n      ></ta-swiper-light>\n    } @else {\n      <div class=\"element-list\" [ngClass]=\"this.menu.direction + ' ' + this.getSpaceClass()\">\n        @for (element of this.menu.elements; track element) {\n          <div class=\"element\">\n            <ng-template\n              [ngTemplateOutlet]=\"template\"\n              [ngTemplateOutletContext]=\"{\n                element: element,\n              }\"\n            >\n            </ng-template>\n          </div>\n        }\n      </div>\n    }\n  </div>\n</div>\n\n<ng-template #template let-element=\"element\">\n  <ta-notification-badge-container class=\"c-pointer\">\n    @if (element.callback || element.disabled) {\n      <div\n        (click)=\"this.callback(element)\"\n        class=\"item-container\"\n        [ngClass]=\"{ active: this.isActive(element), disabled: element.disabled }\"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"Item\"\n          [ngTemplateOutletContext]=\"{\n            item: element,\n          }\"\n        >\n        </ng-template>\n      </div>\n    } @else {\n      <div\n        class=\"item-container\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: element.exact }\"\n        [routerLink]=\"[this.getLink(element)]\"\n        [queryParamsHandling]=\"element.queryParamsHandling\"\n      >\n        <ng-template\n          [ngTemplateOutlet]=\"Item\"\n          [ngTemplateOutletContext]=\"{\n            item: element,\n          }\"\n        >\n        </ng-template>\n      </div>\n    }\n    @if (element.options?.notificationBadge?.label) {\n      <ta-notification-badge\n        [number]=\"element.options?.notificationBadge?.label || 0\"\n        [style]=\"element.options?.notificationBadge?.style\"\n        fontSize=\"xs\"\n      ></ta-notification-badge>\n    }\n  </ta-notification-badge-container>\n</ng-template>\n\n<ng-template #Item let-item=\"item\" [typedTemplate]=\"this.typeItem\">\n  <div class=\"item\" [class.disabled]=\"item.disabled\">\n    @if (this.hasFontIcon(item)) {\n      <div class=\"icon\">\n        <ta-font-icon [name]=\"this.getFontIcon(item)\"></ta-font-icon>\n      </div>\n    }\n    @if (item.label) {\n      <div class=\"label\">\n        {{ item.label | translate }}\n      </div>\n    }\n    @if (item.translationData?.length) {\n      <div class=\"bullet\">({{ item.translationData?.length }})</div>\n    }\n  </div>\n</ng-template>\n","import { MenuBase } from './item/base';\n\nexport class Menu<T = MenuBase> {\n  direction: 'horizontal' | 'vertical' | 'responsive' = 'responsive';\n  elements: T[];\n\n  constructor(options: IMenuOption<T> = {}) {\n    this.direction = options.direction || 'responsive';\n    this.elements = options.elements || [];\n  }\n}\nexport interface IMenuOption<T = MenuBase> {\n  direction?: 'horizontal' | 'vertical' | 'responsive';\n  elements?: T[];\n}\n","import { TemplateRef } from '@angular/core';\nimport { QueryParamsHandling } from '@angular/router';\n\nimport { isNonNullable } from '@ta/utils';\nimport { Observable, of } from 'rxjs';\n\nexport class MenuBase {\n  key: string;\n  label: string;\n  order: number;\n  link: string;\n  callback?: (data?: any) => void;\n  style: string;\n  children: MenuBase[];\n  visible$: Observable<boolean>;\n  defaultOpen: boolean;\n  exact: boolean;\n  replaceUrl: boolean;\n  queryParamsHandling: QueryParamsHandling;\n  disabled: boolean;\n  translationData?: any;\n  endingIcon?: string;\n  iconsColor?: string;\n  options?: {\n    notificationBadge?: { label: number; style?: string };\n    extraTemplate?: TemplateRef<any>;\n  };\n  constructor(options: IMenuBaseOption = {}) {\n    this.key = options.key || '';\n    this.label = options.label || '';\n    this.order = options.order === undefined ? 1 : options.order;\n    this.link = options.link || '';\n    this.callback = options.callback;\n    this.style = options.style || 'bloc';\n    this.children = options.children || [];\n    this.visible$ = options.visible$ || of(true);\n    this.defaultOpen = options.defaultOpen === undefined ? false : options.defaultOpen;\n    this.exact = options.exact === undefined ? false : options.exact;\n    this.replaceUrl = isNonNullable(options.replaceUrl) ? options.replaceUrl : false;\n    this.queryParamsHandling = options.queryParamsHandling ?? '';\n    this.disabled = options.disabled === undefined ? false : options.disabled;\n    this.translationData = options.translationData;\n    this.endingIcon = options.endingIcon;\n    this.iconsColor = options.iconsColor;\n    this.options = options.options;\n  }\n\n  get isMenuPanel() {\n    return false;\n  }\n}\nexport interface IMenuBaseOption {\n  key?: string;\n  label?: string;\n  order?: number;\n  link?: string;\n  callback?: (data?: any) => void;\n  style?: string;\n  children?: MenuBase[];\n  visible$?: Observable<boolean>;\n  defaultOpen?: boolean;\n  exact?: boolean;\n  replaceUrl?: boolean;\n  queryParamsHandling?: QueryParamsHandling;\n  disabled?: boolean;\n  translationData?: object;\n  endingIcon?: string;\n  iconsColor?: string;\n  options?: {\n    notificationBadge?: { label: number; style?: string };\n    extraTemplate?: TemplateRef<any>;\n  };\n}\n","import { TaIconType } from '@ta/icons';\n\nimport { IMenuBaseOption, MenuBase } from './base';\n\nexport class MenuIcon extends MenuBase {\n  icon: string | TaIconType;\n\n  constructor(options: IMenuIconOption) {\n    super(options);\n    this.icon = options.icon || '';\n  }\n}\n\nexport interface IMenuIconOption extends IMenuBaseOption {\n  icon?: string | TaIconType;\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { IMenuIconOption, MenuIcon } from './icon';\n\nexport class MenuPanel extends MenuIcon {\n  template: TemplateRef<any>;\n\n  override get isMenuPanel() {\n    return true;\n  }\n\n  constructor(options: IMenuPanelOption) {\n    super(options);\n    this.template = options.template;\n  }\n}\n\nexport interface IMenuPanelOption extends IMenuIconOption {\n  template: TemplateRef<any>;\n}\n","import { ActivatedRouteSnapshot } from '@angular/router';\n\nexport enum TaMainRoute {\n  HOME = 'HOME',\n  USERLOGIN = 'USERLOGIN',\n  SINGIN = 'SINGIN',\n  USERLOGOUT = 'USERLOGOUT',\n  NOTIFICATIONS = 'NOTIFICATIONS',\n  REDIRECT = 'REDIRECT',\n}\nexport interface IRoute {\n  key: string;\n  url: string;\n  canActivate?: boolean;\n  children?: IRoute[];\n}\n\nexport class TaRoutesCore {\n  public routes: IRoute[] = [\n    {\n      key: TaMainRoute.HOME,\n      url: '',\n    },\n    {\n      key: TaMainRoute.USERLOGIN,\n      url: 'login',\n    },\n    {\n      key: TaMainRoute.SINGIN,\n      url: 'signin',\n    },\n    {\n      key: TaMainRoute.USERLOGOUT,\n      url: 'logout',\n    },\n    {\n      key: TaMainRoute.NOTIFICATIONS,\n      url: 'notifications',\n    },\n    {\n      key: TaMainRoute.REDIRECT,\n      url: 'redirect',\n    },\n  ];\n\n  constructor() {}\n\n  public addRoute(route: IRoute) {\n    this.routes.push(route);\n  }\n  public addRoutes(routes: IRoute[]) {\n    routes.forEach(route => this.addRoute(route));\n  }\n  public getHome() {\n    return this.getAbsoluteUrl([TaMainRoute.HOME]);\n  }\n  public getLogin() {\n    return this.getAbsoluteUrl([TaMainRoute.USERLOGIN]);\n  }\n  public getSign() {\n    return this.getAbsoluteUrl([TaMainRoute.SINGIN]);\n  }\n  public getLogout() {\n    return this.getAbsoluteUrl([TaMainRoute.USERLOGOUT]);\n  }\n  public getUrl(eNums: string[], params: {} = {}, strict = false): string {\n    const url = this._replaceParams(this._getUrl(eNums), params);\n    return strict ? this._removeParams(url) : url;\n  }\n  public getAbsoluteUrl(eNums: string[], params: {} = {}, strict = false): string {\n    const url = this._replaceParams(this._getUrl(eNums, true), params);\n    return strict ? this._removeParams(url) : url;\n  }\n  public addQueryParamsToUrl(route: ActivatedRouteSnapshot, params: { [index: string]: any } = {}): string {\n    const keys = Object.keys(params);\n\n    for (let key of keys) {\n      route.params[key] = params[key];\n    }\n    return route.toString();\n  }\n  public getPermission(eNums: any[]): boolean {\n    const route = this._getRouteByENum(eNums);\n    if (route === null) {\n      return true;\n    } else {\n      return route.canActivate === undefined ? true : route.canActivate;\n    }\n  }\n\n  private _replaceParams(url: string, params: any): string {\n    if (!params || Object.keys(params).length === 0) {\n      return url;\n    }\n    // Create regex using the keys of the replacement object.\n    const regex = new RegExp(':(' + Object.keys(params).join('|') + ')', 'g');\n    // Replace the string by the value in object\n    return url.replace(regex, (m, $1) => params[$1] || m);\n  }\n  private _removeParams(url: string): string {\n    const regex = new RegExp('/:([a-zA-Z0-9_]*)', 'g');\n    return url.replace(regex, '');\n  }\n  private _getRouteByENum(eNums: any[]): IRoute | null {\n    let route: IRoute | null = null;\n    for (const eNum of eNums) {\n      route = this._getByENum(route === null ? this.routes : route.children, eNum);\n      if (route === null) {\n        return null;\n      }\n    }\n    return route;\n  }\n\n  private _getUrl(eNums: any[], absolute = false): string {\n    let route: IRoute | null = null;\n    let url = '';\n    for (const eNum of eNums) {\n      route = this._getByENum(route === null ? this.routes : route.children, eNum);\n      if (route === null) {\n        break;\n      }\n      url += (url === '' ? '' : '/') + route.url;\n    }\n    return route === null ? '' : absolute === false ? route.url : '/' + url;\n  }\n\n  private _getByENum(routes: IRoute[] | null | undefined, eNum: string): IRoute | null {\n    if (!routes) {\n      return null;\n    }\n    for (const route of routes) {\n      if (route.key === eNum) {\n        return route;\n      }\n    }\n    return null;\n  }\n}\nexport const TaRoutes = new TaRoutesCore();\n","import { BehaviorSubject, Observable } from 'rxjs';\n\nimport { Menu, MenuBase } from '../models/public-api';\n\nexport class FilterHelper {\n  public refresh$ = new BehaviorSubject('');\n\n  get filter() {\n    return this._filter;\n  }\n  set filter(filter: string) {\n    this._filter = filter;\n\n    this.refresh$.next(this._filter);\n  }\n  private _filter: string = '';\n\n  private _items: {\n    label: string;\n    defaultOpen: boolean;\n    order?: number;\n    visible$?: Observable<boolean>;\n    translationData?: {};\n    options?: { notificationBadge: { label: number; style?: string } };\n  }[];\n  constructor(\n    items: {\n      label: string;\n      defaultOpen: boolean;\n      order?: number;\n      visible$?: Observable<boolean>;\n      translationData?: {};\n      options?: { notificationBadge: { label: number; style?: string } };\n    }[]\n  ) {\n    this._items = items;\n  }\n  public getMenu() {\n    return new Menu({\n      elements: this._items.map(item => {\n        const key = this._getKey(item.label);\n        return new MenuBase({\n          key: key,\n          label: item.label,\n          callback: () => (this.filter = key),\n          defaultOpen: item.defaultOpen,\n          order: item.order,\n          visible$: item.visible$,\n          translationData: item.translationData,\n          options: item.options,\n        });\n      }),\n      direction: 'responsive',\n    });\n  }\n\n  public updateMenuDatas(\n    data: {\n      key: string;\n      translationData?: object;\n      options?: { notificationBadge: { label: number; style?: string } };\n      visible$?: Observable<boolean>;\n    }[]\n  ) {\n    for (const item of data) {\n      const itemToModify = this._items.find(x => this._getKey(x.label) === item.key);\n      if (itemToModify) {\n        itemToModify.translationData = item.translationData;\n        itemToModify.options = item.options;\n        if (item.visible$) {\n          itemToModify.visible$ = item.visible$;\n        }\n      }\n    }\n  }\n\n  private _getKey(label: string): string {\n    const lastDot = label.lastIndexOf('.');\n    if (lastDot !== -1) {\n      return label.substring(lastDot + 1);\n    } else {\n      return label;\n    }\n  }\n}\n","import { NgIf, NgFor } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { FontIconComponent } from '@ta/icons';\nimport { ListContainerComponent, ListElementComponent, ListTitleComponent } from '@ta/ui';\n\nimport { MenuIcon } from '../../models/menu/item/icon';\nimport { Menu } from '../../models/menu/menu';\n\n@Component({\nselector: 'ta-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgFor, FontIconComponent, ListContainerComponent, ListElementComponent, ListTitleComponent],\n})\nexport class ListComponent {\n  @Input()\n  menu!: Menu<MenuIcon>;\n}\n","<ta-list-container class=\"content\">\n  @for (item of this.menu.elements; track item) {\n    <ta-list-element>\n      <ta-list-title>\n        <div>\n          @if (item.icon) {\n            <ta-font-icon [name]=\"$any(item.icon)\"></ta-font-icon>\n          }\n          {{ item.label }}\n        </div>\n      </ta-list-title>\n    </ta-list-element>\n  }\n</ta-list-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { RouterModule } from '@angular/router';\n\nimport { TaIconsModule } from '@ta/icons';\nimport { TranslatePipe } from '@ta/translation';\nimport { TaContainerModule, TaLayoutModule, TaListModule, TaSwiperModule, TaUiModule } from '@ta/ui';\nimport { TaDirectivePipeModule } from '@ta/utils';\n\nimport { BottomSheetTemplateBasicComponent } from './components/bottom-sheet/templates/basic/bottom-sheet-template-basic.component';\nimport { BottomSheetTemplateGenericComponent } from './components/bottom-sheet/templates/generic/bottom-sheet-template-generic.component';\nimport { ContextMenuComponent } from './components/context-menu/context-menu.component';\nimport { ListComponent } from './components/list/list.component';\nimport { MainMenuComponent } from './components/main-menu/main-menu.component';\nimport { MenuItemComponent } from './components/menu/item/menu-item.component';\nimport { MenuComponent } from './components/menu/menu.component';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport { QuickActionsCustomComponent } from './components/quick-actions-custom/quick-actions-custom.component';\nimport { QuickActionsComponent } from './components/quick-actions/quick-actions.component';\nimport { ToggleNavigationComponent } from './components/toggle-navigation/toggle-navigation.component';\n\n/**\n * @deprecated Use standalone components instead.\n * This module will be removed in a future version.\n *\n * @example\n * // Instead of importing the module:\n * // import { TaMenuModule } from '@ta/library-name';\n *\n * // Import the standalone components directly:\n * import { MenuComponent, MenuItemComponent, BottomSheetTemplateBasicComponent } from '@ta/library-name';\n */\n@NgModule({\n  declarations: [],\n  imports: [\n    TaUiModule,\n    TaSwiperModule,\n    TaContainerModule,\n    TaDirectivePipeModule,\n    TaLayoutModule,\n    TaListModule,\n    CommonModule,\n    RouterModule,\n    TaIconsModule,\n    MatMenuModule,\n    TranslatePipe,\n    MenuComponent,\n    MenuItemComponent,\n    BottomSheetTemplateBasicComponent,\n    QuickActionsComponent,\n    QuickActionsCustomComponent,\n    ToggleNavigationComponent,\n    ContextMenuComponent,\n    BottomSheetTemplateGenericComponent,\n    MainMenuComponent,\n    ListComponent,\n    NavigationComponent,\n  ],\n  exports: [\n    MenuComponent,\n    MenuItemComponent,\n    BottomSheetTemplateBasicComponent,\n    QuickActionsComponent,\n    QuickActionsCustomComponent,\n    ToggleNavigationComponent,\n    ContextMenuComponent,\n    BottomSheetTemplateGenericComponent,\n    MainMenuComponent,\n    NavigationComponent,\n  ],\n})\nexport class TaMenuModule {}\n","/*\n * Public API Surface of menu\n */\n\nexport * from './lib/components/public-api';\nexport * from './lib/helpers/public-api';\nexport * from './lib/models/public-api';\n\nexport * from './lib/menu.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2","i4","i1"],"mappings":"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"}