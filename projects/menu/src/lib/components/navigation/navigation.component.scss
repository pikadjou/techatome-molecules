@use "ta/utils/mixins/flex";
@use "ta/utils/mixins/fonts";
@use "ta/utils/mixins/common";

.element-list {
  gap: common.get-var(space, md);

  @include flex-row;
  &.vertical {
    @include flex-column;
  }
}
.tags {
  .item-container {
    .item {
      @include flex.flex-row();
      @include flex.align-center();
      gap: common.get-var(space, xs);
      padding: common.get-var(space, md);

      border: 1px solid transparent;

      color: common.get-var(text-tertiary);
      background-color: common.get-var(surface, tertiary);
      border-color: common.get-var(surface, tertiary);

      border-radius: common.get-var(radius, rounded);

      @include fonts.fontSizeBody(sm);
    }

    &.disabled {
      .item {
        background-color: common.get-var(surface, primary);
        border-color: common.get-var(border, disabled);
      }
    }
    &.active {
      .item {
        color: common.get-var(text, brand, primary);
        background-color: common.get-var(surface, default);
        border-color: common.get-var(surface, default);
      }
    }
  }
}
.tab {
  .list {
    border-bottom: 1px solid common.get-var(border, secondary);
  }
  .item-container {
    .item {
      @include flex.flex-row();
      @include flex.align-center();
      gap: common.get-var(space, xs);
      padding: common.get-var(space, md);

      border-bottom: 2px solid transparent;

      color: common.get-var(text-tertiary);

      @include fonts.fontSizeBody(sm);
    }

    &.disabled {
      opacity: 0.5;
    }
    &.active {
      .item {
        color: common.get-var(text, brand, primary);
        border-bottom-color: common.get-var(border, brand);
      }
    }
  }
}

:host ::ng-deep {
  .swiper-container {
    gap: common.get-var(space, sm) !important;
  }
  ta-font-icon {
    margin-top: -6px;
    display: block;
    i {
      height: 18px !important;
      font-size: 18px !important;
    }
  }
}
