import { signal } from '@angular/core';
export class RequestState {
    constructor() {
        this.loading = signal(false);
        this.error = { status: -1, message: '' };
        this.alreadyAsked = false;
    }
    isLoading() {
        return this.loading();
    }
    getErrorStatus() {
        return this.error.status;
    }
    getErrorMessage() {
        return this.error.message;
    }
    clean() {
        this.alreadyAsked = false;
        this.loading.set(false);
        this.resetError();
    }
    asked() {
        this.alreadyAsked = true;
        this.loading.set(true);
        this.resetError();
    }
    completed() {
        this.loading.set(false);
    }
    resetError() {
        this.error = { status: -1, message: '' };
    }
    onError(status, message) {
        this.loading.set(false);
        this.error = { status, message };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2hlbHBlcnMvcmVxdWVzdC9zdGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBSXZDLE1BQU0sT0FBTyxZQUFZO0lBQXpCO1FBQ1MsWUFBTyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUV4QixVQUFLLEdBQTBCLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQyxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUUsQ0FBQztRQUMzRCxpQkFBWSxHQUFHLEtBQUssQ0FBQztJQStCOUIsQ0FBQztJQTdCUSxTQUFTO1FBQ2QsT0FBTyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDeEIsQ0FBQztJQUNNLGNBQWM7UUFDbkIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQztJQUMzQixDQUFDO0lBQ00sZUFBZTtRQUNwQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDO0lBQzVCLENBQUM7SUFDTSxLQUFLO1FBQ1YsSUFBSSxDQUFDLFlBQVksR0FBRyxLQUFLLENBQUM7UUFDMUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDeEIsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFDTSxLQUFLO1FBQ1YsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7UUFDekIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkIsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFDTSxTQUFTO1FBQ2QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDMUIsQ0FBQztJQUNNLFVBQVU7UUFDZixJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQyxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUUsQ0FBQztJQUMzQyxDQUFDO0lBQ00sT0FBTyxDQUFDLE1BQWMsRUFBRSxPQUFlO1FBQzVDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLENBQUM7SUFDbkMsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2lnbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCB0eXBlIFJlcXVlc3RzdGF0ZUVycm9yVHlwZSA9IHsgc3RhdHVzOiBudW1iZXI7IG1lc3NhZ2U6IHN0cmluZyB9O1xuXG5leHBvcnQgY2xhc3MgUmVxdWVzdFN0YXRlIHtcbiAgcHVibGljIGxvYWRpbmcgPSBzaWduYWwoZmFsc2UpO1xuXG4gIHB1YmxpYyBlcnJvcjogUmVxdWVzdHN0YXRlRXJyb3JUeXBlID0geyBzdGF0dXM6IC0xLCBtZXNzYWdlOiAnJyB9O1xuICBwdWJsaWMgYWxyZWFkeUFza2VkID0gZmFsc2U7XG5cbiAgcHVibGljIGlzTG9hZGluZygpIHtcbiAgICByZXR1cm4gdGhpcy5sb2FkaW5nKCk7XG4gIH1cbiAgcHVibGljIGdldEVycm9yU3RhdHVzKCkge1xuICAgIHJldHVybiB0aGlzLmVycm9yLnN0YXR1cztcbiAgfVxuICBwdWJsaWMgZ2V0RXJyb3JNZXNzYWdlKCkge1xuICAgIHJldHVybiB0aGlzLmVycm9yLm1lc3NhZ2U7XG4gIH1cbiAgcHVibGljIGNsZWFuKCkge1xuICAgIHRoaXMuYWxyZWFkeUFza2VkID0gZmFsc2U7XG4gICAgdGhpcy5sb2FkaW5nLnNldChmYWxzZSk7XG4gICAgdGhpcy5yZXNldEVycm9yKCk7XG4gIH1cbiAgcHVibGljIGFza2VkKCkge1xuICAgIHRoaXMuYWxyZWFkeUFza2VkID0gdHJ1ZTtcbiAgICB0aGlzLmxvYWRpbmcuc2V0KHRydWUpO1xuICAgIHRoaXMucmVzZXRFcnJvcigpO1xuICB9XG4gIHB1YmxpYyBjb21wbGV0ZWQoKSB7XG4gICAgdGhpcy5sb2FkaW5nLnNldChmYWxzZSk7XG4gIH1cbiAgcHVibGljIHJlc2V0RXJyb3IoKSB7XG4gICAgdGhpcy5lcnJvciA9IHsgc3RhdHVzOiAtMSwgbWVzc2FnZTogJycgfTtcbiAgfVxuICBwdWJsaWMgb25FcnJvcihzdGF0dXM6IG51bWJlciwgbWVzc2FnZTogc3RyaW5nKSB7XG4gICAgdGhpcy5sb2FkaW5nLnNldChmYWxzZSk7XG4gICAgdGhpcy5lcnJvciA9IHsgc3RhdHVzLCBtZXNzYWdlIH07XG4gIH1cbn1cbiJdfQ==