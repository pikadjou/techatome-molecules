import { AsyncPipe, NgTemplateOutlet } from '@angular/common';
import { Component, ViewChild } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { TranslateModule } from '@ngx-translate/core';
import { BehaviorSubject, combineLatest, concatMap, debounceTime, filter, map, of, startWith, take, tap, } from 'rxjs';
import { InputCheckBox, InputTextBox } from '@ta/form-model';
import { FontIconComponent } from '@ta/icons';
import { ButtonComponent, EmptyComponent, LabelComponent, LayoutSideComponent, LayoutSideContentComponent, LayoutSideCtaComponent, LinkComponent, LoaderComponent, TextComponent, } from '@ta/ui';
import { TaOverlayPanelComponent } from '@ta/ui';
import { StopPropagationDirective, isNonNullable } from '@ta/utils';
import { getUniqueArray, toArray } from '@ta/utils';
import { TaAbstractInputComponent } from '../../abstract.component';
import { InputLayoutComponent } from '../../input-layout/input-layout.component';
import { CheckboxComponent } from '../checkbox/checkbox.component';
import { SearchFieldComponent } from '../search-field/search-field.component';
import * as i0 from "@angular/core";
import * as i1 from "@ngx-translate/core";
import * as i2 from "@angular/forms";
export class InputChoicesComponent extends TaAbstractInputComponent {
    constructor() {
        super();
        this.inputSearch = new InputTextBox();
        this.inputNullable = new InputCheckBox({
            label: 'input.choices.nullable.label',
        });
        this.filteredOptions$ = null;
        this.bOptions$ = new BehaviorSubject([]);
        this.searchFocus = new BehaviorSubject(undefined);
        this.refresh = () => {
            (this.input.advancedSearch$ ? this.input.advancedSearch$() : of()).pipe(take(1)).subscribe({
                next: (data) => {
                    this.bOptions$.next(data);
                },
            });
        };
        this.select = (option) => {
            const values = this.input.value ?? [];
            if (values.includes(option.id)) {
                this.input.value = values.filter((val) => val !== option.id);
                return;
            }
            if (!this.input.multiple) {
                this.input.value = [option.id];
                this.close();
                return;
            }
            this.input.value = [...values, option.id];
        };
        this.isSelected = (option) => {
            const values = toArray(this.input.value);
            return values.includes(option.id);
        };
    }
    ngOnInit() {
        super.ngOnInit();
        if (!this.input.advancedSearch$) {
            this.requestState.asked();
            this._registerSubscription(this.input.options$.subscribe({
                next: (data) => {
                    this.bOptions$.next(data);
                    this.requestState.completed();
                },
            }));
            this.filteredOptions$ = combineLatest([
                this.inputSearch.changeValue$.pipe(startWith(''), filter(isNonNullable)),
                this.bOptions$,
            ]).pipe(map((data) => ({
                search: data[0],
                list: data[1],
            })), map(({ search, list }) => list.filter((item) => item.name.toLocaleLowerCase().includes(search.toLocaleLowerCase()))));
        }
        else {
            this.filteredOptions$ = this.bOptions$;
            this.refresh();
            this._registerSubscription(this.inputSearch.changeValue$
                .pipe(debounceTime(500), filter(isNonNullable), tap(() => this.requestState.asked()), concatMap((search) => (this.input.advancedSearch$ ? this.input.advancedSearch$(search) : of())))
                .subscribe({
                next: (data) => {
                    const prevData = this.bOptions$.getValue();
                    this.bOptions$.next(getUniqueArray([...prevData.filter((item) => this.input.value?.includes(item.id)), ...data]));
                    this.requestState.completed();
                },
            }));
        }
    }
    ngAfterViewInit() {
        super.ngAfterViewInit();
        this.searchFocus.next();
    }
    getName$(id) {
        return this.bOptions$.pipe(map((values) => values.find((value) => value.id === id)?.name ?? null), map((name) => name ?? id));
    }
    selectNullable(select) {
        if (!select) {
            this.input.value = [];
            return;
        }
        this.input.value = [''];
    }
    clear() {
        this.input.formControl?.setValue([]);
        this.close();
    }
    close() {
        this.focusedElement.nativeElement.click();
        this.overlayPanelRef.close();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: InputChoicesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.14", type: InputChoicesComponent, isStandalone: true, selector: "ta-input-choices", viewQueries: [{ propertyName: "overlayPanelRef", first: true, predicate: TaOverlayPanelComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: "@if (this.input.onlyTemplate !== true) {\n  <ta-overlay-panel [panelConfig]=\"{ matchTriggerWidth: false }\">\n    <ng-template #panelTrigger>\n      <ta-input-layout [input]=\"this.input\">\n        <div class=\"form-control\" #focusedElement>\n          <div class=\"input-group d-flex full-width\">\n            <input type=\"hidden\" [formControl]=\"$any(this.input.formControl)\" [value]=\"this.input.value\" />\n\n            <div class=\"flex-start g-space-xs\">\n              @for (value of this.input.value; track value) {\n                <ta-label size=\"sm\" class=\"d-flex\">\n                  {{ (getName$(value) | async) ?? '' | translate }}\n                </ta-label>\n              }\n            </div>\n            @if (this.input.message) {\n              <div class=\"message\">\n                <small class=\"form-text text-muted\">\n                  <span>{{ this.input.message }}</span>\n                </small>\n              </div>\n            }\n          </div>\n        </div>\n      </ta-input-layout>\n    </ng-template>\n    <ng-template #panelContent>\n      <ng-template [ngTemplateOutlet]=\"choicesTemplate\"></ng-template>\n    </ng-template>\n  </ta-overlay-panel>\n} @else {\n  <div class=\"only-template\">\n    <ng-template [ngTemplateOutlet]=\"choicesTemplate\"></ng-template>\n  </div>\n}\n\n<ng-template #choicesTemplate>\n  <div appStopPropagation class=\"flex-column g-space-sm\">\n    @if (!this.input.choiceTemplate) {\n      @if (this.input.withSearch) {\n        <ta-search-field\n          [isOpen]=\"true\"\n          [input]=\"this.inputSearch\"\n          [onFocus]=\"this.searchFocus\"\n          [standalone]=\"true\"\n          class=\"m-space-sm\"\n        ></ta-search-field>\n      }\n\n      <ta-layout-side class=\"d-flex full-width choices-wrapper\" style=\"min-height: 300px; max-height: 400px\">\n        <ta-layout-side-content>\n          <ta-loader [isLoading]=\"this.requestState.isLoading()\">\n            <ta-empty [isEmpty]=\"(this.filteredOptions$ | async)?.length === 0\">\n              @if (this.input.showNullableFields) {\n                <div class=\"p-space-sm\">\n                  <ta-input-checkbox\n                    [input]=\"this.inputNullable\"\n                    [standalone]=\"true\"\n                    (valueChanged)=\"this.selectNullable($event)\"\n                  ></ta-input-checkbox>\n                </div>\n              }\n              @for (option of this.filteredOptions$ | async; track option) {\n                <div\n                  class=\"flex-row pointer m-space-sm p-space-sm\"\n                  [class.is-selected]=\"this.isSelected(option)\"\n                  (click)=\"this.select(option)\"\n                >\n                  <ta-text>{{ option.name }}</ta-text>\n                </div>\n              }\n            </ta-empty>\n          </ta-loader>\n        </ta-layout-side-content>\n        <ta-layout-side-cta>\n          <div class=\"align-center space-between\">\n            <div class=\"pr-space-md\">\n              <div class=\"align-center g-space-xs link\">\n                <ta-font-icon name=\"close-tool\" type=\"sm\"></ta-font-icon>\n                <ta-link class=\"c-pointer\" (action)=\"this.clear()\">\n                  {{ 'core.filter.clear' | translate }}\n                </ta-link>\n              </div>\n            </div>\n            <div>\n              @if (this.input.onlyTemplate !== true) {\n                <ta-button (action)=\"this.close()\">\n                  <div class=\"align-center m-space-xs\">\n                    <ta-font-icon name=\"check-line\"></ta-font-icon>\n                    {{ 'form.validate' | translate }}\n                  </div>\n                </ta-button>\n              }\n            </div>\n          </div>\n        </ta-layout-side-cta>\n      </ta-layout-side>\n    } @else if (this.input.choiceTemplate && this.filteredOptions$) {\n      @if (this.input.withSearch) {\n        <ta-search-field\n          [isOpen]=\"true\"\n          [input]=\"this.inputSearch\"\n          [onFocus]=\"this.searchFocus\"\n          class=\"m-space-sm\"\n          [standalone]=\"true\"\n        ></ta-search-field>\n      }\n      <ta-layout-side class=\"d-flex full-width\" style=\"min-height: 300px; max-height: 400px\">\n        <ta-layout-side-content>\n          <ta-loader [isLoading]=\"this.requestState.isLoading()\">\n            @if (this.input.choiceTemplate.one) {\n              <ta-empty [isEmpty]=\"(this.filteredOptions$ | async)?.length === 0\">\n                @for (option of this.filteredOptions$ | async; track option) {\n                  <div\n                    class=\"flex-row pointer m-space-sm p-space-sm\"\n                    [class.is-selected]=\"this.isSelected(option)\"\n                    (click)=\"this.select(option)\"\n                  >\n                    <ng-template\n                      [ngTemplateOutlet]=\"this.input.choiceTemplate.one\"\n                      [ngTemplateOutletContext]=\"{ item: option.data }\"\n                    ></ng-template>\n                  </div>\n                }\n              </ta-empty>\n            } @else if (this.input.choiceTemplate.list) {\n              <ng-template\n                [ngTemplateOutlet]=\"this.input.choiceTemplate.list\"\n                [ngTemplateOutletContext]=\"{\n                  data: {\n                    items: this.filteredOptions$ | async,\n                    isselected: this.isSelected,\n                    select: this.select,\n                    search: this.inputSearch.value,\n                    refresh: this.refresh,\n                  },\n                }\"\n              ></ng-template>\n            }\n          </ta-loader>\n        </ta-layout-side-content>\n        <ta-layout-side-cta>\n          <div class=\"align-center space-between\">\n            <div class=\"pr-space-md\">\n              <div class=\"align-center g-space-xs link\">\n                <ta-font-icon name=\"close-tool\" type=\"sm\"></ta-font-icon>\n                <ta-link class=\"c-pointer\" (action)=\"this.clear()\">\n                  {{ 'core.filter.clear' | translate }}\n                </ta-link>\n              </div>\n            </div>\n            <div>\n              @if (this.input.onlyTemplate !== true) {\n                <ta-button (action)=\"this.close()\">\n                  <div class=\"align-center m-space-xs\">\n                    <ta-font-icon name=\"check-line\"></ta-font-icon>\n                    {{ 'form.validate' | translate }}\n                  </div>\n                </ta-button>\n              }\n            </div>\n          </div>\n        </ta-layout-side-cta>\n      </ta-layout-side>\n    }\n  </div>\n</ng-template>\n", styles: [".textbox-container{width:100%}.input-group{position:relative}.input-group .action{position:absolute;right:8px;top:16px;bottom:0}.is-selected{border:1px solid var(--ta-border-secondary);border-radius:var(--ta-radius-full)}.menu-panel{background-color:var(--ta-neutral-white);border-radius:var(--ta-radius-rounded);border:1px solid;border-color:var(--ta-neutral-300);overflow:hidden}.choices-wrapper{overflow:visible;max-height:none}.only-template{background:var(--ta-neutral-white);border-radius:var(--ta-radius-rounded)}\n"], dependencies: [{ kind: "pipe", type: AsyncPipe, name: "async" }, { kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "directive", type: StopPropagationDirective, selector: "[appStopPropagation]", inputs: ["stopPropagationActivation"] }, { kind: "ngmodule", type: TranslateModule }, { kind: "pipe", type: i1.TranslatePipe, name: "translate" }, { kind: "component", type: ButtonComponent, selector: "ta-button", inputs: ["state", "type", "size", "icon", "options", "stopPropagationActivation"], outputs: ["action"] }, { kind: "component", type: LinkComponent, selector: "ta-link", inputs: ["state", "underline", "bold", "size", "icon"], outputs: ["action"] }, { kind: "component", type: TaOverlayPanelComponent, selector: "ta-overlay-panel", inputs: ["panelConfig", "position"], outputs: ["closed"] }, { kind: "component", type: EmptyComponent, selector: "ta-empty", inputs: ["isEmpty", "isLight", "showMessage", "text", "type", "icon", "iconSize"] }, { kind: "component", type: LoaderComponent, selector: "ta-loader", inputs: ["isLoading", "skeleton", "size", "text"] }, { kind: "component", type: LayoutSideCtaComponent, selector: "ta-layout-side-cta", inputs: ["background"] }, { kind: "component", type: LayoutSideContentComponent, selector: "ta-layout-side-content" }, { kind: "component", type: LayoutSideComponent, selector: "ta-layout-side" }, { kind: "component", type: SearchFieldComponent, selector: "ta-search-field", inputs: ["isOpen", "placeholder", "space", "type"], outputs: ["valueCompleted"] }, { kind: "component", type: LabelComponent, selector: "ta-label", inputs: ["size", "type"] }, { kind: "component", type: TextComponent, selector: "ta-text", inputs: ["size", "isBold", "color"] }, { kind: "component", type: CheckboxComponent, selector: "ta-input-checkbox" }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: InputLayoutComponent, selector: "ta-input-layout", inputs: ["input", "width", "height"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: InputChoicesComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-input-choices', standalone: true, imports: [
                        AsyncPipe,
                        FontIconComponent,
                        StopPropagationDirective,
                        TranslateModule,
                        ButtonComponent,
                        LinkComponent,
                        TaOverlayPanelComponent,
                        EmptyComponent,
                        LoaderComponent,
                        LayoutSideCtaComponent,
                        LayoutSideContentComponent,
                        LayoutSideComponent,
                        SearchFieldComponent,
                        LabelComponent,
                        TextComponent,
                        CheckboxComponent,
                        ReactiveFormsModule,
                        InputLayoutComponent,
                        NgTemplateOutlet,
                    ], template: "@if (this.input.onlyTemplate !== true) {\n  <ta-overlay-panel [panelConfig]=\"{ matchTriggerWidth: false }\">\n    <ng-template #panelTrigger>\n      <ta-input-layout [input]=\"this.input\">\n        <div class=\"form-control\" #focusedElement>\n          <div class=\"input-group d-flex full-width\">\n            <input type=\"hidden\" [formControl]=\"$any(this.input.formControl)\" [value]=\"this.input.value\" />\n\n            <div class=\"flex-start g-space-xs\">\n              @for (value of this.input.value; track value) {\n                <ta-label size=\"sm\" class=\"d-flex\">\n                  {{ (getName$(value) | async) ?? '' | translate }}\n                </ta-label>\n              }\n            </div>\n            @if (this.input.message) {\n              <div class=\"message\">\n                <small class=\"form-text text-muted\">\n                  <span>{{ this.input.message }}</span>\n                </small>\n              </div>\n            }\n          </div>\n        </div>\n      </ta-input-layout>\n    </ng-template>\n    <ng-template #panelContent>\n      <ng-template [ngTemplateOutlet]=\"choicesTemplate\"></ng-template>\n    </ng-template>\n  </ta-overlay-panel>\n} @else {\n  <div class=\"only-template\">\n    <ng-template [ngTemplateOutlet]=\"choicesTemplate\"></ng-template>\n  </div>\n}\n\n<ng-template #choicesTemplate>\n  <div appStopPropagation class=\"flex-column g-space-sm\">\n    @if (!this.input.choiceTemplate) {\n      @if (this.input.withSearch) {\n        <ta-search-field\n          [isOpen]=\"true\"\n          [input]=\"this.inputSearch\"\n          [onFocus]=\"this.searchFocus\"\n          [standalone]=\"true\"\n          class=\"m-space-sm\"\n        ></ta-search-field>\n      }\n\n      <ta-layout-side class=\"d-flex full-width choices-wrapper\" style=\"min-height: 300px; max-height: 400px\">\n        <ta-layout-side-content>\n          <ta-loader [isLoading]=\"this.requestState.isLoading()\">\n            <ta-empty [isEmpty]=\"(this.filteredOptions$ | async)?.length === 0\">\n              @if (this.input.showNullableFields) {\n                <div class=\"p-space-sm\">\n                  <ta-input-checkbox\n                    [input]=\"this.inputNullable\"\n                    [standalone]=\"true\"\n                    (valueChanged)=\"this.selectNullable($event)\"\n                  ></ta-input-checkbox>\n                </div>\n              }\n              @for (option of this.filteredOptions$ | async; track option) {\n                <div\n                  class=\"flex-row pointer m-space-sm p-space-sm\"\n                  [class.is-selected]=\"this.isSelected(option)\"\n                  (click)=\"this.select(option)\"\n                >\n                  <ta-text>{{ option.name }}</ta-text>\n                </div>\n              }\n            </ta-empty>\n          </ta-loader>\n        </ta-layout-side-content>\n        <ta-layout-side-cta>\n          <div class=\"align-center space-between\">\n            <div class=\"pr-space-md\">\n              <div class=\"align-center g-space-xs link\">\n                <ta-font-icon name=\"close-tool\" type=\"sm\"></ta-font-icon>\n                <ta-link class=\"c-pointer\" (action)=\"this.clear()\">\n                  {{ 'core.filter.clear' | translate }}\n                </ta-link>\n              </div>\n            </div>\n            <div>\n              @if (this.input.onlyTemplate !== true) {\n                <ta-button (action)=\"this.close()\">\n                  <div class=\"align-center m-space-xs\">\n                    <ta-font-icon name=\"check-line\"></ta-font-icon>\n                    {{ 'form.validate' | translate }}\n                  </div>\n                </ta-button>\n              }\n            </div>\n          </div>\n        </ta-layout-side-cta>\n      </ta-layout-side>\n    } @else if (this.input.choiceTemplate && this.filteredOptions$) {\n      @if (this.input.withSearch) {\n        <ta-search-field\n          [isOpen]=\"true\"\n          [input]=\"this.inputSearch\"\n          [onFocus]=\"this.searchFocus\"\n          class=\"m-space-sm\"\n          [standalone]=\"true\"\n        ></ta-search-field>\n      }\n      <ta-layout-side class=\"d-flex full-width\" style=\"min-height: 300px; max-height: 400px\">\n        <ta-layout-side-content>\n          <ta-loader [isLoading]=\"this.requestState.isLoading()\">\n            @if (this.input.choiceTemplate.one) {\n              <ta-empty [isEmpty]=\"(this.filteredOptions$ | async)?.length === 0\">\n                @for (option of this.filteredOptions$ | async; track option) {\n                  <div\n                    class=\"flex-row pointer m-space-sm p-space-sm\"\n                    [class.is-selected]=\"this.isSelected(option)\"\n                    (click)=\"this.select(option)\"\n                  >\n                    <ng-template\n                      [ngTemplateOutlet]=\"this.input.choiceTemplate.one\"\n                      [ngTemplateOutletContext]=\"{ item: option.data }\"\n                    ></ng-template>\n                  </div>\n                }\n              </ta-empty>\n            } @else if (this.input.choiceTemplate.list) {\n              <ng-template\n                [ngTemplateOutlet]=\"this.input.choiceTemplate.list\"\n                [ngTemplateOutletContext]=\"{\n                  data: {\n                    items: this.filteredOptions$ | async,\n                    isselected: this.isSelected,\n                    select: this.select,\n                    search: this.inputSearch.value,\n                    refresh: this.refresh,\n                  },\n                }\"\n              ></ng-template>\n            }\n          </ta-loader>\n        </ta-layout-side-content>\n        <ta-layout-side-cta>\n          <div class=\"align-center space-between\">\n            <div class=\"pr-space-md\">\n              <div class=\"align-center g-space-xs link\">\n                <ta-font-icon name=\"close-tool\" type=\"sm\"></ta-font-icon>\n                <ta-link class=\"c-pointer\" (action)=\"this.clear()\">\n                  {{ 'core.filter.clear' | translate }}\n                </ta-link>\n              </div>\n            </div>\n            <div>\n              @if (this.input.onlyTemplate !== true) {\n                <ta-button (action)=\"this.close()\">\n                  <div class=\"align-center m-space-xs\">\n                    <ta-font-icon name=\"check-line\"></ta-font-icon>\n                    {{ 'form.validate' | translate }}\n                  </div>\n                </ta-button>\n              }\n            </div>\n          </div>\n        </ta-layout-side-cta>\n      </ta-layout-side>\n    }\n  </div>\n</ng-template>\n", styles: [".textbox-container{width:100%}.input-group{position:relative}.input-group .action{position:absolute;right:8px;top:16px;bottom:0}.is-selected{border:1px solid var(--ta-border-secondary);border-radius:var(--ta-radius-full)}.menu-panel{background-color:var(--ta-neutral-white);border-radius:var(--ta-radius-rounded);border:1px solid;border-color:var(--ta-neutral-300);overflow:hidden}.choices-wrapper{overflow:visible;max-height:none}.only-template{background:var(--ta-neutral-white);border-radius:var(--ta-radius-rounded)}\n"] }]
        }], ctorParameters: () => [], propDecorators: { overlayPanelRef: [{
                type: ViewChild,
                args: [TaOverlayPanelComponent]
            }] } });
//# sourceMappingURL=data:application/json;base64,