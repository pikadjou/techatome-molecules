import { Component } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { TaAbstractInputComponent } from '../../abstract.component';
import { FormLabelComponent } from '../../label/label.component';
import * as i0 from "@angular/core";
export class ToggleComponent extends TaAbstractInputComponent {
    constructor() {
        super();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: ToggleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.13", type: ToggleComponent, isStandalone: true, selector: "ta-input-toggle", usesInheritance: true, ngImport: i0, template: "<label class=\"toggle-switch\">\n  <input\n    type=\"checkbox\"\n    (click)=\"this.input.value = !this.input.value\"\n    [checked]=\"this.input.value\"\n    [disabled]=\"this.input.disabled\"\n    [attr.aria-invalid]=\"this.input.formControl?.invalid\"\n  />\n  <span class=\"slider\"></span>\n  <ta-form-label [input]=\"input\" [withMarginBottom]=\"false\"></ta-form-label>\n</label>\n", styles: [".toggle-switch{display:inline-flex;align-items:center;cursor:pointer;-webkit-user-select:none;user-select:none}.toggle-switch input{display:none}.toggle-switch input:checked+.slider{background-color:var(--ta-surface-brand-primary)}.toggle-switch input:checked+.slider:before{transform:translate(14px)}.toggle-switch input:disabled+.slider{border-color:var(--ta-neutral-300);cursor:not-allowed}.toggle-switch input:disabled+.slider:before{border-color:var(--ta-neutral-200)}.slider{position:relative;width:30px;height:16px;background-color:var(--ta-neutral-300);border-radius:var(--ta-radius-rounded);transition:background-color .2s ease;margin-right:var(--ta-space-sm)}.slider:before{content:\"\";position:absolute;width:12px;height:12px;left:2px;top:2px;background-color:var(--ta-neutral-white);border-radius:var(--ta-radius-full);transition:transform .2s ease}\n"], dependencies: [{ kind: "component", type: FormLabelComponent, selector: "ta-form-label", inputs: ["input", "withMarginBottom"] }, { kind: "ngmodule", type: ReactiveFormsModule }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: ToggleComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-input-toggle', standalone: true, imports: [FormLabelComponent, ReactiveFormsModule], template: "<label class=\"toggle-switch\">\n  <input\n    type=\"checkbox\"\n    (click)=\"this.input.value = !this.input.value\"\n    [checked]=\"this.input.value\"\n    [disabled]=\"this.input.disabled\"\n    [attr.aria-invalid]=\"this.input.formControl?.invalid\"\n  />\n  <span class=\"slider\"></span>\n  <ta-form-label [input]=\"input\" [withMarginBottom]=\"false\"></ta-form-label>\n</label>\n", styles: [".toggle-switch{display:inline-flex;align-items:center;cursor:pointer;-webkit-user-select:none;user-select:none}.toggle-switch input{display:none}.toggle-switch input:checked+.slider{background-color:var(--ta-surface-brand-primary)}.toggle-switch input:checked+.slider:before{transform:translate(14px)}.toggle-switch input:disabled+.slider{border-color:var(--ta-neutral-300);cursor:not-allowed}.toggle-switch input:disabled+.slider:before{border-color:var(--ta-neutral-200)}.slider{position:relative;width:30px;height:16px;background-color:var(--ta-neutral-300);border-radius:var(--ta-radius-rounded);transition:background-color .2s ease;margin-right:var(--ta-space-sm)}.slider:before{content:\"\";position:absolute;width:12px;height:12px;left:2px;top:2px;background-color:var(--ta-neutral-white);border-radius:var(--ta-radius-full);transition:transform .2s ease}\n"] }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9nZ2xlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9pbnB1dC90b2dnbGUvdG9nZ2xlLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9pbnB1dC90b2dnbGUvdG9nZ2xlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFJckQsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDcEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7O0FBU2pFLE1BQU0sT0FBTyxlQUFnQixTQUFRLHdCQUFnRDtJQUNuRjtRQUNFLEtBQUssRUFBRSxDQUFDO0lBQ1YsQ0FBQzsrR0FIVSxlQUFlO21HQUFmLGVBQWUsa0dDZjVCLHVZQVdBLDA1QkRFWSxrQkFBa0IsZ0dBQUUsbUJBQW1COzs0RkFFdEMsZUFBZTtrQkFQM0IsU0FBUzsrQkFDRSxpQkFBaUIsY0FHZixJQUFJLFdBQ1AsQ0FBQyxrQkFBa0IsRUFBRSxtQkFBbUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuaW1wb3J0IHsgSW5wdXRDaGVja0JveCB9IGZyb20gJ0B0YS9mb3JtLW1vZGVsJztcblxuaW1wb3J0IHsgVGFBYnN0cmFjdElucHV0Q29tcG9uZW50IH0gZnJvbSAnLi4vLi4vYWJzdHJhY3QuY29tcG9uZW50JztcbmltcG9ydCB7IEZvcm1MYWJlbENvbXBvbmVudCB9IGZyb20gJy4uLy4uL2xhYmVsL2xhYmVsLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhLWlucHV0LXRvZ2dsZScsXG4gIHRlbXBsYXRlVXJsOiAnLi90b2dnbGUuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi90b2dnbGUuY29tcG9uZW50LnNjc3MnXSxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW0Zvcm1MYWJlbENvbXBvbmVudCwgUmVhY3RpdmVGb3Jtc01vZHVsZV0sXG59KVxuZXhwb3J0IGNsYXNzIFRvZ2dsZUNvbXBvbmVudCBleHRlbmRzIFRhQWJzdHJhY3RJbnB1dENvbXBvbmVudDxJbnB1dENoZWNrQm94LCBib29sZWFuPiB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gIH1cbn1cbiIsIjxsYWJlbCBjbGFzcz1cInRvZ2dsZS1zd2l0Y2hcIj5cbiAgPGlucHV0XG4gICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAoY2xpY2spPVwidGhpcy5pbnB1dC52YWx1ZSA9ICF0aGlzLmlucHV0LnZhbHVlXCJcbiAgICBbY2hlY2tlZF09XCJ0aGlzLmlucHV0LnZhbHVlXCJcbiAgICBbZGlzYWJsZWRdPVwidGhpcy5pbnB1dC5kaXNhYmxlZFwiXG4gICAgW2F0dHIuYXJpYS1pbnZhbGlkXT1cInRoaXMuaW5wdXQuZm9ybUNvbnRyb2w/LmludmFsaWRcIlxuICAvPlxuICA8c3BhbiBjbGFzcz1cInNsaWRlclwiPjwvc3Bhbj5cbiAgPHRhLWZvcm0tbGFiZWwgW2lucHV0XT1cImlucHV0XCIgW3dpdGhNYXJnaW5Cb3R0b21dPVwiZmFsc2VcIj48L3RhLWZvcm0tbGFiZWw+XG48L2xhYmVsPlxuIl19