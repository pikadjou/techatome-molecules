import { Component, ViewChild } from '@angular/core';
import { MatGoogleMapsAutocompleteModule } from '@angular-material-extensions/google-maps-autocomplete';
import { TranslateModule } from '@ngx-translate/core';
import { TaAbstractInputComponent } from '../../abstract.component';
import { FormLabelComponent } from '../../label/label.component';
import * as i0 from "@angular/core";
import * as i1 from "@ngx-translate/core";
import * as i2 from "@angular-material-extensions/google-maps-autocomplete";
export class InputAddressComponent extends TaAbstractInputComponent {
    constructor() {
        super();
        this.addressDetails = {
            street: null,
            streetNumber: null,
            locality: null,
            postalCode: null,
            country: null,
            longitude: null,
            latitude: null,
        };
    }
    parseAddress(place) {
        const addressComponents = place.address_components;
        const geometry = place.geometry;
        const getComponent = (type) => {
            const component = addressComponents.find((comp) => comp.types.includes(type));
            return component ? component.long_name : null;
        };
        this.input.value = {
            streetNumber: getComponent('street_number'),
            street: getComponent('route'),
            locality: getComponent('locality'),
            postalCode: getComponent('postal_code'),
            country: getComponent('country'),
            longitude: geometry?.location?.lng() || null,
            latitude: geometry?.location?.lat() || null,
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: InputAddressComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.13", type: InputAddressComponent, isStandalone: true, selector: "ta-input-address", viewQueries: [{ propertyName: "addresstext", first: true, predicate: ["addresstext"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<ta-form-label [input]=\"input\"></ta-form-label>\n<mat-google-maps-autocomplete\n  class=\"form-control\"\n  autocomplete=\"off\"\n  appearance=\"standard\"\n  [addressLabelText]=\"''\"\n  [placeholderText]=\"'form.input.address.placeholder' | translate\"\n  [requiredErrorText]=\"'form.input.address.required' | translate\"\n  [invalidErrorText]=\"'form.input.address.invalid' | translate\"\n  (onAutocompleteSelected)=\"this.parseAddress($event)\"\n  #addresstext\n></mat-google-maps-autocomplete>\n", styles: ["::ng-deep .mat-mdc-form-field-required-marker{display:none}::ng-deep .mat-mdc-form-field-infix{padding-top:var(--ta-space-sm)!important;padding-bottom:var(--ta-space-sm)!important;align-content:center;font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-default-weight)}::ng-deep .mat-mdc-text-field-wrapper{border-radius:var(--ta-radius-rounded)!important}\n"], dependencies: [{ kind: "ngmodule", type: TranslateModule }, { kind: "pipe", type: i1.TranslatePipe, name: "translate" }, { kind: "ngmodule", type: MatGoogleMapsAutocompleteModule }, { kind: "component", type: i2.MatGoogleMapsAutocompleteComponent, selector: "mat-google-maps-autocomplete", inputs: ["addressLabelText", "placeholderText", "requiredErrorText", "invalidErrorText", "appearance", "value", "address", "country", "placeIdOnly", "strictBounds", "types", "type", "autoCompleteOptions"], outputs: ["onChange", "onAutocompleteSelected", "onGermanAddressMapped", "onLocationSelected"], exportAs: ["matGoogleMapsAutocomplete"] }, { kind: "component", type: FormLabelComponent, selector: "ta-form-label", inputs: ["input", "withMarginBottom"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: InputAddressComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-input-address', standalone: true, imports: [TranslateModule, MatGoogleMapsAutocompleteModule, FormLabelComponent], template: "<ta-form-label [input]=\"input\"></ta-form-label>\n<mat-google-maps-autocomplete\n  class=\"form-control\"\n  autocomplete=\"off\"\n  appearance=\"standard\"\n  [addressLabelText]=\"''\"\n  [placeholderText]=\"'form.input.address.placeholder' | translate\"\n  [requiredErrorText]=\"'form.input.address.required' | translate\"\n  [invalidErrorText]=\"'form.input.address.invalid' | translate\"\n  (onAutocompleteSelected)=\"this.parseAddress($event)\"\n  #addresstext\n></mat-google-maps-autocomplete>\n", styles: ["::ng-deep .mat-mdc-form-field-required-marker{display:none}::ng-deep .mat-mdc-form-field-infix{padding-top:var(--ta-space-sm)!important;padding-bottom:var(--ta-space-sm)!important;align-content:center;font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-default-weight)}::ng-deep .mat-mdc-text-field-wrapper{border-radius:var(--ta-radius-rounded)!important}\n"] }]
        }], ctorParameters: () => [], propDecorators: { addresstext: [{
                type: ViewChild,
                args: ['addresstext']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkcmVzcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbXBvbmVudHMvaW5wdXQvYWRkcmVzcy9hZGRyZXNzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9pbnB1dC9hZGRyZXNzL2FkZHJlc3MuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFckQsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sdURBQXVELENBQUM7QUFDeEcsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBSXRELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDOzs7O0FBU2pFLE1BQU0sT0FBTyxxQkFBc0IsU0FBUSx3QkFBc0M7SUFhL0U7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQVhWLG1CQUFjLEdBQUc7WUFDZixNQUFNLEVBQUUsSUFBSTtZQUNaLFlBQVksRUFBRSxJQUFJO1lBQ2xCLFFBQVEsRUFBRSxJQUFJO1lBQ2QsVUFBVSxFQUFFLElBQUk7WUFDaEIsT0FBTyxFQUFFLElBQUk7WUFDYixTQUFTLEVBQUUsSUFBSTtZQUNmLFFBQVEsRUFBRSxJQUFJO1NBQ2YsQ0FBQztJQUlGLENBQUM7SUFFTSxZQUFZLENBQUMsS0FBVTtRQUM1QixNQUFNLGlCQUFpQixHQUFHLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQztRQUNuRCxNQUFNLFFBQVEsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDO1FBRWhDLE1BQU0sWUFBWSxHQUFHLENBQUMsSUFBWSxFQUFFLEVBQUU7WUFDcEMsTUFBTSxTQUFTLEdBQUcsaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBUyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ25GLE9BQU8sU0FBUyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDaEQsQ0FBQyxDQUFDO1FBRUYsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUc7WUFDakIsWUFBWSxFQUFFLFlBQVksQ0FBQyxlQUFlLENBQUM7WUFDM0MsTUFBTSxFQUFFLFlBQVksQ0FBQyxPQUFPLENBQUM7WUFDN0IsUUFBUSxFQUFFLFlBQVksQ0FBQyxVQUFVLENBQUM7WUFDbEMsVUFBVSxFQUFFLFlBQVksQ0FBQyxhQUFhLENBQUM7WUFDdkMsT0FBTyxFQUFFLFlBQVksQ0FBQyxTQUFTLENBQUM7WUFDaEMsU0FBUyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsR0FBRyxFQUFFLElBQUksSUFBSTtZQUM1QyxRQUFRLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxHQUFHLEVBQUUsSUFBSSxJQUFJO1NBQzVDLENBQUM7SUFDSixDQUFDOytHQW5DVSxxQkFBcUI7bUdBQXJCLHFCQUFxQiwrTUNqQmxDLHdmQVlBLDJlREdZLGVBQWUsMkZBQUUsK0JBQStCLG9lQUFFLGtCQUFrQjs7NEZBRW5FLHFCQUFxQjtrQkFQakMsU0FBUzsrQkFDRSxrQkFBa0IsY0FHaEIsSUFBSSxXQUNQLENBQUMsZUFBZSxFQUFFLCtCQUErQixFQUFFLGtCQUFrQixDQUFDO3dEQUdyRCxXQUFXO3NCQUFwQyxTQUFTO3VCQUFDLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBNYXRHb29nbGVNYXBzQXV0b2NvbXBsZXRlTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXItbWF0ZXJpYWwtZXh0ZW5zaW9ucy9nb29nbGUtbWFwcy1hdXRvY29tcGxldGUnO1xuaW1wb3J0IHsgVHJhbnNsYXRlTW9kdWxlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5cbmltcG9ydCB7IElucHV0QWRkcmVzcyB9IGZyb20gJ0B0YS9mb3JtLW1vZGVsJztcblxuaW1wb3J0IHsgVGFBYnN0cmFjdElucHV0Q29tcG9uZW50IH0gZnJvbSAnLi4vLi4vYWJzdHJhY3QuY29tcG9uZW50JztcbmltcG9ydCB7IEZvcm1MYWJlbENvbXBvbmVudCB9IGZyb20gJy4uLy4uL2xhYmVsL2xhYmVsLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhLWlucHV0LWFkZHJlc3MnLFxuICB0ZW1wbGF0ZVVybDogJy4vYWRkcmVzcy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2FkZHJlc3MuY29tcG9uZW50LnNjc3MnXSxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW1RyYW5zbGF0ZU1vZHVsZSwgTWF0R29vZ2xlTWFwc0F1dG9jb21wbGV0ZU1vZHVsZSwgRm9ybUxhYmVsQ29tcG9uZW50XSxcbn0pXG5leHBvcnQgY2xhc3MgSW5wdXRBZGRyZXNzQ29tcG9uZW50IGV4dGVuZHMgVGFBYnN0cmFjdElucHV0Q29tcG9uZW50PElucHV0QWRkcmVzcz4ge1xuICBAVmlld0NoaWxkKCdhZGRyZXNzdGV4dCcpIGFkZHJlc3N0ZXh0OiBhbnk7XG5cbiAgYWRkcmVzc0RldGFpbHMgPSB7XG4gICAgc3RyZWV0OiBudWxsLFxuICAgIHN0cmVldE51bWJlcjogbnVsbCxcbiAgICBsb2NhbGl0eTogbnVsbCxcbiAgICBwb3N0YWxDb2RlOiBudWxsLFxuICAgIGNvdW50cnk6IG51bGwsXG4gICAgbG9uZ2l0dWRlOiBudWxsLFxuICAgIGxhdGl0dWRlOiBudWxsLFxuICB9O1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBwdWJsaWMgcGFyc2VBZGRyZXNzKHBsYWNlOiBhbnkpIHtcbiAgICBjb25zdCBhZGRyZXNzQ29tcG9uZW50cyA9IHBsYWNlLmFkZHJlc3NfY29tcG9uZW50cztcbiAgICBjb25zdCBnZW9tZXRyeSA9IHBsYWNlLmdlb21ldHJ5O1xuXG4gICAgY29uc3QgZ2V0Q29tcG9uZW50ID0gKHR5cGU6IHN0cmluZykgPT4ge1xuICAgICAgY29uc3QgY29tcG9uZW50ID0gYWRkcmVzc0NvbXBvbmVudHMuZmluZCgoY29tcDogYW55KSA9PiBjb21wLnR5cGVzLmluY2x1ZGVzKHR5cGUpKTtcbiAgICAgIHJldHVybiBjb21wb25lbnQgPyBjb21wb25lbnQubG9uZ19uYW1lIDogbnVsbDtcbiAgICB9O1xuXG4gICAgdGhpcy5pbnB1dC52YWx1ZSA9IHtcbiAgICAgIHN0cmVldE51bWJlcjogZ2V0Q29tcG9uZW50KCdzdHJlZXRfbnVtYmVyJyksXG4gICAgICBzdHJlZXQ6IGdldENvbXBvbmVudCgncm91dGUnKSxcbiAgICAgIGxvY2FsaXR5OiBnZXRDb21wb25lbnQoJ2xvY2FsaXR5JyksXG4gICAgICBwb3N0YWxDb2RlOiBnZXRDb21wb25lbnQoJ3Bvc3RhbF9jb2RlJyksXG4gICAgICBjb3VudHJ5OiBnZXRDb21wb25lbnQoJ2NvdW50cnknKSxcbiAgICAgIGxvbmdpdHVkZTogZ2VvbWV0cnk/LmxvY2F0aW9uPy5sbmcoKSB8fCBudWxsLFxuICAgICAgbGF0aXR1ZGU6IGdlb21ldHJ5Py5sb2NhdGlvbj8ubGF0KCkgfHwgbnVsbCxcbiAgICB9O1xuICB9XG59XG4iLCI8dGEtZm9ybS1sYWJlbCBbaW5wdXRdPVwiaW5wdXRcIj48L3RhLWZvcm0tbGFiZWw+XG48bWF0LWdvb2dsZS1tYXBzLWF1dG9jb21wbGV0ZVxuICBjbGFzcz1cImZvcm0tY29udHJvbFwiXG4gIGF1dG9jb21wbGV0ZT1cIm9mZlwiXG4gIGFwcGVhcmFuY2U9XCJzdGFuZGFyZFwiXG4gIFthZGRyZXNzTGFiZWxUZXh0XT1cIicnXCJcbiAgW3BsYWNlaG9sZGVyVGV4dF09XCInZm9ybS5pbnB1dC5hZGRyZXNzLnBsYWNlaG9sZGVyJyB8IHRyYW5zbGF0ZVwiXG4gIFtyZXF1aXJlZEVycm9yVGV4dF09XCInZm9ybS5pbnB1dC5hZGRyZXNzLnJlcXVpcmVkJyB8IHRyYW5zbGF0ZVwiXG4gIFtpbnZhbGlkRXJyb3JUZXh0XT1cIidmb3JtLmlucHV0LmFkZHJlc3MuaW52YWxpZCcgfCB0cmFuc2xhdGVcIlxuICAob25BdXRvY29tcGxldGVTZWxlY3RlZCk9XCJ0aGlzLnBhcnNlQWRkcmVzcygkZXZlbnQpXCJcbiAgI2FkZHJlc3N0ZXh0XG4+PC9tYXQtZ29vZ2xlLW1hcHMtYXV0b2NvbXBsZXRlPlxuIl19