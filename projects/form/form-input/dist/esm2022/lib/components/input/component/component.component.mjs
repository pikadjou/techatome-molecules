import { NgTemplateOutlet } from '@angular/common';
import { Component, inject } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';
import { CamIconsModule } from '@ta/icons';
import { CamLayoutModule, CamUiModule } from '@ta/ui';
import { CamBaseModal } from '@ta/utils';
import { Subject } from 'rxjs';
import { CamAbstractInputComponent } from '../../abstract.component';
import { InputLayoutComponent } from '../../input-layout/input-layout.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@ta/icons";
import * as i3 from "@ta/ui";
export class ComponentInputComponent extends CamAbstractInputComponent {
    constructor() {
        super(...arguments);
        this.dialog = inject(MatDialog);
    }
    open() {
        this.dialog.open(TemplateModal, {
            data: {
                input: this.input,
            },
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: ComponentInputComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.13", type: ComponentInputComponent, isStandalone: true, selector: "ta-input-component", usesInheritance: true, ngImport: i0, template: "<ta-input-layout [input]=\"this.input\">\r\n  <div class=\"component-container\">\r\n    <input\r\n      #box\r\n      #focusedElement\r\n      class=\"form-control\"\r\n      [value]=\"this.input.value\"\r\n      [formControl]=\"$any(this.input.formControl)\"\r\n      [readonly]=\"this.input.disabled\"\r\n      type=\"text\"\r\n    />\r\n    <div class=\"cta\" (click)=\"this.open()\">\r\n      <ta-font-icon name=\"ressources\"></ta-font-icon>\r\n    </div>\r\n  </div>\r\n</ta-input-layout>\r\n", styles: [".component-container{position:relative}.cta{position:absolute;top:0;right:0;padding:var(--ta-space-sm)}\n"], dependencies: [{ kind: "component", type: InputLayoutComponent, selector: "ta-input-layout", inputs: ["input", "width", "height"] }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "ngmodule", type: CamIconsModule }, { kind: "component", type: i2.FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: ComponentInputComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-input-component', standalone: true, imports: [InputLayoutComponent, ReactiveFormsModule, CamIconsModule], template: "<ta-input-layout [input]=\"this.input\">\r\n  <div class=\"component-container\">\r\n    <input\r\n      #box\r\n      #focusedElement\r\n      class=\"form-control\"\r\n      [value]=\"this.input.value\"\r\n      [formControl]=\"$any(this.input.formControl)\"\r\n      [readonly]=\"this.input.disabled\"\r\n      type=\"text\"\r\n    />\r\n    <div class=\"cta\" (click)=\"this.open()\">\r\n      <ta-font-icon name=\"ressources\"></ta-font-icon>\r\n    </div>\r\n  </div>\r\n</ta-input-layout>\r\n", styles: [".component-container{position:relative}.cta{position:absolute;top:0;right:0;padding:var(--ta-space-sm)}\n"] }]
        }] });
export class TemplateModal extends CamBaseModal {
    constructor() {
        super();
        this.dialogRef = inject((MatDialogRef));
        this.data = inject(MAT_DIALOG_DATA);
        this.selectedValue$ = new Subject();
        this.dialogRef.addPanelClass('classic-modal');
        this._registerSubscription(this.selectedValue$.subscribe({
            next: value => this.select(value),
        }));
    }
    select(value) {
        this.data.input.selectedValue$.next(value);
        this.dialogRef.close();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: TemplateModal, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: TemplateModal, isStandalone: true, selector: "ng-component", usesInheritance: true, ngImport: i0, template: "<ta-layout-modal style=\"classic\" title=\"input.component.modal.title\">\r\n  @if(this.data.input.template) {\r\n  <ng-template\r\n    [ngTemplateOutlet]=\"this.data.input.template\"\r\n    [ngTemplateOutletContext]=\"{ selectedValue$: this.selectedValue$ }\"\r\n  ></ng-template>\r\n  }\r\n</ta-layout-modal>\r\n", dependencies: [{ kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "ngmodule", type: CamLayoutModule }, { kind: "component", type: i3.LayoutModalComponent, selector: "ta-layout-modal", inputs: ["style", "title"] }, { kind: "ngmodule", type: CamUiModule }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: TemplateModal, decorators: [{
            type: Component,
            args: [{ selector: '', standalone: true, imports: [NgTemplateOutlet, CamLayoutModule, CamUiModule], template: "<ta-layout-modal style=\"classic\" title=\"input.component.modal.title\">\r\n  @if(this.data.input.template) {\r\n  <ng-template\r\n    [ngTemplateOutlet]=\"this.data.input.template\"\r\n    [ngTemplateOutletContext]=\"{ selectedValue$: this.selectedValue$ }\"\r\n  ></ng-template>\r\n  }\r\n</ta-layout-modal>\r\n" }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9pbnB1dC9jb21wb25lbnQvY29tcG9uZW50LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9pbnB1dC9jb21wb25lbnQvY29tcG9uZW50LmNvbXBvbmVudC5odG1sIiwiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL2lucHV0L2NvbXBvbmVudC9tb2RhbC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxlQUFlLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBR3BGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDM0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxXQUFXLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDdEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUN6QyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRS9CLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3JFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDJDQUEyQyxDQUFDOzs7OztBQVNqRixNQUFNLE9BQU8sdUJBQXdCLFNBQVEseUJBQXlDO0lBUHRGOztRQVFXLFdBQU0sR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7S0FTckM7SUFQUSxJQUFJO1FBQ1QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFO1lBQzlCLElBQUksRUFBRTtnQkFDSixLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7YUFDbEI7U0FDRixDQUFDLENBQUM7SUFDTCxDQUFDOytHQVRVLHVCQUF1QjttR0FBdkIsdUJBQXVCLHFHQ3JCcEMscWZBZ0JBLG1LRENZLG9CQUFvQixpR0FBRSxtQkFBbUIseWtCQUFFLGNBQWM7OzRGQUl4RCx1QkFBdUI7a0JBUG5DLFNBQVM7K0JBQ0Usb0JBQW9CLGNBQ2xCLElBQUksV0FDUCxDQUFDLG9CQUFvQixFQUFFLG1CQUFtQixFQUFFLGNBQWMsQ0FBQzs7QUF5QnRFLE1BQU0sT0FBTyxhQUFjLFNBQVEsWUFBWTtJQU03QztRQUNFLEtBQUssRUFBRSxDQUFDO1FBTkQsY0FBUyxHQUFHLE1BQU0sQ0FBQyxDQUFBLFlBQTJCLENBQUEsQ0FBQyxDQUFDO1FBQ2hELFNBQUksR0FBc0IsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBRWxELG1CQUFjLEdBQUcsSUFBSSxPQUFPLEVBQVUsQ0FBQztRQUs5QyxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUU5QyxJQUFJLENBQUMscUJBQXFCLENBQ3hCLElBQUksQ0FBQyxjQUFjLENBQUMsU0FBUyxDQUFDO1lBQzVCLElBQUksRUFBRSxLQUFLLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO1NBQ2xDLENBQUMsQ0FDSCxDQUFDO0lBQ0osQ0FBQztJQUVNLE1BQU0sQ0FBQyxLQUFhO1FBQ3pCLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFM0MsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN6QixDQUFDOytHQXRCVSxhQUFhO21HQUFiLGFBQWEsK0ZFMUMxQiw0VEFRQSw0Q0YrQlksZ0JBQWdCLG1KQUFFLGVBQWUsNklBQUUsV0FBVzs7NEZBRzdDLGFBQWE7a0JBTnpCLFNBQVM7K0JBQ0UsRUFBRSxjQUNBLElBQUksV0FDUCxDQUFDLGdCQUFnQixFQUFFLGVBQWUsRUFBRSxXQUFXLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ1RlbXBsYXRlT3V0bGV0IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENvbXBvbmVudCwgaW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgTUFUX0RJQUxPR19EQVRBLCBNYXREaWFsb2csIE1hdERpYWxvZ1JlZiB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2RpYWxvZyc7XG5cbmltcG9ydCB7IElucHV0Q29tcG9uZW50IH0gZnJvbSAnQHRhL2Zvcm0tbW9kZWwnO1xuaW1wb3J0IHsgQ2FtSWNvbnNNb2R1bGUgfSBmcm9tICdAdGEvaWNvbnMnO1xuaW1wb3J0IHsgQ2FtTGF5b3V0TW9kdWxlLCBDYW1VaU1vZHVsZSB9IGZyb20gJ0B0YS91aSc7XG5pbXBvcnQgeyBDYW1CYXNlTW9kYWwgfSBmcm9tICdAdGEvdXRpbHMnO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBDYW1BYnN0cmFjdElucHV0Q29tcG9uZW50IH0gZnJvbSAnLi4vLi4vYWJzdHJhY3QuY29tcG9uZW50JztcbmltcG9ydCB7IElucHV0TGF5b3V0Q29tcG9uZW50IH0gZnJvbSAnLi4vLi4vaW5wdXQtbGF5b3V0L2lucHV0LWxheW91dC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0YS1pbnB1dC1jb21wb25lbnQnLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbSW5wdXRMYXlvdXRDb21wb25lbnQsIFJlYWN0aXZlRm9ybXNNb2R1bGUsIENhbUljb25zTW9kdWxlXSxcbiAgdGVtcGxhdGVVcmw6ICcuL2NvbXBvbmVudC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsOiAnLi9jb21wb25lbnQuY29tcG9uZW50LnNjc3MnLFxufSlcbmV4cG9ydCBjbGFzcyBDb21wb25lbnRJbnB1dENvbXBvbmVudCBleHRlbmRzIENhbUFic3RyYWN0SW5wdXRDb21wb25lbnQ8SW5wdXRDb21wb25lbnQ+IHtcbiAgcmVhZG9ubHkgZGlhbG9nID0gaW5qZWN0KE1hdERpYWxvZyk7XG5cbiAgcHVibGljIG9wZW4oKSB7XG4gICAgdGhpcy5kaWFsb2cub3BlbihUZW1wbGF0ZU1vZGFsLCB7XG4gICAgICBkYXRhOiB7XG4gICAgICAgIGlucHV0OiB0aGlzLmlucHV0LFxuICAgICAgfSxcbiAgICB9KTtcbiAgfVxufVxuXG50eXBlIFRlbXBsYXRlTW9kYWxEYXRhID0ge1xuICBpbnB1dDogSW5wdXRDb21wb25lbnQ7XG59O1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnJyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW05nVGVtcGxhdGVPdXRsZXQsIENhbUxheW91dE1vZHVsZSwgQ2FtVWlNb2R1bGVdLFxuICB0ZW1wbGF0ZVVybDogJy4vbW9kYWwuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIFRlbXBsYXRlTW9kYWwgZXh0ZW5kcyBDYW1CYXNlTW9kYWwge1xuICByZWFkb25seSBkaWFsb2dSZWYgPSBpbmplY3QoTWF0RGlhbG9nUmVmPFRlbXBsYXRlTW9kYWw+KTtcbiAgcmVhZG9ubHkgZGF0YTogVGVtcGxhdGVNb2RhbERhdGEgPSBpbmplY3QoTUFUX0RJQUxPR19EQVRBKTtcblxuICByZWFkb25seSBzZWxlY3RlZFZhbHVlJCA9IG5ldyBTdWJqZWN0PHN0cmluZz4oKTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5kaWFsb2dSZWYuYWRkUGFuZWxDbGFzcygnY2xhc3NpYy1tb2RhbCcpO1xuXG4gICAgdGhpcy5fcmVnaXN0ZXJTdWJzY3JpcHRpb24oXG4gICAgICB0aGlzLnNlbGVjdGVkVmFsdWUkLnN1YnNjcmliZSh7XG4gICAgICAgIG5leHQ6IHZhbHVlID0+IHRoaXMuc2VsZWN0KHZhbHVlKSxcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIHB1YmxpYyBzZWxlY3QodmFsdWU6IHN0cmluZykge1xuICAgIHRoaXMuZGF0YS5pbnB1dC5zZWxlY3RlZFZhbHVlJC5uZXh0KHZhbHVlKTtcblxuICAgIHRoaXMuZGlhbG9nUmVmLmNsb3NlKCk7XG4gIH1cbn1cbiIsIjx0YS1pbnB1dC1sYXlvdXQgW2lucHV0XT1cInRoaXMuaW5wdXRcIj5cclxuICA8ZGl2IGNsYXNzPVwiY29tcG9uZW50LWNvbnRhaW5lclwiPlxyXG4gICAgPGlucHV0XHJcbiAgICAgICNib3hcclxuICAgICAgI2ZvY3VzZWRFbGVtZW50XHJcbiAgICAgIGNsYXNzPVwiZm9ybS1jb250cm9sXCJcclxuICAgICAgW3ZhbHVlXT1cInRoaXMuaW5wdXQudmFsdWVcIlxyXG4gICAgICBbZm9ybUNvbnRyb2xdPVwiJGFueSh0aGlzLmlucHV0LmZvcm1Db250cm9sKVwiXHJcbiAgICAgIFtyZWFkb25seV09XCJ0aGlzLmlucHV0LmRpc2FibGVkXCJcclxuICAgICAgdHlwZT1cInRleHRcIlxyXG4gICAgLz5cclxuICAgIDxkaXYgY2xhc3M9XCJjdGFcIiAoY2xpY2spPVwidGhpcy5vcGVuKClcIj5cclxuICAgICAgPHRhLWZvbnQtaWNvbiBuYW1lPVwicmVzc291cmNlc1wiPjwvdGEtZm9udC1pY29uPlxyXG4gICAgPC9kaXY+XHJcbiAgPC9kaXY+XHJcbjwvdGEtaW5wdXQtbGF5b3V0PlxyXG4iLCI8dGEtbGF5b3V0LW1vZGFsIHN0eWxlPVwiY2xhc3NpY1wiIHRpdGxlPVwiaW5wdXQuY29tcG9uZW50Lm1vZGFsLnRpdGxlXCI+XHJcbiAgQGlmKHRoaXMuZGF0YS5pbnB1dC50ZW1wbGF0ZSkge1xyXG4gIDxuZy10ZW1wbGF0ZVxyXG4gICAgW25nVGVtcGxhdGVPdXRsZXRdPVwidGhpcy5kYXRhLmlucHV0LnRlbXBsYXRlXCJcclxuICAgIFtuZ1RlbXBsYXRlT3V0bGV0Q29udGV4dF09XCJ7IHNlbGVjdGVkVmFsdWUkOiB0aGlzLnNlbGVjdGVkVmFsdWUkIH1cIlxyXG4gID48L25nLXRlbXBsYXRlPlxyXG4gIH1cclxuPC90YS1sYXlvdXQtbW9kYWw+XHJcbiJdfQ==