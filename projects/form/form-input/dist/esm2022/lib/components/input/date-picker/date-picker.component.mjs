import { NgIf } from '@angular/common';
import { Component, ViewChild } from '@angular/core';
import { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';
import { MatDatepickerModule } from '@angular/material/datepicker';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatInputModule } from '@angular/material/input';
import { isEqual } from 'date-fns';
import { CamAbstractInputComponent } from '../../abstract.component';
import { InputLayoutComponent } from '../../input-layout/input-layout.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@angular/material/datepicker";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@angular/material/input";
export class DatePickerComponent extends CamAbstractInputComponent {
    constructor() {
        super();
        this.range = new FormGroup({
            start: new FormControl(null),
            end: new FormControl(null),
        });
        this._registerSubscription(this.range.valueChanges.subscribe({
            next: value => {
                if (value.start && value.end && isEqual(value.start, value.end)) {
                    this.input.value = value.start;
                    return;
                }
                this.input.value = {
                    start: value.start,
                    end: value.end,
                };
            },
        }));
    }
    onDateSelect(event) {
        if (!event.value) {
            return;
        }
        this.input.value = event.value;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: DatePickerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: DatePickerComponent, isStandalone: true, selector: "ta-input-date-picker", viewQueries: [{ propertyName: "picker", first: true, predicate: ["picker"], descendants: true }], usesInheritance: true, ngImport: i0, template: "@if (this.input) {\n  <ta-input-layout [input]=\"this.input\">\n    @if (!this.input.rangeEnabled) {\n      <div class=\"align-center\" [class.disabled]=\"this.input.disabled\">\n        <input\n          matInput\n          #focusedElement\n          class=\"form-control\"\n          [matDatepicker]=\"picker\"\n          [value]=\"this.input.value\"\n          (dateInput)=\"this.onDateSelect($event)\"\n          (click)=\"this.picker.open()\"\n          [min]=\"this.input.minDate\"\n          [max]=\"this.input.maxDate\"\n          readonly\n        />\n        <mat-datepicker touchUi #picker></mat-datepicker>\n        <mat-datepicker-toggle matSuffix [for]=\"this.picker\"></mat-datepicker-toggle>\n      </div>\n    } @else {\n      <div class=\"align-center\">\n        <mat-date-range-input [formGroup]=\"this.range\" [rangePicker]=\"this.picker\">\n          <input\n            matStartDate\n            #focusedElement\n            placeholder=\"Start date\"\n            [min]=\"this.input.minDate\"\n            [max]=\"this.input.maxDate\"\n            formControlName=\"start\"\n            readonly\n          />\n          <input\n            matEndDate\n            placeholder=\"End date\"\n            [min]=\"this.input.minDate\"\n            [max]=\"this.input.maxDate\"\n            formControlName=\"end\"\n            readonly\n          />\n        </mat-date-range-input>\n        <mat-date-range-picker touchUi #picker></mat-date-range-picker>\n        <mat-datepicker-toggle matSuffix [for]=\"this.picker\"></mat-datepicker-toggle>\n      </div>\n    }\n  </ta-input-layout>\n}\n", styles: [":host ::ng-deep .form-control{width:100%}.disabled{border-color:var(--ta-neutral-300);pointer-events:none}\n"], dependencies: [{ kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i1.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "ngmodule", type: MatDatepickerModule }, { kind: "component", type: i2.MatDatepicker, selector: "mat-datepicker", exportAs: ["matDatepicker"] }, { kind: "directive", type: i2.MatDatepickerInput, selector: "input[matDatepicker]", inputs: ["matDatepicker", "min", "max", "matDatepickerFilter"], exportAs: ["matDatepickerInput"] }, { kind: "component", type: i2.MatDatepickerToggle, selector: "mat-datepicker-toggle", inputs: ["for", "tabIndex", "aria-label", "disabled", "disableRipple"], exportAs: ["matDatepickerToggle"] }, { kind: "component", type: i2.MatDateRangeInput, selector: "mat-date-range-input", inputs: ["rangePicker", "required", "dateFilter", "min", "max", "disabled", "separator", "comparisonStart", "comparisonEnd"], exportAs: ["matDateRangeInput"] }, { kind: "directive", type: i2.MatStartDate, selector: "input[matStartDate]", outputs: ["dateChange", "dateInput"] }, { kind: "directive", type: i2.MatEndDate, selector: "input[matEndDate]", outputs: ["dateChange", "dateInput"] }, { kind: "component", type: i2.MatDateRangePicker, selector: "mat-date-range-picker", exportAs: ["matDateRangePicker"] }, { kind: "ngmodule", type: MatFormFieldModule }, { kind: "directive", type: i3.MatSuffix, selector: "[matSuffix], [matIconSuffix], [matTextSuffix]", inputs: ["matTextSuffix"] }, { kind: "ngmodule", type: MatInputModule }, { kind: "directive", type: i4.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "component", type: InputLayoutComponent, selector: "ta-input-layout", inputs: ["input", "width", "height"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: DatePickerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-input-date-picker', standalone: true, imports: [NgIf, ReactiveFormsModule, MatDatepickerModule, MatFormFieldModule, MatInputModule, InputLayoutComponent], template: "@if (this.input) {\n  <ta-input-layout [input]=\"this.input\">\n    @if (!this.input.rangeEnabled) {\n      <div class=\"align-center\" [class.disabled]=\"this.input.disabled\">\n        <input\n          matInput\n          #focusedElement\n          class=\"form-control\"\n          [matDatepicker]=\"picker\"\n          [value]=\"this.input.value\"\n          (dateInput)=\"this.onDateSelect($event)\"\n          (click)=\"this.picker.open()\"\n          [min]=\"this.input.minDate\"\n          [max]=\"this.input.maxDate\"\n          readonly\n        />\n        <mat-datepicker touchUi #picker></mat-datepicker>\n        <mat-datepicker-toggle matSuffix [for]=\"this.picker\"></mat-datepicker-toggle>\n      </div>\n    } @else {\n      <div class=\"align-center\">\n        <mat-date-range-input [formGroup]=\"this.range\" [rangePicker]=\"this.picker\">\n          <input\n            matStartDate\n            #focusedElement\n            placeholder=\"Start date\"\n            [min]=\"this.input.minDate\"\n            [max]=\"this.input.maxDate\"\n            formControlName=\"start\"\n            readonly\n          />\n          <input\n            matEndDate\n            placeholder=\"End date\"\n            [min]=\"this.input.minDate\"\n            [max]=\"this.input.maxDate\"\n            formControlName=\"end\"\n            readonly\n          />\n        </mat-date-range-input>\n        <mat-date-range-picker touchUi #picker></mat-date-range-picker>\n        <mat-datepicker-toggle matSuffix [for]=\"this.picker\"></mat-datepicker-toggle>\n      </div>\n    }\n  </ta-input-layout>\n}\n", styles: [":host ::ng-deep .form-control{width:100%}.disabled{border-color:var(--ta-neutral-300);pointer-events:none}\n"] }]
        }], ctorParameters: () => [], propDecorators: { picker: [{
                type: ViewChild,
                args: ['picker']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1waWNrZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL2lucHV0L2RhdGUtcGlja2VyL2RhdGUtcGlja2VyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9pbnB1dC9kYXRlLXBpY2tlci9kYXRlLXBpY2tlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdkMsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDckQsT0FBTyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3RSxPQUFPLEVBQTBDLG1CQUFtQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDM0csT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDbEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBR3pELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFFbkMsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDckUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMkNBQTJDLENBQUM7Ozs7OztBQVNqRixNQUFNLE9BQU8sbUJBQW9CLFNBQVEseUJBQTBDO0lBUWpGO1FBQ0UsS0FBSyxFQUFFLENBQUM7UUFORCxVQUFLLEdBQUcsSUFBSSxTQUFTLENBQUM7WUFDN0IsS0FBSyxFQUFFLElBQUksV0FBVyxDQUFjLElBQUksQ0FBQztZQUN6QyxHQUFHLEVBQUUsSUFBSSxXQUFXLENBQWMsSUFBSSxDQUFDO1NBQ3hDLENBQUMsQ0FBQztRQUtELElBQUksQ0FBQyxxQkFBcUIsQ0FDeEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDO1lBQ2hDLElBQUksRUFBRSxLQUFLLENBQUMsRUFBRTtnQkFDWixJQUFJLEtBQUssQ0FBQyxLQUFLLElBQUksS0FBSyxDQUFDLEdBQUcsSUFBSSxPQUFPLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQztvQkFDaEUsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQztvQkFDL0IsT0FBTztnQkFDVCxDQUFDO2dCQUNELElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFRO29CQUN0QixLQUFLLEVBQUUsS0FBSyxDQUFDLEtBQUs7b0JBQ2xCLEdBQUcsRUFBRSxLQUFLLENBQUMsR0FBRztpQkFDZixDQUFDO1lBQ0osQ0FBQztTQUNGLENBQUMsQ0FDSCxDQUFDO0lBQ0osQ0FBQztJQUVNLFlBQVksQ0FBQyxLQUFvQztRQUN0RCxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQ2pCLE9BQU87UUFDVCxDQUFDO1FBQ0QsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQztJQUNqQyxDQUFDOytHQWhDVSxtQkFBbUI7bUdBQW5CLG1CQUFtQix5TUNwQmhDLCtrREE4Q0EscUtENUJrQixtQkFBbUIsbTJCQUFFLG1CQUFtQixvbENBQUUsa0JBQWtCLCtKQUFFLGNBQWMsMldBQUUsb0JBQW9COzs0RkFFdkcsbUJBQW1CO2tCQVAvQixTQUFTOytCQUNBLHNCQUFzQixjQUdsQixJQUFJLFdBQ1AsQ0FBQyxJQUFJLEVBQUUsbUJBQW1CLEVBQUUsbUJBQW1CLEVBQUUsa0JBQWtCLEVBQUUsY0FBYyxFQUFFLG9CQUFvQixDQUFDO3dEQUc5RixNQUFNO3NCQUExQixTQUFTO3VCQUFDLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ0lmIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENvbXBvbmVudCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtQ29udHJvbCwgRm9ybUdyb3VwLCBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgTWF0RGF0ZXBpY2tlciwgTWF0RGF0ZXBpY2tlcklucHV0RXZlbnQsIE1hdERhdGVwaWNrZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9kYXRlcGlja2VyJztcbmltcG9ydCB7IE1hdEZvcm1GaWVsZE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2Zvcm0tZmllbGQnO1xuaW1wb3J0IHsgTWF0SW5wdXRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9pbnB1dCc7XG5cbmltcG9ydCB7IElucHV0RGF0ZVBpY2tlciB9IGZyb20gJ0B0YS9mb3JtLW1vZGVsJztcbmltcG9ydCB7IGlzRXF1YWwgfSBmcm9tICdkYXRlLWZucyc7XG5cbmltcG9ydCB7IENhbUFic3RyYWN0SW5wdXRDb21wb25lbnQgfSBmcm9tICcuLi8uLi9hYnN0cmFjdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgSW5wdXRMYXlvdXRDb21wb25lbnQgfSBmcm9tICcuLi8uLi9pbnB1dC1sYXlvdXQvaW5wdXQtbGF5b3V0LmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuc2VsZWN0b3I6ICd0YS1pbnB1dC1kYXRlLXBpY2tlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9kYXRlLXBpY2tlci5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2RhdGUtcGlja2VyLmNvbXBvbmVudC5zY3NzJ10sXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtOZ0lmLCBSZWFjdGl2ZUZvcm1zTW9kdWxlLCBNYXREYXRlcGlja2VyTW9kdWxlLCBNYXRGb3JtRmllbGRNb2R1bGUsIE1hdElucHV0TW9kdWxlLCBJbnB1dExheW91dENvbXBvbmVudF0sXG59KVxuZXhwb3J0IGNsYXNzIERhdGVQaWNrZXJDb21wb25lbnQgZXh0ZW5kcyBDYW1BYnN0cmFjdElucHV0Q29tcG9uZW50PElucHV0RGF0ZVBpY2tlcj4ge1xuICBAVmlld0NoaWxkKCdwaWNrZXInKSBwaWNrZXIhOiBNYXREYXRlcGlja2VyPGFueT47XG5cbiAgcmVhZG9ubHkgcmFuZ2UgPSBuZXcgRm9ybUdyb3VwKHtcbiAgICBzdGFydDogbmV3IEZvcm1Db250cm9sPERhdGUgfCBudWxsPihudWxsKSxcbiAgICBlbmQ6IG5ldyBGb3JtQ29udHJvbDxEYXRlIHwgbnVsbD4obnVsbCksXG4gIH0pO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICB0aGlzLl9yZWdpc3RlclN1YnNjcmlwdGlvbihcbiAgICAgIHRoaXMucmFuZ2UudmFsdWVDaGFuZ2VzLnN1YnNjcmliZSh7XG4gICAgICAgIG5leHQ6IHZhbHVlID0+IHtcbiAgICAgICAgICBpZiAodmFsdWUuc3RhcnQgJiYgdmFsdWUuZW5kICYmIGlzRXF1YWwodmFsdWUuc3RhcnQsIHZhbHVlLmVuZCkpIHtcbiAgICAgICAgICAgIHRoaXMuaW5wdXQudmFsdWUgPSB2YWx1ZS5zdGFydDtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgICAgdGhpcy5pbnB1dC52YWx1ZSA9IDxhbnk+e1xuICAgICAgICAgICAgc3RhcnQ6IHZhbHVlLnN0YXJ0LFxuICAgICAgICAgICAgZW5kOiB2YWx1ZS5lbmQsXG4gICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIHB1YmxpYyBvbkRhdGVTZWxlY3QoZXZlbnQ6IE1hdERhdGVwaWNrZXJJbnB1dEV2ZW50PERhdGU+KSB7XG4gICAgaWYgKCFldmVudC52YWx1ZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmlucHV0LnZhbHVlID0gZXZlbnQudmFsdWU7XG4gIH1cbn1cbiIsIkBpZiAodGhpcy5pbnB1dCkge1xuICA8dGEtaW5wdXQtbGF5b3V0IFtpbnB1dF09XCJ0aGlzLmlucHV0XCI+XG4gICAgQGlmICghdGhpcy5pbnB1dC5yYW5nZUVuYWJsZWQpIHtcbiAgICAgIDxkaXYgY2xhc3M9XCJhbGlnbi1jZW50ZXJcIiBbY2xhc3MuZGlzYWJsZWRdPVwidGhpcy5pbnB1dC5kaXNhYmxlZFwiPlxuICAgICAgICA8aW5wdXRcbiAgICAgICAgICBtYXRJbnB1dFxuICAgICAgICAgICNmb2N1c2VkRWxlbWVudFxuICAgICAgICAgIGNsYXNzPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICBbbWF0RGF0ZXBpY2tlcl09XCJwaWNrZXJcIlxuICAgICAgICAgIFt2YWx1ZV09XCJ0aGlzLmlucHV0LnZhbHVlXCJcbiAgICAgICAgICAoZGF0ZUlucHV0KT1cInRoaXMub25EYXRlU2VsZWN0KCRldmVudClcIlxuICAgICAgICAgIChjbGljayk9XCJ0aGlzLnBpY2tlci5vcGVuKClcIlxuICAgICAgICAgIFttaW5dPVwidGhpcy5pbnB1dC5taW5EYXRlXCJcbiAgICAgICAgICBbbWF4XT1cInRoaXMuaW5wdXQubWF4RGF0ZVwiXG4gICAgICAgICAgcmVhZG9ubHlcbiAgICAgICAgLz5cbiAgICAgICAgPG1hdC1kYXRlcGlja2VyIHRvdWNoVWkgI3BpY2tlcj48L21hdC1kYXRlcGlja2VyPlxuICAgICAgICA8bWF0LWRhdGVwaWNrZXItdG9nZ2xlIG1hdFN1ZmZpeCBbZm9yXT1cInRoaXMucGlja2VyXCI+PC9tYXQtZGF0ZXBpY2tlci10b2dnbGU+XG4gICAgICA8L2Rpdj5cbiAgICB9IEBlbHNlIHtcbiAgICAgIDxkaXYgY2xhc3M9XCJhbGlnbi1jZW50ZXJcIj5cbiAgICAgICAgPG1hdC1kYXRlLXJhbmdlLWlucHV0IFtmb3JtR3JvdXBdPVwidGhpcy5yYW5nZVwiIFtyYW5nZVBpY2tlcl09XCJ0aGlzLnBpY2tlclwiPlxuICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgbWF0U3RhcnREYXRlXG4gICAgICAgICAgICAjZm9jdXNlZEVsZW1lbnRcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiU3RhcnQgZGF0ZVwiXG4gICAgICAgICAgICBbbWluXT1cInRoaXMuaW5wdXQubWluRGF0ZVwiXG4gICAgICAgICAgICBbbWF4XT1cInRoaXMuaW5wdXQubWF4RGF0ZVwiXG4gICAgICAgICAgICBmb3JtQ29udHJvbE5hbWU9XCJzdGFydFwiXG4gICAgICAgICAgICByZWFkb25seVxuICAgICAgICAgIC8+XG4gICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICBtYXRFbmREYXRlXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cIkVuZCBkYXRlXCJcbiAgICAgICAgICAgIFttaW5dPVwidGhpcy5pbnB1dC5taW5EYXRlXCJcbiAgICAgICAgICAgIFttYXhdPVwidGhpcy5pbnB1dC5tYXhEYXRlXCJcbiAgICAgICAgICAgIGZvcm1Db250cm9sTmFtZT1cImVuZFwiXG4gICAgICAgICAgICByZWFkb25seVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvbWF0LWRhdGUtcmFuZ2UtaW5wdXQ+XG4gICAgICAgIDxtYXQtZGF0ZS1yYW5nZS1waWNrZXIgdG91Y2hVaSAjcGlja2VyPjwvbWF0LWRhdGUtcmFuZ2UtcGlja2VyPlxuICAgICAgICA8bWF0LWRhdGVwaWNrZXItdG9nZ2xlIG1hdFN1ZmZpeCBbZm9yXT1cInRoaXMucGlja2VyXCI+PC9tYXQtZGF0ZXBpY2tlci10b2dnbGU+XG4gICAgICA8L2Rpdj5cbiAgICB9XG4gIDwvdGEtaW5wdXQtbGF5b3V0PlxufVxuIl19