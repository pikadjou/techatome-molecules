import { NgIf } from '@angular/common';
import { ReactiveFormsModule } from '@angular/forms';
import { FontIconComponent } from '@ta/icons';
import { Component, Input } from '@angular/core';
import { CamAbstractInputComponent } from '../../abstract.component';
import { TextareaComponent } from '../textarea/textarea.component';
import { InputLayoutComponent } from '../../input-layout/input-layout.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
export class TextBoxComponent extends CamAbstractInputComponent {
    get isPassword() {
        return this.input.type === 'password';
    }
    constructor() {
        super();
        this.space = true;
        this.hide = false;
    }
    ngOnInit() {
        super.ngOnInit();
        if (this.isPassword) {
            this.hide = true;
        }
    }
    iconClicked() {
        if (this.input.iconClicked)
            this.input.iconClicked();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: TextBoxComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: TextBoxComponent, isStandalone: true, selector: "ta-input-textbox", inputs: { space: "space" }, usesInheritance: true, ngImport: i0, template: "@if (this.input.type === 'textarea') {\n  <ta-input-textarea [input]=\"this.input\" [matcher]=\"this.matcher\"></ta-input-textarea>\n} @else {\n  <ta-input-layout [input]=\"this.input\">\n    <div>\n      <input\n        #box\n        #focusedElement\n        class=\"form-control\"\n        [value]=\"this.input.value\"\n        [formControl]=\"$any(this.input.formControl)\"\n        [readonly]=\"this.input.disabled\"\n        [type]=\"this.isPassword && !this.hide ? 'text' : this.input.type\"\n        (keyup)=\"this.onChange(box.value)\"\n      />\n      @if (this.isPassword) {\n        <span class=\"toggle-icon\" (click)=\"this.hide = !this.hide\">\n          <ta-font-icon name=\"eye\"></ta-font-icon>\n        </span>\n      }\n    </div>\n  </ta-input-layout>\n}\n", styles: [".form-control{box-sizing:border-box}\n"], dependencies: [{ kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: TextareaComponent, selector: "ta-input-textarea" }, { kind: "component", type: InputLayoutComponent, selector: "ta-input-layout", inputs: ["input", "width", "height"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: TextBoxComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-input-textbox', standalone: true, imports: [NgIf, FontIconComponent, ReactiveFormsModule, TextareaComponent, InputLayoutComponent], template: "@if (this.input.type === 'textarea') {\n  <ta-input-textarea [input]=\"this.input\" [matcher]=\"this.matcher\"></ta-input-textarea>\n} @else {\n  <ta-input-layout [input]=\"this.input\">\n    <div>\n      <input\n        #box\n        #focusedElement\n        class=\"form-control\"\n        [value]=\"this.input.value\"\n        [formControl]=\"$any(this.input.formControl)\"\n        [readonly]=\"this.input.disabled\"\n        [type]=\"this.isPassword && !this.hide ? 'text' : this.input.type\"\n        (keyup)=\"this.onChange(box.value)\"\n      />\n      @if (this.isPassword) {\n        <span class=\"toggle-icon\" (click)=\"this.hide = !this.hide\">\n          <ta-font-icon name=\"eye\"></ta-font-icon>\n        </span>\n      }\n    </div>\n  </ta-input-layout>\n}\n", styles: [".form-control{box-sizing:border-box}\n"] }]
        }], ctorParameters: () => [], propDecorators: { space: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dC1ib3guY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL2lucHV0L3RleHRib3gvdGV4dC1ib3guY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL2lucHV0L3RleHRib3gvdGV4dC1ib3guY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUM5QyxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUl6RCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNuRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQzs7O0FBU2pGLE1BQU0sT0FBTyxnQkFBaUIsU0FBUSx5QkFBdUM7SUFNM0UsSUFBSSxVQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksS0FBSyxVQUFVLENBQUM7SUFDeEMsQ0FBQztJQUVEO1FBQ0UsS0FBSyxFQUFFLENBQUM7UUFUVixVQUFLLEdBQUcsSUFBSSxDQUFDO1FBRU4sU0FBSSxHQUFHLEtBQUssQ0FBQztJQVFwQixDQUFDO0lBRVEsUUFBUTtRQUNmLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNqQixJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUNwQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNuQixDQUFDO0lBQ0gsQ0FBQztJQUVNLFdBQVc7UUFDaEIsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVc7WUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3ZELENBQUM7K0dBdkJVLGdCQUFnQjttR0FBaEIsZ0JBQWdCLCtIQ2xCN0IsMHdCQXVCQSxnR0RQa0IsaUJBQWlCLGtGQUFFLG1CQUFtQiwwa0JBQUUsaUJBQWlCLDhEQUFFLG9CQUFvQjs7NEZBRXBGLGdCQUFnQjtrQkFQNUIsU0FBUzsrQkFDQSxrQkFBa0IsY0FHZCxJQUFJLFdBQ1AsQ0FBQyxJQUFJLEVBQUUsaUJBQWlCLEVBQUUsbUJBQW1CLEVBQUUsaUJBQWlCLEVBQUUsb0JBQW9CLENBQUM7d0RBSWhHLEtBQUs7c0JBREosS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nSWYgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IEZvbnRJY29uQ29tcG9uZW50IH0gZnJvbSAnQHRhL2ljb25zJztcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBJbnB1dFRleHRCb3ggfSBmcm9tICdAdGEvZm9ybS1tb2RlbCc7XG5cbmltcG9ydCB7IENhbUFic3RyYWN0SW5wdXRDb21wb25lbnQgfSBmcm9tICcuLi8uLi9hYnN0cmFjdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGV4dGFyZWFDb21wb25lbnQgfSBmcm9tICcuLi90ZXh0YXJlYS90ZXh0YXJlYS5jb21wb25lbnQnO1xuaW1wb3J0IHsgSW5wdXRMYXlvdXRDb21wb25lbnQgfSBmcm9tICcuLi8uLi9pbnB1dC1sYXlvdXQvaW5wdXQtbGF5b3V0LmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuc2VsZWN0b3I6ICd0YS1pbnB1dC10ZXh0Ym94JyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RleHQtYm94LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vdGV4dC1ib3guY29tcG9uZW50LnNjc3MnXSxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW05nSWYsIEZvbnRJY29uQ29tcG9uZW50LCBSZWFjdGl2ZUZvcm1zTW9kdWxlLCBUZXh0YXJlYUNvbXBvbmVudCwgSW5wdXRMYXlvdXRDb21wb25lbnRdLFxufSlcbmV4cG9ydCBjbGFzcyBUZXh0Qm94Q29tcG9uZW50IGV4dGVuZHMgQ2FtQWJzdHJhY3RJbnB1dENvbXBvbmVudDxJbnB1dFRleHRCb3g+IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KClcbiAgc3BhY2UgPSB0cnVlO1xuXG4gIHB1YmxpYyBoaWRlID0gZmFsc2U7XG5cbiAgZ2V0IGlzUGFzc3dvcmQoKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5wdXQudHlwZSA9PT0gJ3Bhc3N3b3JkJztcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBvdmVycmlkZSBuZ09uSW5pdCgpIHtcbiAgICBzdXBlci5uZ09uSW5pdCgpO1xuICAgIGlmICh0aGlzLmlzUGFzc3dvcmQpIHtcbiAgICAgIHRoaXMuaGlkZSA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGljb25DbGlja2VkKCkge1xuICAgIGlmICh0aGlzLmlucHV0Lmljb25DbGlja2VkKSB0aGlzLmlucHV0Lmljb25DbGlja2VkKCk7XG4gIH1cbn1cbiIsIkBpZiAodGhpcy5pbnB1dC50eXBlID09PSAndGV4dGFyZWEnKSB7XG4gIDx0YS1pbnB1dC10ZXh0YXJlYSBbaW5wdXRdPVwidGhpcy5pbnB1dFwiIFttYXRjaGVyXT1cInRoaXMubWF0Y2hlclwiPjwvdGEtaW5wdXQtdGV4dGFyZWE+XG59IEBlbHNlIHtcbiAgPHRhLWlucHV0LWxheW91dCBbaW5wdXRdPVwidGhpcy5pbnB1dFwiPlxuICAgIDxkaXY+XG4gICAgICA8aW5wdXRcbiAgICAgICAgI2JveFxuICAgICAgICAjZm9jdXNlZEVsZW1lbnRcbiAgICAgICAgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIlxuICAgICAgICBbdmFsdWVdPVwidGhpcy5pbnB1dC52YWx1ZVwiXG4gICAgICAgIFtmb3JtQ29udHJvbF09XCIkYW55KHRoaXMuaW5wdXQuZm9ybUNvbnRyb2wpXCJcbiAgICAgICAgW3JlYWRvbmx5XT1cInRoaXMuaW5wdXQuZGlzYWJsZWRcIlxuICAgICAgICBbdHlwZV09XCJ0aGlzLmlzUGFzc3dvcmQgJiYgIXRoaXMuaGlkZSA/ICd0ZXh0JyA6IHRoaXMuaW5wdXQudHlwZVwiXG4gICAgICAgIChrZXl1cCk9XCJ0aGlzLm9uQ2hhbmdlKGJveC52YWx1ZSlcIlxuICAgICAgLz5cbiAgICAgIEBpZiAodGhpcy5pc1Bhc3N3b3JkKSB7XG4gICAgICAgIDxzcGFuIGNsYXNzPVwidG9nZ2xlLWljb25cIiAoY2xpY2spPVwidGhpcy5oaWRlID0gIXRoaXMuaGlkZVwiPlxuICAgICAgICAgIDx0YS1mb250LWljb24gbmFtZT1cImV5ZVwiPjwvdGEtZm9udC1pY29uPlxuICAgICAgICA8L3NwYW4+XG4gICAgICB9XG4gICAgPC9kaXY+XG4gIDwvdGEtaW5wdXQtbGF5b3V0PlxufVxuIl19