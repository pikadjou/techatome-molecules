import { NgIf } from '@angular/common';
import { Component, Input } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { FontIconComponent } from '@ta/icons';
import { TaAbstractInputComponent } from '../../abstract.component';
import { InputLayoutComponent } from '../../input-layout/input-layout.component';
import { TextareaComponent } from '../textarea/textarea.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
export class TextBoxComponent extends TaAbstractInputComponent {
    get isPassword() {
        return this.input.type === 'password';
    }
    constructor() {
        super();
        this.space = true;
        this.hide = false;
    }
    ngOnInit() {
        super.ngOnInit();
        if (this.isPassword) {
            this.hide = true;
        }
    }
    iconClicked() {
        if (this.input.iconClicked)
            this.input.iconClicked();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: TextBoxComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: TextBoxComponent, isStandalone: true, selector: "ta-input-textbox", inputs: { space: "space" }, usesInheritance: true, ngImport: i0, template: "@if (this.input.type === 'textarea') {\n  <ta-input-textarea [input]=\"this.input\" [matcher]=\"this.matcher\"></ta-input-textarea>\n} @else {\n  <ta-input-layout [input]=\"this.input\">\n    <div>\n      <input\n        #box\n        #focusedElement\n        class=\"form-control\"\n        [value]=\"this.input.value\"\n        [formControl]=\"$any(this.input.formControl)\"\n        [readonly]=\"this.input.disabled\"\n        [type]=\"this.isPassword && !this.hide ? 'text' : this.input.type\"\n        (keyup)=\"this.onChange(box.value)\"\n      />\n      @if (this.isPassword) {\n        <span class=\"toggle-icon\" (click)=\"this.hide = !this.hide\">\n          <ta-font-icon name=\"eye\"></ta-font-icon>\n        </span>\n      }\n    </div>\n  </ta-input-layout>\n}\n", styles: [".form-control{box-sizing:border-box}\n"], dependencies: [{ kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: TextareaComponent, selector: "ta-input-textarea" }, { kind: "component", type: InputLayoutComponent, selector: "ta-input-layout", inputs: ["input", "width", "height"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: TextBoxComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-input-textbox', standalone: true, imports: [NgIf, FontIconComponent, ReactiveFormsModule, TextareaComponent, InputLayoutComponent], template: "@if (this.input.type === 'textarea') {\n  <ta-input-textarea [input]=\"this.input\" [matcher]=\"this.matcher\"></ta-input-textarea>\n} @else {\n  <ta-input-layout [input]=\"this.input\">\n    <div>\n      <input\n        #box\n        #focusedElement\n        class=\"form-control\"\n        [value]=\"this.input.value\"\n        [formControl]=\"$any(this.input.formControl)\"\n        [readonly]=\"this.input.disabled\"\n        [type]=\"this.isPassword && !this.hide ? 'text' : this.input.type\"\n        (keyup)=\"this.onChange(box.value)\"\n      />\n      @if (this.isPassword) {\n        <span class=\"toggle-icon\" (click)=\"this.hide = !this.hide\">\n          <ta-font-icon name=\"eye\"></ta-font-icon>\n        </span>\n      }\n    </div>\n  </ta-input-layout>\n}\n", styles: [".form-control{box-sizing:border-box}\n"] }]
        }], ctorParameters: () => [], propDecorators: { space: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dC1ib3guY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL2lucHV0L3RleHRib3gvdGV4dC1ib3guY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL2lucHV0L3RleHRib3gvdGV4dC1ib3guY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBR3JELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUU5QyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUNqRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQzs7O0FBU25FLE1BQU0sT0FBTyxnQkFBaUIsU0FBUSx3QkFBc0M7SUFNMUUsSUFBSSxVQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksS0FBSyxVQUFVLENBQUM7SUFDeEMsQ0FBQztJQUVEO1FBQ0UsS0FBSyxFQUFFLENBQUM7UUFUVixVQUFLLEdBQUcsSUFBSSxDQUFDO1FBRU4sU0FBSSxHQUFHLEtBQUssQ0FBQztJQVFwQixDQUFDO0lBRVEsUUFBUTtRQUNmLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNqQixJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUNwQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNuQixDQUFDO0lBQ0gsQ0FBQztJQUVNLFdBQVc7UUFDaEIsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVc7WUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3ZELENBQUM7K0dBdkJVLGdCQUFnQjttR0FBaEIsZ0JBQWdCLCtIQ2xCN0IsMHdCQXVCQSxnR0RQa0IsaUJBQWlCLGtGQUFFLG1CQUFtQiwwa0JBQUUsaUJBQWlCLDhEQUFFLG9CQUFvQjs7NEZBRXBGLGdCQUFnQjtrQkFQNUIsU0FBUzsrQkFDRSxrQkFBa0IsY0FHaEIsSUFBSSxXQUNQLENBQUMsSUFBSSxFQUFFLGlCQUFpQixFQUFFLG1CQUFtQixFQUFFLGlCQUFpQixFQUFFLG9CQUFvQixDQUFDO3dEQUloRyxLQUFLO3NCQURKLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ0lmIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuaW1wb3J0IHsgSW5wdXRUZXh0Qm94IH0gZnJvbSAnQHRhL2Zvcm0tbW9kZWwnO1xuaW1wb3J0IHsgRm9udEljb25Db21wb25lbnQgfSBmcm9tICdAdGEvaWNvbnMnO1xuXG5pbXBvcnQgeyBUYUFic3RyYWN0SW5wdXRDb21wb25lbnQgfSBmcm9tICcuLi8uLi9hYnN0cmFjdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgSW5wdXRMYXlvdXRDb21wb25lbnQgfSBmcm9tICcuLi8uLi9pbnB1dC1sYXlvdXQvaW5wdXQtbGF5b3V0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUZXh0YXJlYUNvbXBvbmVudCB9IGZyb20gJy4uL3RleHRhcmVhL3RleHRhcmVhLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhLWlucHV0LXRleHRib3gnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGV4dC1ib3guY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi90ZXh0LWJveC5jb21wb25lbnQuc2NzcyddLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbTmdJZiwgRm9udEljb25Db21wb25lbnQsIFJlYWN0aXZlRm9ybXNNb2R1bGUsIFRleHRhcmVhQ29tcG9uZW50LCBJbnB1dExheW91dENvbXBvbmVudF0sXG59KVxuZXhwb3J0IGNsYXNzIFRleHRCb3hDb21wb25lbnQgZXh0ZW5kcyBUYUFic3RyYWN0SW5wdXRDb21wb25lbnQ8SW5wdXRUZXh0Qm94PiBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpXG4gIHNwYWNlID0gdHJ1ZTtcblxuICBwdWJsaWMgaGlkZSA9IGZhbHNlO1xuXG4gIGdldCBpc1Bhc3N3b3JkKCkge1xuICAgIHJldHVybiB0aGlzLmlucHV0LnR5cGUgPT09ICdwYXNzd29yZCc7XG4gIH1cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgb3ZlcnJpZGUgbmdPbkluaXQoKSB7XG4gICAgc3VwZXIubmdPbkluaXQoKTtcbiAgICBpZiAodGhpcy5pc1Bhc3N3b3JkKSB7XG4gICAgICB0aGlzLmhpZGUgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBpY29uQ2xpY2tlZCgpIHtcbiAgICBpZiAodGhpcy5pbnB1dC5pY29uQ2xpY2tlZCkgdGhpcy5pbnB1dC5pY29uQ2xpY2tlZCgpO1xuICB9XG59XG4iLCJAaWYgKHRoaXMuaW5wdXQudHlwZSA9PT0gJ3RleHRhcmVhJykge1xuICA8dGEtaW5wdXQtdGV4dGFyZWEgW2lucHV0XT1cInRoaXMuaW5wdXRcIiBbbWF0Y2hlcl09XCJ0aGlzLm1hdGNoZXJcIj48L3RhLWlucHV0LXRleHRhcmVhPlxufSBAZWxzZSB7XG4gIDx0YS1pbnB1dC1sYXlvdXQgW2lucHV0XT1cInRoaXMuaW5wdXRcIj5cbiAgICA8ZGl2PlxuICAgICAgPGlucHV0XG4gICAgICAgICNib3hcbiAgICAgICAgI2ZvY3VzZWRFbGVtZW50XG4gICAgICAgIGNsYXNzPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgW3ZhbHVlXT1cInRoaXMuaW5wdXQudmFsdWVcIlxuICAgICAgICBbZm9ybUNvbnRyb2xdPVwiJGFueSh0aGlzLmlucHV0LmZvcm1Db250cm9sKVwiXG4gICAgICAgIFtyZWFkb25seV09XCJ0aGlzLmlucHV0LmRpc2FibGVkXCJcbiAgICAgICAgW3R5cGVdPVwidGhpcy5pc1Bhc3N3b3JkICYmICF0aGlzLmhpZGUgPyAndGV4dCcgOiB0aGlzLmlucHV0LnR5cGVcIlxuICAgICAgICAoa2V5dXApPVwidGhpcy5vbkNoYW5nZShib3gudmFsdWUpXCJcbiAgICAgIC8+XG4gICAgICBAaWYgKHRoaXMuaXNQYXNzd29yZCkge1xuICAgICAgICA8c3BhbiBjbGFzcz1cInRvZ2dsZS1pY29uXCIgKGNsaWNrKT1cInRoaXMuaGlkZSA9ICF0aGlzLmhpZGVcIj5cbiAgICAgICAgICA8dGEtZm9udC1pY29uIG5hbWU9XCJleWVcIj48L3RhLWZvbnQtaWNvbj5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgfVxuICAgIDwvZGl2PlxuICA8L3RhLWlucHV0LWxheW91dD5cbn1cbiJdfQ==