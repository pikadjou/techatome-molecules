import { Component, Input, ViewChild } from '@angular/core';
import { FontIconComponent } from '@ta/icons';
import { TranslatePipe } from '@ta/translation';
import { LabelComponent, TaOverlayPanelComponent } from '@ta/ui';
import { TaAbstractInputComponent } from '../../abstract.component';
import { InputLayoutComponent } from '../../input-layout/input-layout.component';
import * as i0 from "@angular/core";
export class DropdownComponent extends TaAbstractInputComponent {
    constructor() {
        super(...arguments);
        this.space = true;
        this.optionsList = [];
        this.filteredOptions = [];
    }
    ngOnInit() {
        super.ngOnInit();
        this._registerSubscription(this.input.options$.subscribe(options => {
            this.optionsList = options;
            this.filteredOptions = this.optionsList;
        }));
    }
    getOptionName(id) {
        const found = this.optionsList.find(opt => opt.id === id);
        return found ? found.name : '';
    }
    onMenuSelect(selectedId) {
        if (this.input.multiple) {
            let currentValue = this.input.value || [];
            if (currentValue.includes(selectedId)) {
                currentValue = currentValue.filter((v) => v !== selectedId);
            }
            else {
                currentValue = [...currentValue, selectedId];
            }
            this.input.value = currentValue;
        }
        else {
            this.input.value = selectedId;
            this.overlayPanelRef.close();
        }
    }
    onOverlayClosed() {
        this.filteredOptions = this.optionsList;
    }
    isSelected(id) {
        const currentValue = this.input.value;
        return this.input.multiple ? Array.isArray(currentValue) && currentValue.includes(id) : currentValue === id;
    }
    selectOption(id, event) {
        this.onMenuSelect(id);
    }
    onSearchChange(event) {
        if (!this.input.withSearch)
            return;
        const target = event.target;
        const searchTerm = target.value.trim();
        this.filteredOptions =
            searchTerm.length >= 0
                ? this.optionsList.filter(opt => opt.name.toLowerCase().includes(searchTerm.toLowerCase()))
                : this.optionsList;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: DropdownComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: DropdownComponent, isStandalone: true, selector: "ta-input-dropdown", inputs: { space: "space" }, viewQueries: [{ propertyName: "overlayPanelRef", first: true, predicate: TaOverlayPanelComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: "@if (this.input) {\n  <ta-overlay-panel [panelConfig]=\"{ matchTriggerWidth: true }\" (closed)=\"this.onOverlayClosed()\">\n    <ng-template #panelTrigger>\n      <ta-input-layout [input]=\"this.input\">\n        <div #focusedElement class=\"custom-dropdown-button form-control\" [class.disabled]=\"this.input.disabled\">\n          <span class=\"selected-value align-center g-space-xs\">\n            @if (!this.input.multiple) {\n              @if (this.input.value) {\n                <span>\n                  {{ this.getOptionName(this.input.value) | translate }}\n                </span>\n              } @else {\n                {{ 'form.input.dropdown.novalue' | translate }}\n              }\n            } @else if (this.input.multiple) {\n              @for (value of this.input.value; track value) {\n                <ta-label size=\"sm\" class=\"d-flex\">\n                  {{ this.getOptionName(value) | translate }}\n                </ta-label>\n              }\n            }\n          </span>\n          <ta-font-icon name=\"arrow-big-bottom\" type=\"sm\"></ta-font-icon>\n        </div>\n      </ta-input-layout>\n    </ng-template>\n\n    <ng-template #panelContent>\n      <div class=\"custom-menu\">\n        @if (this.input.withSearch) {\n          <input class=\"input-search\" type=\"search\" placeholder=\"Rechercher...\" (input)=\"this.onSearchChange($event)\" />\n        }\n\n        @for (opt of this.filteredOptions; track opt.id) {\n          <button\n            [attr.cdkMenuItem]=\"!this.input.multiple ? '' : null\"\n            (click)=\"this.selectOption(opt.id, $event)\"\n            [class.selected]=\"this.isSelected(opt.id)\"\n            [class.disabled]=\"opt.disabled\"\n            class=\"dropdown-option space-between\"\n          >\n            {{ opt.name | translate }}\n            @if (this.isSelected(opt.id)) {\n              <ta-font-icon class=\"checkmark\" name=\"check-line\"></ta-font-icon>\n            }\n          </button>\n        }\n      </div>\n    </ng-template>\n  </ta-overlay-panel>\n}\n", styles: [".custom-dropdown-button{text-align:left;display:flex;justify-content:space-between;align-items:center}.custom-dropdown-button.disabled{border-color:var(--ta-neutral-300);pointer-events:none}button .selected-value{flex:1;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.custom-menu{padding:0}.input-search{width:100%;display:flex;flex-direction:column;padding:10px;border:none;outline:none}.input-search:focus{border:none;outline:none;box-shadow:none}.dropdown-option{display:flex;align-items:center;padding:var(--ta-space-sm) var(--ta-space-md);text-align:left;border:none;background:transparent;cursor:pointer;width:100%}.dropdown-option .checkmark{margin-left:var(--ta-space-sm);color:var(--ta-border-brand)}.dropdown-option:hover{background-color:var(--ta-neutral-100)}.dropdown-option.disabled{color:var(--ta-neutral-500);cursor:not-allowed}\n"], dependencies: [{ kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "component", type: TaOverlayPanelComponent, selector: "ta-overlay-panel", inputs: ["panelConfig", "position"], outputs: ["closed"] }, { kind: "component", type: LabelComponent, selector: "ta-label", inputs: ["size", "type"] }, { kind: "pipe", type: TranslatePipe, name: "translate" }, { kind: "component", type: InputLayoutComponent, selector: "ta-input-layout", inputs: ["input", "width", "height"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: DropdownComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-input-dropdown', standalone: true, imports: [FontIconComponent, TaOverlayPanelComponent, LabelComponent, TranslatePipe, InputLayoutComponent], template: "@if (this.input) {\n  <ta-overlay-panel [panelConfig]=\"{ matchTriggerWidth: true }\" (closed)=\"this.onOverlayClosed()\">\n    <ng-template #panelTrigger>\n      <ta-input-layout [input]=\"this.input\">\n        <div #focusedElement class=\"custom-dropdown-button form-control\" [class.disabled]=\"this.input.disabled\">\n          <span class=\"selected-value align-center g-space-xs\">\n            @if (!this.input.multiple) {\n              @if (this.input.value) {\n                <span>\n                  {{ this.getOptionName(this.input.value) | translate }}\n                </span>\n              } @else {\n                {{ 'form.input.dropdown.novalue' | translate }}\n              }\n            } @else if (this.input.multiple) {\n              @for (value of this.input.value; track value) {\n                <ta-label size=\"sm\" class=\"d-flex\">\n                  {{ this.getOptionName(value) | translate }}\n                </ta-label>\n              }\n            }\n          </span>\n          <ta-font-icon name=\"arrow-big-bottom\" type=\"sm\"></ta-font-icon>\n        </div>\n      </ta-input-layout>\n    </ng-template>\n\n    <ng-template #panelContent>\n      <div class=\"custom-menu\">\n        @if (this.input.withSearch) {\n          <input class=\"input-search\" type=\"search\" placeholder=\"Rechercher...\" (input)=\"this.onSearchChange($event)\" />\n        }\n\n        @for (opt of this.filteredOptions; track opt.id) {\n          <button\n            [attr.cdkMenuItem]=\"!this.input.multiple ? '' : null\"\n            (click)=\"this.selectOption(opt.id, $event)\"\n            [class.selected]=\"this.isSelected(opt.id)\"\n            [class.disabled]=\"opt.disabled\"\n            class=\"dropdown-option space-between\"\n          >\n            {{ opt.name | translate }}\n            @if (this.isSelected(opt.id)) {\n              <ta-font-icon class=\"checkmark\" name=\"check-line\"></ta-font-icon>\n            }\n          </button>\n        }\n      </div>\n    </ng-template>\n  </ta-overlay-panel>\n}\n", styles: [".custom-dropdown-button{text-align:left;display:flex;justify-content:space-between;align-items:center}.custom-dropdown-button.disabled{border-color:var(--ta-neutral-300);pointer-events:none}button .selected-value{flex:1;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.custom-menu{padding:0}.input-search{width:100%;display:flex;flex-direction:column;padding:10px;border:none;outline:none}.input-search:focus{border:none;outline:none;box-shadow:none}.dropdown-option{display:flex;align-items:center;padding:var(--ta-space-sm) var(--ta-space-md);text-align:left;border:none;background:transparent;cursor:pointer;width:100%}.dropdown-option .checkmark{margin-left:var(--ta-space-sm);color:var(--ta-border-brand)}.dropdown-option:hover{background-color:var(--ta-neutral-100)}.dropdown-option.disabled{color:var(--ta-neutral-500);cursor:not-allowed}\n"] }]
        }], propDecorators: { space: [{
                type: Input
            }], overlayPanelRef: [{
                type: ViewChild,
                args: [TaOverlayPanelComponent]
            }] } });
//# sourceMappingURL=data:application/json;base64,