import { NgClass } from '@angular/common';
import { Component, inject } from '@angular/core';
import { combineLatest } from 'rxjs';
import { FontIconComponent } from '@ta/icons';
import { TaDocumentsService } from '@ta/services';
import { ButtonComponent } from '@ta/ui';
import { isNonNullable, pickImages } from '@ta/utils';
import { TaAbstractInputComponent } from '../../abstract.component';
import { FormLabelComponent } from '../../label/label.component';
import * as i0 from "@angular/core";
export class InputImagesComponent extends TaAbstractInputComponent {
    constructor() {
        super();
        this._documentsService = inject(TaDocumentsService);
    }
    async openDialog() {
        const images = await pickImages();
        if (images.length > 0) {
            combineLatest(images
                .map(image => image.file)
                .filter(isNonNullable)
                .map(file => this._documentsService.addDocument$({ file: file }))).subscribe({
                next: documents => {
                    this.input.value = [...(this.input.value || []), ...documents];
                },
            });
        }
    }
    onFileDeleted(fileData) {
        if (!this.input.value) {
            return;
        }
        this.input.value = this.input.value.filter(doc => doc.url !== fileData.url);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: InputImagesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: InputImagesComponent, isStandalone: true, selector: "ta-input-images", usesInheritance: true, ngImport: i0, template: "<div class=\"row g-0 align-items-center mb-space-2\">\n  <div class=\"col\">\n    <ta-form-label [input]=\"this.input\"></ta-form-label>\n  </div>\n</div>\n\n<div class=\"flex-column g-space-xs\">\n  @if (this.input.value?.length ?? 0 > 0) {\n    <div class=\"grid g-space-md\">\n      @for(value of this.input.value; track value.id) {\n        <div class=\"image-preview-wrapper one-fourth\">\n          <img [src]=\"value.url\" class=\"image-preview\" />\n          <div class=\"image-remove\">\n            <ta-button\n              type=\"danger\"\n              (action)=\"this.onFileDeleted(value)\"\n              icon=\"delete\"\n            >\n            </ta-button>\n          </div>\n        </div>\n      }\n    </div>\n  }\n  <div class=\"flex-start\">\n      <ta-button\n        type=\"tertiary\"\n        (action)=\"this.openDialog()\"\n        icon=\"add_a_photo\"\n      >\n        Ajouter\n      </ta-button>\n  </div>\n</div>\n\n", styles: [".image-preview-wrapper{position:relative;background-color:var(--ta-surface-secondary)}.image-preview-wrapper img{border-radius:var(--ta-radius-rounded);aspect-ratio:3/4;overflow:hidden}.image-remove{padding:var(--ta-spacing-sm)}\n"], dependencies: [{ kind: "component", type: FormLabelComponent, selector: "ta-form-label", inputs: ["input", "withMarginBottom"] }, { kind: "component", type: ButtonComponent, selector: "ta-button", inputs: ["state", "type", "size", "icon", "options", "stopPropagationActivation"], outputs: ["action"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: InputImagesComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-input-images', standalone: true, imports: [NgClass, FormLabelComponent, ButtonComponent, FontIconComponent], template: "<div class=\"row g-0 align-items-center mb-space-2\">\n  <div class=\"col\">\n    <ta-form-label [input]=\"this.input\"></ta-form-label>\n  </div>\n</div>\n\n<div class=\"flex-column g-space-xs\">\n  @if (this.input.value?.length ?? 0 > 0) {\n    <div class=\"grid g-space-md\">\n      @for(value of this.input.value; track value.id) {\n        <div class=\"image-preview-wrapper one-fourth\">\n          <img [src]=\"value.url\" class=\"image-preview\" />\n          <div class=\"image-remove\">\n            <ta-button\n              type=\"danger\"\n              (action)=\"this.onFileDeleted(value)\"\n              icon=\"delete\"\n            >\n            </ta-button>\n          </div>\n        </div>\n      }\n    </div>\n  }\n  <div class=\"flex-start\">\n      <ta-button\n        type=\"tertiary\"\n        (action)=\"this.openDialog()\"\n        icon=\"add_a_photo\"\n      >\n        Ajouter\n      </ta-button>\n  </div>\n</div>\n\n", styles: [".image-preview-wrapper{position:relative;background-color:var(--ta-surface-secondary)}.image-preview-wrapper img{border-radius:var(--ta-radius-rounded);aspect-ratio:3/4;overflow:hidden}.image-remove{padding:var(--ta-spacing-sm)}\n"] }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtaW1hZ2VzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9pbnB1dC9pbWFnZXMvaW5wdXQtaW1hZ2VzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9pbnB1dC9pbWFnZXMvaW5wdXQtaW1hZ2VzLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMxQyxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBR3JDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUM5QyxPQUFPLEVBQWUsa0JBQWtCLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDL0QsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUN6QyxPQUFPLEVBQUUsYUFBYSxFQUFFLFVBQVUsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUV0RCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQzs7QUFTakUsTUFBTSxPQUFPLG9CQUFxQixTQUFRLHdCQUFxQztJQUc3RTtRQUNFLEtBQUssRUFBRSxDQUFDO1FBSEYsc0JBQWlCLEdBQUcsTUFBTSxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFJdkQsQ0FBQztJQUVNLEtBQUssQ0FBQyxVQUFVO1FBQ3JCLE1BQU0sTUFBTSxHQUFHLE1BQU0sVUFBVSxFQUFFLENBQUM7UUFFbEMsSUFBSSxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxDQUFDO1lBQ3RCLGFBQWEsQ0FDWCxNQUFNO2lCQUNILEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7aUJBQ3hCLE1BQU0sQ0FBQyxhQUFhLENBQUM7aUJBQ3JCLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxZQUFZLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUNwRSxDQUFDLFNBQVMsQ0FBQztnQkFDVixJQUFJLEVBQUUsU0FBUyxDQUFDLEVBQUU7b0JBQ2hCLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEdBQUcsU0FBUyxDQUFDLENBQUM7Z0JBQ2pFLENBQUM7YUFDRixDQUFDLENBQUM7UUFDTCxDQUFDO0lBQ0gsQ0FBQztJQUVNLGFBQWEsQ0FBQyxRQUFxQjtRQUN4QyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUN0QixPQUFPO1FBQ1QsQ0FBQztRQUNELElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzlFLENBQUM7K0dBN0JVLG9CQUFvQjttR0FBcEIsb0JBQW9CLGtHQ3JCakMsdzdCQW1DQSxnU0RoQnFCLGtCQUFrQixpR0FBRSxlQUFlOzs0RkFFM0Msb0JBQW9CO2tCQVBoQyxTQUFTOytCQUNFLGlCQUFpQixjQUdmLElBQUksV0FDUCxDQUFDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxlQUFlLEVBQUUsaUJBQWlCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ0NsYXNzIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBpbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgY29tYmluZUxhdGVzdCB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBJbnB1dEltYWdlcyB9IGZyb20gJ0B0YS9mb3JtLW1vZGVsJztcbmltcG9ydCB7IEZvbnRJY29uQ29tcG9uZW50IH0gZnJvbSAnQHRhL2ljb25zJztcbmltcG9ydCB7IERvY3VtZW50RHRvLCBUYURvY3VtZW50c1NlcnZpY2UgfSBmcm9tICdAdGEvc2VydmljZXMnO1xuaW1wb3J0IHsgQnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnQHRhL3VpJztcbmltcG9ydCB7IGlzTm9uTnVsbGFibGUsIHBpY2tJbWFnZXMgfSBmcm9tICdAdGEvdXRpbHMnO1xuXG5pbXBvcnQgeyBUYUFic3RyYWN0SW5wdXRDb21wb25lbnQgfSBmcm9tICcuLi8uLi9hYnN0cmFjdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgRm9ybUxhYmVsQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vbGFiZWwvbGFiZWwuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGEtaW5wdXQtaW1hZ2VzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2lucHV0LWltYWdlcy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2lucHV0LWltYWdlcy5jb21wb25lbnQuc2NzcyddLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbTmdDbGFzcywgRm9ybUxhYmVsQ29tcG9uZW50LCBCdXR0b25Db21wb25lbnQsIEZvbnRJY29uQ29tcG9uZW50XSxcbn0pXG5leHBvcnQgY2xhc3MgSW5wdXRJbWFnZXNDb21wb25lbnQgZXh0ZW5kcyBUYUFic3RyYWN0SW5wdXRDb21wb25lbnQ8SW5wdXRJbWFnZXM+IGltcGxlbWVudHMgT25Jbml0IHtcbiAgcHJpdmF0ZSBfZG9jdW1lbnRzU2VydmljZSA9IGluamVjdChUYURvY3VtZW50c1NlcnZpY2UpO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBwdWJsaWMgYXN5bmMgb3BlbkRpYWxvZygpIHtcbiAgICBjb25zdCBpbWFnZXMgPSBhd2FpdCBwaWNrSW1hZ2VzKCk7XG5cbiAgICBpZiAoaW1hZ2VzLmxlbmd0aCA+IDApIHtcbiAgICAgIGNvbWJpbmVMYXRlc3QoXG4gICAgICAgIGltYWdlc1xuICAgICAgICAgIC5tYXAoaW1hZ2UgPT4gaW1hZ2UuZmlsZSlcbiAgICAgICAgICAuZmlsdGVyKGlzTm9uTnVsbGFibGUpXG4gICAgICAgICAgLm1hcChmaWxlID0+IHRoaXMuX2RvY3VtZW50c1NlcnZpY2UuYWRkRG9jdW1lbnQkKHsgZmlsZTogZmlsZSB9KSlcbiAgICAgICkuc3Vic2NyaWJlKHtcbiAgICAgICAgbmV4dDogZG9jdW1lbnRzID0+IHtcbiAgICAgICAgICB0aGlzLmlucHV0LnZhbHVlID0gWy4uLih0aGlzLmlucHV0LnZhbHVlIHx8IFtdKSwgLi4uZG9jdW1lbnRzXTtcbiAgICAgICAgfSxcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBvbkZpbGVEZWxldGVkKGZpbGVEYXRhOiBEb2N1bWVudER0bykge1xuICAgIGlmICghdGhpcy5pbnB1dC52YWx1ZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmlucHV0LnZhbHVlID0gdGhpcy5pbnB1dC52YWx1ZS5maWx0ZXIoZG9jID0+IGRvYy51cmwgIT09IGZpbGVEYXRhLnVybCk7XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJyb3cgZy0wIGFsaWduLWl0ZW1zLWNlbnRlciBtYi1zcGFjZS0yXCI+XG4gIDxkaXYgY2xhc3M9XCJjb2xcIj5cbiAgICA8dGEtZm9ybS1sYWJlbCBbaW5wdXRdPVwidGhpcy5pbnB1dFwiPjwvdGEtZm9ybS1sYWJlbD5cbiAgPC9kaXY+XG48L2Rpdj5cblxuPGRpdiBjbGFzcz1cImZsZXgtY29sdW1uIGctc3BhY2UteHNcIj5cbiAgQGlmICh0aGlzLmlucHV0LnZhbHVlPy5sZW5ndGggPz8gMCA+IDApIHtcbiAgICA8ZGl2IGNsYXNzPVwiZ3JpZCBnLXNwYWNlLW1kXCI+XG4gICAgICBAZm9yKHZhbHVlIG9mIHRoaXMuaW5wdXQudmFsdWU7IHRyYWNrIHZhbHVlLmlkKSB7XG4gICAgICAgIDxkaXYgY2xhc3M9XCJpbWFnZS1wcmV2aWV3LXdyYXBwZXIgb25lLWZvdXJ0aFwiPlxuICAgICAgICAgIDxpbWcgW3NyY109XCJ2YWx1ZS51cmxcIiBjbGFzcz1cImltYWdlLXByZXZpZXdcIiAvPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJpbWFnZS1yZW1vdmVcIj5cbiAgICAgICAgICAgIDx0YS1idXR0b25cbiAgICAgICAgICAgICAgdHlwZT1cImRhbmdlclwiXG4gICAgICAgICAgICAgIChhY3Rpb24pPVwidGhpcy5vbkZpbGVEZWxldGVkKHZhbHVlKVwiXG4gICAgICAgICAgICAgIGljb249XCJkZWxldGVcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgPC90YS1idXR0b24+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgfVxuICAgIDwvZGl2PlxuICB9XG4gIDxkaXYgY2xhc3M9XCJmbGV4LXN0YXJ0XCI+XG4gICAgICA8dGEtYnV0dG9uXG4gICAgICAgIHR5cGU9XCJ0ZXJ0aWFyeVwiXG4gICAgICAgIChhY3Rpb24pPVwidGhpcy5vcGVuRGlhbG9nKClcIlxuICAgICAgICBpY29uPVwiYWRkX2FfcGhvdG9cIlxuICAgICAgPlxuICAgICAgICBBam91dGVyXG4gICAgICA8L3RhLWJ1dHRvbj5cbiAgPC9kaXY+XG48L2Rpdj5cblxuIl19