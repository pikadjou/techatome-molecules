{"version":3,"file":"ta-form-basic.mjs","sources":["../../src/lib/components/input/dynamic/dynamic.component.ts","../../src/lib/components/input/dynamic/dynamic.component.html","../../src/lib/components/input/panel/panel.component.ts","../../src/lib/components/input/panel/panel.component.html","../../src/lib/components/input/translation/translation.component.ts","../../src/lib/components/input/translation/translation.component.html","../../src/lib/components/inputs/inputs.component.ts","../../src/lib/components/inputs/inputs.component.html","../../src/lib/components/form.component.ts","../../src/lib/components/form.component.html","../../src/lib/components/edit-field/edit-field.component.ts","../../src/lib/components/edit-field/edit-field.component.html","../../src/lib/translation.service.ts","../../src/lib/form.module.ts","../../src/public-api.ts","../../src/ta-form-basic.ts"],"sourcesContent":["import { NgIf, NgFor, NgClass, NgTemplateOutlet } from '@angular/common';\nimport { LocalIconComponent } from '@ta/icons';\nimport { Component, Input, TemplateRef } from '@angular/core';\n\nimport { InputBase, InputDynamic } from '@ta/form-model';\nimport { TranslatePipe } from '@ta/translation';\nimport { ButtonComponent } from '@ta/ui';\nimport { TaBaseComponent } from '@ta/utils';\n\n@Component({\nselector: 'ta-input-dynamic',\n  templateUrl: './dynamic.component.html',\n  styleUrls: ['./dynamic.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgFor, NgClass, NgTemplateOutlet, LocalIconComponent, ButtonComponent, TranslatePipe],\n})\nexport class DynamicComponent extends TaBaseComponent {\n  @Input()\n  public inputsTemplate!: TemplateRef<any>;\n\n  @Input()\n  input!: InputDynamic;\n\n  constructor() {\n    super();\n  }\n\n  public add = () => {\n    this.input.add();\n  };\n\n  public canRemove(index: string): boolean {\n    return !isNaN(Number(index));\n  }\n\n  public remove = (index: string) => {\n    this.input.remove(index);\n  };\n\n  public getKeys(): string[] {\n    return Object.keys(this.input.inputsGroup);\n  }\n\n  public getInputs(key: string) {\n    return this.input.inputsGroup[key];\n  }\n\n  public trackByFn(_: number, key: string) {\n    return key;\n  }\n\n  public trackInputByFn(_: number, input: InputBase<any>) {\n    return input.key;\n  }\n}\n","<div>\n  <div class=\"header\">\n    <h4>{{ input.label }}</h4>\n  </div>\n\n  @for (key of getKeys(); track trackByFn($index, key)) {\n    <div>\n      @if (this.canRemove(key)) {\n        <div class=\"remove-action\">\n          <ta-button class=\"remove-action\" [style]=\"'danger'\" (action)=\"remove(key)\">\n            <ta-local-icon [type]=\"this.icon.DeleteLight\" size=\"xs\"></ta-local-icon>\n          </ta-button>\n        </div>\n      }\n\n      @for (input of this.getInputs(key); track trackInputByFn($index, input)) {\n        @if (input) {\n          <div [ngClass]=\"input.class\">\n            <ng-container\n              [ngTemplateOutlet]=\"this.inputsTemplate\"\n              [ngTemplateOutletContext]=\"{\n                input: input,\n              }\"\n            >\n            </ng-container>\n          </div>\n        }\n      }\n    </div>\n  }\n  <ta-button (action)=\"add()\">{{ 'form.dynamic.add' | translate }}</ta-button>\n</div>\n","import { AsyncPipe, NgClass, NgTemplateOutlet } from '@angular/common';\nimport { Component, Input, TemplateRef } from '@angular/core';\n\nimport { InputPanel } from '@ta/form-model';\nimport { TranslatePipe } from '@ta/translation';\nimport { TitleComponent } from '@ta/ui';\nimport { TaBaseComponent } from '@ta/utils';\n\n@Component({\n  selector: 'ta-form-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.scss'],\n  standalone: true,\n  imports: [NgClass, AsyncPipe, NgTemplateOutlet, TranslatePipe, TitleComponent],\n})\nexport class PanelComponent extends TaBaseComponent {\n  @Input()\n  public inputsTemplate!: TemplateRef<any>;\n\n  @Input() panel!: InputPanel;\n\n  constructor() {\n    super();\n  }\n}\n","<div [ngClass]=\"this.panel.containerClass\">\n  @if (this.panel.label) {\n    <ta-title [level]=\"2\" class=\"panel-title\">{{ this.panel.label | translate }}</ta-title>\n  }\n\n  <div [ngClass]=\"this.panel.contentClass\">\n    @for (input of this.panel.children; track this.trackByKey($index, input)) {\n      @if (input) {\n        <div\n          [ngClass]=\"input.class\"\n          [style.display]=\"(input.visible$ | async) ? 'block' : 'none'\"\n          class=\"mb-space-sm\"\n        >\n          <ng-container\n            [ngTemplateOutlet]=\"this.inputsTemplate\"\n            [ngTemplateOutletContext]=\"{\n              input: input\n            }\"\n          >\n          </ng-container>\n        </div>\n      }\n    }\n  </div>\n</div>\n","import { NgIf, NgFor, NgClass, NgTemplateOutlet } from '@angular/common';\nimport { FontIconComponent } from '@ta/icons';\nimport { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { InputBase, InputTranslation } from '@ta/form-model';\nimport { Menu, MenuBase, ToggleNavigationComponent } from '@ta/menu';\nimport { TranslatePipe } from '@ta/translation';\nimport { TitleComponent, LinkComponent, ButtonComponent } from '@ta/ui';\nimport { TaBaseComponent, Culture, extractEnum } from '@ta/utils';\n\n@Component({\nselector: 'ta-input-translation',\n  templateUrl: './translation.component.html',\n  styleUrls: ['./translation.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgFor, NgClass, NgTemplateOutlet, FontIconComponent, MatMenuModule, ToggleNavigationComponent, TitleComponent, LinkComponent, ButtonComponent, TranslatePipe],\n})\nexport class InputTranslationComponent extends TaBaseComponent implements OnInit {\n  @Input()\n  input!: InputTranslation;\n  @Input()\n  inputsTemplate!: TemplateRef<any>;\n\n  public cultureList = extractEnum(Culture, true);\n  public cultureMenu: Menu | null = null;\n\n  public currentCulture: string = Culture[Culture.FR_BE];\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this._registerSubscription(\n      this.input.listChanged$.subscribe({\n        next: () => this._renderMenu(),\n      })\n    );\n    this._renderMenu();\n  }\n\n  public changeSelection(culture: string) {\n    this.currentCulture = culture;\n  }\n\n  public add(culture: string) {\n    this.input.add(culture);\n    this.changeSelection(culture);\n  }\n\n  public remove(culture: string) {\n    this.input.remove(culture);\n  }\n\n  public hasKey(culture: string) {\n    return this.getKeys().includes(culture);\n  }\n  public getKeys() {\n    return Object.keys(this.input.inputsGroup);\n  }\n\n  public getInputs(culture: string) {\n    return this.input.inputsGroup[culture];\n  }\n\n  public trackByFn(_: number, key: string) {\n    return key;\n  }\n\n  public trackInputByFn(_: number, input: InputBase<any>) {\n    return input.key;\n  }\n\n  private _renderMenu() {\n    this.cultureMenu = new Menu({\n      elements: this.getKeys().map(\n        cul =>\n          new MenuBase({\n            key: cul,\n            label: cul,\n            order: 1,\n            defaultOpen: this.currentCulture === cul,\n            callback: () => this.changeSelection(cul),\n          })\n      ),\n      direction: 'horizontal',\n    });\n  }\n}\n","<div class=\"translation-container\">\n  @if (this.input.label) {\n    <ta-title [level]=\"3\" [isBold]=\"true\">{{ this.input.label | translate }}</ta-title>\n  }\n  <div class=\"flex-row align-center g-space-md\">\n    @if (this.cultureMenu) {\n      <ta-toggle-navigation [menu]=\"this.cultureMenu\" container=\"tab\"></ta-toggle-navigation>\n    }\n    <ta-button size=\"small\" [matMenuTriggerFor]=\"menu\" [stopPropagationActivation]=\"false\">+</ta-button>\n  </div>\n\n  <div class=\"pt-space-md\">\n    @for (input of this.getInputs(this.currentCulture); track input) {\n      @if (input) {\n        <div [ngClass]=\"input.class\">\n          <ng-container\n            [ngTemplateOutlet]=\"this.inputsTemplate\"\n            [ngTemplateOutletContext]=\"{\n              input: input,\n            }\"\n          >\n          </ng-container>\n        </div>\n      }\n    }\n  </div>\n</div>\n\n<mat-menu #menu=\"matMenu\">\n  @for (culture of this.cultureList; track culture) {\n    <div>\n      <div class=\"flex-row g-space-sm p-space-sm\">\n        @if (this.hasKey(culture.name)) {\n          <ta-font-icon name=\"check-line\" class=\"checked\"></ta-font-icon>\n          <ta-link (action)=\"this.remove(culture.name)\">{{ culture.name }}</ta-link>\n        } @else {\n          <ta-font-icon name=\"check-line\"> </ta-font-icon>\n          <ta-link (action)=\"this.add(culture.name)\">{{ culture.name }}</ta-link>\n        }\n      </div>\n    </div>\n  }\n</mat-menu>\n","import { NgTemplateOutlet } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\n\nimport {\n  InputAddressComponent,\n  CheckboxComponent,\n  InputChoicesComponent,\n  ComponentInputComponent,\n  CultureComponent,\n  DatePickerComponent,\n  DropdownComponent,\n  LabelComponent,\n  InputPhoneComponent,\n  RadioComponent,\n  InputSchemaComponent,\n  SliderComponent,\n  SwitchComponent,\n  TextareaComponent,\n  TextBoxComponent,\n  TimePickerComponent,\n  ToggleComponent,\n  UploadComponent,\n  InputImageComponent,\n  InputImagesComponent,\n  InputLogoComponent,\n  WysiswygComponent\n} from '@ta/form-input';\nimport { InputBase } from '@ta/form-model';\nimport { TaBaseComponent } from '@ta/utils';\nimport { Observable } from 'rxjs';\nimport { DynamicComponent } from '../input/dynamic/dynamic.component';\nimport { PanelComponent } from '../input/panel/panel.component';\nimport { InputTranslationComponent } from '../input/translation/translation.component';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\nselector: 'ta-inputs',\n  templateUrl: './inputs.component.html',\n  styleUrls: ['./inputs.component.scss'],\n  standalone: true,\n  imports: [\n    NgTemplateOutlet,\n    InputAddressComponent,\n    CheckboxComponent,\n    InputChoicesComponent,\n    ComponentInputComponent,\n    CultureComponent,\n    DatePickerComponent,\n    DropdownComponent,\n    LabelComponent,\n    InputPhoneComponent,\n    RadioComponent,\n    InputSchemaComponent,\n    SliderComponent,\n    SwitchComponent,\n    TextareaComponent,\n    TextBoxComponent,\n    TimePickerComponent,\n    ToggleComponent,\n    UploadComponent,\n    InputImageComponent,\n    InputImagesComponent,\n    InputLogoComponent,\n    WysiswygComponent,\n    DynamicComponent,\n    PanelComponent,\n    InputTranslationComponent\n  ],\n})\nexport class InputsComponent extends TaBaseComponent {\n  @Input()\n  input!: InputBase<any>;\n\n  @Input()\n  standalone = false;\n\n  @Input()\n  onFocus!: Observable<void>;\n\n  @Input()\n  space = true;\n\n  matcher = new MyErrorStateMatcher();\n}\n","<ng-container\n  [ngTemplateOutlet]=\"inputsTemplate\"\n  [ngTemplateOutletContext]=\"{\n    input: this.input,\n    matcher: this.matcher,\n  }\"\n></ng-container>\n\n<ng-template #inputsTemplate let-input=\"input\" let-matcher=\"matcher\">\n  @switch (input.controlType) {\n    @case ('textbox') {\n      <ta-input-textbox\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n        [space]=\"this.space\"\n      ></ta-input-textbox>\n    }\n    @case ('textarea') {\n      <ta-input-textarea\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n      ></ta-input-textarea>\n    }\n    @case ('dropdown') {\n      <ta-input-dropdown\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n        [space]=\"this.space\"\n      ></ta-input-dropdown>\n    }\n    @case ('datePicker') {\n      <ta-input-date-picker\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n      ></ta-input-date-picker>\n    }\n    @case ('timePicker') {\n      <ta-input-time-picker\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n      ></ta-input-time-picker>\n    }\n    @case ('radio') {\n      <ta-input-radio\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n      ></ta-input-radio>\n    }\n    @case ('dynamic') {\n      <ta-input-dynamic [input]=\"input\" [inputsTemplate]=\"inputsTemplate\"></ta-input-dynamic>\n    }\n    @case ('checkbox') {\n      <ta-input-checkbox\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n      ></ta-input-checkbox>\n    }\n    @case ('toggle') {\n      <ta-input-toggle\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n      ></ta-input-toggle>\n    }\n    @case ('panel') {\n      <ta-form-panel [panel]=\"input\" [inputsTemplate]=\"inputsTemplate\"></ta-form-panel>\n    }\n    @case ('label') {\n      <ta-input-label [input]=\"input\"></ta-input-label>\n    }\n    @case ('switch') {\n      <ta-input-switch\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n      ></ta-input-switch>\n    }\n    @case ('images') {\n      <ta-input-images\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n      ></ta-input-images>\n    }\n    @case ('logo') {\n      <ta-input-logo\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n      ></ta-input-logo>\n    }\n    @case ('image') {\n      <ta-input-image\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n      ></ta-input-image>\n    }\n    @case ('schema') {\n      <ta-input-schema\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n      ></ta-input-schema>\n    }\n    @case ('upload') {\n      <ta-input-upload\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n      ></ta-input-upload>\n    }\n    @case ('slider') {\n      <ta-input-slider\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n      ></ta-input-slider>\n    }\n    @case ('choices') {\n      <ta-input-choices\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n      ></ta-input-choices>\n    }\n    @case ('wysiswyg') {\n      <ta-input-wysiswyg\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n      ></ta-input-wysiswyg>\n    }\n    @case ('translation') {\n      <ta-input-translation [input]=\"input\" [inputsTemplate]=\"inputsTemplate\"></ta-input-translation>\n    }\n    @case ('phone') {\n      <ta-input-phone\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n      ></ta-input-phone>\n    }\n    @case ('address') {\n      <ta-input-address\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n      ></ta-input-address>\n    }\n    @case ('culture') {\n      <ta-input-culture\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n      ></ta-input-culture>\n    }\n    @case ('component') {\n      <ta-input-component\n        [input]=\"input\"\n        [matcher]=\"matcher\"\n        [onFocus]=\"this.onFocus\"\n        [standalone]=\"this.standalone\"\n      ></ta-input-component>\n    }\n  }\n</ng-template>\n","import { AsyncPipe } from '@angular/common';\nimport { Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\n\nimport deepEqual from 'fast-deep-equal';\nimport { Observable, distinctUntilChanged } from 'rxjs';\n\nimport { IInputsError, InputBase } from '@ta/form-model';\nimport { ENotificationCode, NotificationInlineComponent } from '@ta/notification';\nimport { TranslatePipe } from '@ta/translation';\nimport { ButtonComponent, LoaderComponent } from '@ta/ui';\nimport { TaBaseComponent } from '@ta/utils';\n\nimport { InputsComponent } from './inputs/inputs.component';\n\n@Component({\n  selector: 'ta-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n  standalone: true,\n  imports: [\n    AsyncPipe,\n    ReactiveFormsModule,\n    NotificationInlineComponent,\n    LoaderComponent,\n    ButtonComponent,\n    TranslatePipe,\n    InputsComponent,\n  ],\n})\nexport class FormComponent extends TaBaseComponent implements OnInit, OnChanges, OnDestroy {\n  @Input()\n  inputs!: InputBase<any>[];\n\n  @Input()\n  askValidation$!: Observable<null>;\n\n  @Input()\n  askOnDestroy!: boolean;\n\n  @Input()\n  loader = false;\n  @Input()\n  error: IInputsError = { status: ENotificationCode.none, message: '' };\n\n  @Input()\n  border = true;\n\n  @Input()\n  canDisplayButton = true;\n  @Input()\n  buttonTitle = 'form.save';\n  @Input()\n  onLive = false;\n\n  @Output()\n  valid: EventEmitter<{}> = new EventEmitter();\n\n  @Output()\n  isFormValid = new EventEmitter<boolean>();\n\n  public form!: FormGroup;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.form = this.toFormGroup(this.inputs);\n\n    this._registerSubscription(this.form.statusChanges.subscribe(() => this.isFormValid.emit(this.isValid())));\n\n    if (this.onLive) {\n      this._registerSubscription(\n        this.form.valueChanges\n          .pipe(distinctUntilChanged((prev, curr) => deepEqual(prev, curr)))\n          .subscribe(() => this.onSubmit())\n      );\n    }\n\n    if (this.askValidation$) {\n      this._registerSubscription(this.askValidation$.subscribe(_ => this.onSubmit()));\n    }\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    if (simpleChanges['inputs'] && !simpleChanges['inputs'].firstChange) {\n      this.form = this.toFormGroup(this.inputs);\n    }\n  }\n\n  override ngOnDestroy() {\n    super.ngOnDestroy();\n    this.inputs.forEach(input => {\n      input.destroy();\n    });\n    if (this.askOnDestroy) {\n      this.onSubmit();\n    }\n  }\n\n  public onSubmit() {\n    if (!this.isValid()) {\n      return;\n    }\n    this.valid.emit(this.form.value);\n  }\n\n  public isValid(): boolean {\n    return this.form.valid && !this.loader;\n  }\n\n  public toFormGroup(inputs: InputBase<any>[]): FormGroup {\n    const group = new FormGroup({});\n    if (inputs === null || inputs.length === 0) {\n      return group;\n    }\n    inputs.forEach(input => {\n      input.createFormControl(group);\n    });\n    return group;\n  }\n}\n","<div class=\"form-container\">\n  <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"this.form\">\n    @for (input of this.inputs; track trackByKey($index, input)) {\n      <div>\n        @if (input.visible$ | async) {\n          <ta-inputs [input]=\"input\"></ta-inputs>\n        }\n      </div>\n    }\n    <div>\n      <ta-notification-inline [message]=\"this.error.message\" [code]=\"this.error.status\" class=\"my-space-sm\">\n        <div class=\"justify-end\">\n          <ta-loader [isLoading]=\"this.loader\">\n            @if (this.canDisplayButton && this.buttonTitle) {\n              <ta-button\n                (action)=\"this.onSubmit()\"\n                [state]=\"!this.isValid() ? 'disabled' : 'classic'\"\n                icon=\"check-line\"\n              >\n                {{ this.buttonTitle | translate }}\n              </ta-button>\n            }\n          </ta-loader>\n        </div>\n      </ta-notification-inline>\n    </div>\n  </form>\n</div>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  signal,\n} from '@angular/core';\n\nimport { NgIf, NgClass } from '@angular/common';\nimport { StopPropagationDirective } from '@ta/utils';\nimport { InputBase } from '@ta/form-model';\nimport { LoaderComponent } from '@ta/ui';\nimport { TaBaseComponent } from '@ta/utils';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { InputsComponent } from '../inputs/inputs.component';\n\nexport type Layout = 'row' | 'column';\n\n@Component({\nselector: 'ta-edit-field',\n  templateUrl: './edit-field.component.html',\n  styleUrls: ['./edit-field.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgClass, StopPropagationDirective, LoaderComponent, InputsComponent],\n})\nexport class EditFieldComponent extends TaBaseComponent implements OnInit, OnChanges {\n  @Input()\n  getInput!: () => InputBase<any>;\n\n  @Input()\n  changeEditMode$: Observable<boolean> | null = null;\n\n  @Input()\n  isLoading: boolean = false;\n\n  @Input()\n  withBorder: boolean = true;\n\n  @Input()\n  disabled: boolean = false;\n\n  @Output()\n  newValue: EventEmitter<unknown> = new EventEmitter();\n\n  readonly onFocus = new BehaviorSubject<void>(undefined);\n  readonly renderInput = signal<InputBase<null> | null>(null);\n  public editMode = signal(false);\n\n  @HostListener('document:click', ['$event.target'])\n  onDocumentClick(targetElement: HTMLElement): void {\n    if (!this.editMode()) {\n      return;\n    }\n    if (targetElement.tagName === 'INPUT' && (targetElement as HTMLInputElement).type === 'file') {\n      return;\n    }\n    const clickedInside = this.elementRef.nativeElement.contains(targetElement);\n    if (!clickedInside) {\n      this.validation();\n    }\n  }\n\n  constructor(private elementRef: ElementRef) {\n    super();\n  }\n  ngOnInit() {\n    if (this.changeEditMode$) {\n      this._registerSubscription(this.changeEditMode$.subscribe(value => this.editMode.set(value)));\n    }\n    this._setInput();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes['isLoading'] &&\n      changes['isLoading'].currentValue !== changes['isLoading'].previousValue &&\n      changes['isLoading'].currentValue === false\n    ) {\n      this._setInput();\n      this.editMode.set(false);\n    }\n  }\n\n  public toggleEditMode() {\n    this.editMode.set(!this.editMode());\n\n    if (this.editMode()) {\n      this.onFocus.next();\n    }\n  }\n\n  public validation() {\n    const input = this.renderInput();\n    if (!input) {\n      return;\n    }\n    this.newValue.emit(input.value);\n\n    this.toggleEditMode();\n  }\n\n  private _setInput() {\n    this.renderInput.set(this.getInput());\n  }\n}\n","<ta-loader [isLoading]=\"this.isLoading\">\n  @let input = this.renderInput();\n  @if (!this.editMode()) {\n    <div\n      class=\"value-container\"\n      [ngClass]=\"{ 'no-border': !this.withBorder }\"\n      [class.is-disabled]=\"this.disabled\"\n      (click)=\"!this.disabled ? this.toggleEditMode() : null\"\n      appStopPropagation\n    >\n      <ng-content></ng-content>\n    </div>\n  } @else if (input) {\n    <div class=\"align-center g-space-sm\">\n      <ta-inputs\n        class=\"flex-fill\"\n        appStopPropagation\n        [input]=\"input\"\n        [standalone]=\"true\"\n        [onFocus]=\"this.onFocus\"\n      ></ta-inputs>\n    </div>\n  }\n</ta-loader>\n","import { Injectable } from '@angular/core';\r\n\r\nimport { TaLazyTranslationService } from '@ta/translation';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TaTranslationForm extends TaLazyTranslationService {\r\n  constructor() {\r\n    super('form');\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ErrorStateMatcher, MatNativeDateModule, ShowOnDirtyErrorStateMatcher } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { TaFormInputsModule } from '@ta/form-input';\nimport { TaIconsModule } from '@ta/icons';\nimport { TaMenuModule } from '@ta/menu';\nimport { TaNotificationModule } from '@ta/notification';\nimport { TranslatePipe } from '@ta/translation';\nimport { TaContainerModule, TaUiModule } from '@ta/ui';\nimport { TaDirectivePipeModule } from '@ta/utils';\n\nimport { EditFieldComponent } from './components/edit-field/edit-field.component';\nimport { FormComponent } from './components/form.component';\nimport { DynamicComponent } from './components/input/dynamic/dynamic.component';\nimport { PanelComponent } from './components/input/panel/panel.component';\nimport { InputTranslationComponent } from './components/input/translation/translation.component';\nimport { InputsComponent } from './components/inputs/inputs.component';\nimport { TaTranslationForm } from './translation.service';\n\n/**\n * @deprecated Use standalone components instead.\n * This module will be removed in a future version.\n *\n * @example\n * // Instead of importing the module:\n * // import { TaFormModule } from '@ta/library-name';\n *\n * // Import the standalone components directly:\n * import { FormComponent, MatNativeDateModule, EditFieldComponent } from '@ta/library-name';\n */\n@NgModule({\n  imports: [\n    TaContainerModule,\n    TaDirectivePipeModule,\n    TaNotificationModule,\n    TaFormInputsModule,\n    TaUiModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TaIconsModule,\n    TaMenuModule,\n    MatMenuModule,\n    TranslatePipe,\n    FormComponent,\n    InputsComponent,\n    PanelComponent,\n    DynamicComponent,\n    EditFieldComponent,\n    InputTranslationComponent,\n  ],\n  providers: [{ provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher }],\n  declarations: [],\n  exports: [FormComponent, MatNativeDateModule, EditFieldComponent],\n})\nexport class TaFormModule {\n  constructor() {\n    TaTranslationForm.getInstance();\n  }\n}\n","/*\n * Public API Surface of form-basic\n */\n\nexport * from './lib/components/public-api';\n\nexport * from './lib/form.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1"],"mappings":"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"}