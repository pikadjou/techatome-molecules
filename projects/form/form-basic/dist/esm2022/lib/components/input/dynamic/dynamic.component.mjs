import { NgIf, NgFor, NgClass, NgTemplateOutlet } from '@angular/common';
import { LocalIconComponent } from '@ta/icons';
import { Component, Input } from '@angular/core';
import { TranslatePipe } from '@ta/translation';
import { ButtonComponent } from '@ta/ui';
import { TaBaseComponent } from '@ta/utils';
import * as i0 from "@angular/core";
export class DynamicComponent extends TaBaseComponent {
    constructor() {
        super();
        this.add = () => {
            this.input.add();
        };
        this.remove = (index) => {
            this.input.remove(index);
        };
    }
    canRemove(index) {
        return !isNaN(Number(index));
    }
    getKeys() {
        return Object.keys(this.input.inputsGroup);
    }
    getInputs(key) {
        return this.input.inputsGroup[key];
    }
    trackByFn(_, key) {
        return key;
    }
    trackInputByFn(_, input) {
        return input.key;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: DynamicComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: DynamicComponent, isStandalone: true, selector: "ta-input-dynamic", inputs: { inputsTemplate: "inputsTemplate", input: "input" }, usesInheritance: true, ngImport: i0, template: "<div>\n  <div class=\"header\">\n    <h4>{{ input.label }}</h4>\n  </div>\n\n  @for (key of getKeys(); track trackByFn($index, key)) {\n    <div>\n      @if (this.canRemove(key)) {\n        <div class=\"remove-action\">\n          <ta-button class=\"remove-action\" [style]=\"'danger'\" (action)=\"remove(key)\">\n            <ta-local-icon [type]=\"this.icon.DeleteLight\" size=\"xs\"></ta-local-icon>\n          </ta-button>\n        </div>\n      }\n\n      @for (input of this.getInputs(key); track trackInputByFn($index, input)) {\n        @if (input) {\n          <div [ngClass]=\"input.class\">\n            <ng-container\n              [ngTemplateOutlet]=\"this.inputsTemplate\"\n              [ngTemplateOutletContext]=\"{\n                input: input,\n              }\"\n            >\n            </ng-container>\n          </div>\n        }\n      }\n    </div>\n  }\n  <ta-button (action)=\"add()\">{{ 'form.dynamic.add' | translate }}</ta-button>\n</div>\n", styles: [".remove-action{position:absolute;margin-top:16px;right:8px}\n"], dependencies: [{ kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: LocalIconComponent, selector: "ta-local-icon", inputs: ["type", "size", "rotation"] }, { kind: "component", type: ButtonComponent, selector: "ta-button", inputs: ["state", "type", "size", "icon", "options", "stopPropagationActivation"], outputs: ["action"] }, { kind: "pipe", type: TranslatePipe, name: "translate" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: DynamicComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-input-dynamic', standalone: true, imports: [NgIf, NgFor, NgClass, NgTemplateOutlet, LocalIconComponent, ButtonComponent, TranslatePipe], template: "<div>\n  <div class=\"header\">\n    <h4>{{ input.label }}</h4>\n  </div>\n\n  @for (key of getKeys(); track trackByFn($index, key)) {\n    <div>\n      @if (this.canRemove(key)) {\n        <div class=\"remove-action\">\n          <ta-button class=\"remove-action\" [style]=\"'danger'\" (action)=\"remove(key)\">\n            <ta-local-icon [type]=\"this.icon.DeleteLight\" size=\"xs\"></ta-local-icon>\n          </ta-button>\n        </div>\n      }\n\n      @for (input of this.getInputs(key); track trackInputByFn($index, input)) {\n        @if (input) {\n          <div [ngClass]=\"input.class\">\n            <ng-container\n              [ngTemplateOutlet]=\"this.inputsTemplate\"\n              [ngTemplateOutletContext]=\"{\n                input: input,\n              }\"\n            >\n            </ng-container>\n          </div>\n        }\n      }\n    </div>\n  }\n  <ta-button (action)=\"add()\">{{ 'form.dynamic.add' | translate }}</ta-button>\n</div>\n", styles: [".remove-action{position:absolute;margin-top:16px;right:8px}\n"] }]
        }], ctorParameters: () => [], propDecorators: { inputsTemplate: [{
                type: Input
            }], input: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbXBvbmVudHMvaW5wdXQvZHluYW1pYy9keW5hbWljLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9pbnB1dC9keW5hbWljL2R5bmFtaWMuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDekUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQy9DLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFlLE1BQU0sZUFBZSxDQUFDO0FBRzlELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNoRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxXQUFXLENBQUM7O0FBUzVDLE1BQU0sT0FBTyxnQkFBaUIsU0FBUSxlQUFlO0lBT25EO1FBQ0UsS0FBSyxFQUFFLENBQUM7UUFHSCxRQUFHLEdBQUcsR0FBRyxFQUFFO1lBQ2hCLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDbkIsQ0FBQyxDQUFDO1FBTUssV0FBTSxHQUFHLENBQUMsS0FBYSxFQUFFLEVBQUU7WUFDaEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDM0IsQ0FBQyxDQUFDO0lBWkYsQ0FBQztJQU1NLFNBQVMsQ0FBQyxLQUFhO1FBQzVCLE9BQU8sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQU1NLE9BQU87UUFDWixPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRU0sU0FBUyxDQUFDLEdBQVc7UUFDMUIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRU0sU0FBUyxDQUFDLENBQVMsRUFBRSxHQUFXO1FBQ3JDLE9BQU8sR0FBRyxDQUFDO0lBQ2IsQ0FBQztJQUVNLGNBQWMsQ0FBQyxDQUFTLEVBQUUsS0FBcUI7UUFDcEQsT0FBTyxLQUFLLENBQUMsR0FBRyxDQUFDO0lBQ25CLENBQUM7K0dBckNVLGdCQUFnQjttR0FBaEIsZ0JBQWdCLGlLQ2hCN0IsODhCQWdDQSx1SERsQnlCLE9BQU8sb0ZBQUUsZ0JBQWdCLG9KQUFFLGtCQUFrQixnR0FBRSxlQUFlLHlKQUFFLGFBQWE7OzRGQUV6RixnQkFBZ0I7a0JBUDVCLFNBQVM7K0JBQ0Esa0JBQWtCLGNBR2QsSUFBSSxXQUNQLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsa0JBQWtCLEVBQUUsZUFBZSxFQUFFLGFBQWEsQ0FBQzt3REFJOUYsY0FBYztzQkFEcEIsS0FBSztnQkFJTixLQUFLO3NCQURKLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ0lmLCBOZ0ZvciwgTmdDbGFzcywgTmdUZW1wbGF0ZU91dGxldCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBMb2NhbEljb25Db21wb25lbnQgfSBmcm9tICdAdGEvaWNvbnMnO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgSW5wdXRCYXNlLCBJbnB1dER5bmFtaWMgfSBmcm9tICdAdGEvZm9ybS1tb2RlbCc7XG5pbXBvcnQgeyBUcmFuc2xhdGVQaXBlIH0gZnJvbSAnQHRhL3RyYW5zbGF0aW9uJztcbmltcG9ydCB7IEJ1dHRvbkNvbXBvbmVudCB9IGZyb20gJ0B0YS91aSc7XG5pbXBvcnQgeyBUYUJhc2VDb21wb25lbnQgfSBmcm9tICdAdGEvdXRpbHMnO1xuXG5AQ29tcG9uZW50KHtcbnNlbGVjdG9yOiAndGEtaW5wdXQtZHluYW1pYycsXG4gIHRlbXBsYXRlVXJsOiAnLi9keW5hbWljLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZHluYW1pYy5jb21wb25lbnQuc2NzcyddLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbTmdJZiwgTmdGb3IsIE5nQ2xhc3MsIE5nVGVtcGxhdGVPdXRsZXQsIExvY2FsSWNvbkNvbXBvbmVudCwgQnV0dG9uQ29tcG9uZW50LCBUcmFuc2xhdGVQaXBlXSxcbn0pXG5leHBvcnQgY2xhc3MgRHluYW1pY0NvbXBvbmVudCBleHRlbmRzIFRhQmFzZUNvbXBvbmVudCB7XG4gIEBJbnB1dCgpXG4gIHB1YmxpYyBpbnB1dHNUZW1wbGF0ZSE6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgQElucHV0KClcbiAgaW5wdXQhOiBJbnB1dER5bmFtaWM7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIHB1YmxpYyBhZGQgPSAoKSA9PiB7XG4gICAgdGhpcy5pbnB1dC5hZGQoKTtcbiAgfTtcblxuICBwdWJsaWMgY2FuUmVtb3ZlKGluZGV4OiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICByZXR1cm4gIWlzTmFOKE51bWJlcihpbmRleCkpO1xuICB9XG5cbiAgcHVibGljIHJlbW92ZSA9IChpbmRleDogc3RyaW5nKSA9PiB7XG4gICAgdGhpcy5pbnB1dC5yZW1vdmUoaW5kZXgpO1xuICB9O1xuXG4gIHB1YmxpYyBnZXRLZXlzKCk6IHN0cmluZ1tdIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXModGhpcy5pbnB1dC5pbnB1dHNHcm91cCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0SW5wdXRzKGtleTogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5wdXQuaW5wdXRzR3JvdXBba2V5XTtcbiAgfVxuXG4gIHB1YmxpYyB0cmFja0J5Rm4oXzogbnVtYmVyLCBrZXk6IHN0cmluZykge1xuICAgIHJldHVybiBrZXk7XG4gIH1cblxuICBwdWJsaWMgdHJhY2tJbnB1dEJ5Rm4oXzogbnVtYmVyLCBpbnB1dDogSW5wdXRCYXNlPGFueT4pIHtcbiAgICByZXR1cm4gaW5wdXQua2V5O1xuICB9XG59XG4iLCI8ZGl2PlxuICA8ZGl2IGNsYXNzPVwiaGVhZGVyXCI+XG4gICAgPGg0Pnt7IGlucHV0LmxhYmVsIH19PC9oND5cbiAgPC9kaXY+XG5cbiAgQGZvciAoa2V5IG9mIGdldEtleXMoKTsgdHJhY2sgdHJhY2tCeUZuKCRpbmRleCwga2V5KSkge1xuICAgIDxkaXY+XG4gICAgICBAaWYgKHRoaXMuY2FuUmVtb3ZlKGtleSkpIHtcbiAgICAgICAgPGRpdiBjbGFzcz1cInJlbW92ZS1hY3Rpb25cIj5cbiAgICAgICAgICA8dGEtYnV0dG9uIGNsYXNzPVwicmVtb3ZlLWFjdGlvblwiIFtzdHlsZV09XCInZGFuZ2VyJ1wiIChhY3Rpb24pPVwicmVtb3ZlKGtleSlcIj5cbiAgICAgICAgICAgIDx0YS1sb2NhbC1pY29uIFt0eXBlXT1cInRoaXMuaWNvbi5EZWxldGVMaWdodFwiIHNpemU9XCJ4c1wiPjwvdGEtbG9jYWwtaWNvbj5cbiAgICAgICAgICA8L3RhLWJ1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICB9XG5cbiAgICAgIEBmb3IgKGlucHV0IG9mIHRoaXMuZ2V0SW5wdXRzKGtleSk7IHRyYWNrIHRyYWNrSW5wdXRCeUZuKCRpbmRleCwgaW5wdXQpKSB7XG4gICAgICAgIEBpZiAoaW5wdXQpIHtcbiAgICAgICAgICA8ZGl2IFtuZ0NsYXNzXT1cImlucHV0LmNsYXNzXCI+XG4gICAgICAgICAgICA8bmctY29udGFpbmVyXG4gICAgICAgICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0XT1cInRoaXMuaW5wdXRzVGVtcGxhdGVcIlxuICAgICAgICAgICAgICBbbmdUZW1wbGF0ZU91dGxldENvbnRleHRdPVwie1xuICAgICAgICAgICAgICAgIGlucHV0OiBpbnB1dCxcbiAgICAgICAgICAgICAgfVwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgfVxuICAgICAgfVxuICAgIDwvZGl2PlxuICB9XG4gIDx0YS1idXR0b24gKGFjdGlvbik9XCJhZGQoKVwiPnt7ICdmb3JtLmR5bmFtaWMuYWRkJyB8IHRyYW5zbGF0ZSB9fTwvdGEtYnV0dG9uPlxuPC9kaXY+XG4iXX0=