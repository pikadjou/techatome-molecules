import { NgIf, NgFor, NgClass, AsyncPipe, NgTemplateOutlet } from '@angular/common';
import { Component, Input } from '@angular/core';
import { TranslatePipe } from '@ta/translation';
import { TaBaseComponent } from '@ta/utils';
import * as i0 from "@angular/core";
export class PanelComponent extends TaBaseComponent {
    constructor() {
        super();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: PanelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: PanelComponent, isStandalone: true, selector: "ta-form-panel", inputs: { inputsTemplate: "inputsTemplate", panel: "panel" }, usesInheritance: true, ngImport: i0, template: "<div [ngClass]=\"this.panel.containerClass\">\n  @if (this.panel.label) {\n    <h2 class=\"panel-title\">{{ this.panel.label | translate }}</h2>\n  }\n\n  <div [ngClass]=\"this.panel.contentClass\">\n    @for (input of this.panel.children; track this.trackByKey($index, input)) {\n      @if (input) {\n        <div\n          [ngClass]=\"input.class\"\n          [style.display]=\"(input.visible$ | async) ? 'block' : 'none'\"\n          class=\"mb-space-sm\"\n        >\n          <ng-container\n            [ngTemplateOutlet]=\"this.inputsTemplate\"\n            [ngTemplateOutletContext]=\"{\n              input: input\n            }\"\n          >\n          </ng-container>\n        </div>\n      }\n    }\n  </div>\n</div>\n", styles: [".with-separator{border-bottom:1px solid #a9a9a9;padding-bottom:2em}.highlight-title .panel-title{color:var(--ta-surface-brand-primary);font-style:normal;font-weight:500;font-size:15px;line-height:24px;letter-spacing:.1em;text-transform:uppercase;padding-top:2em}.no-title-space .panel-title{padding-top:0}\n"], dependencies: [{ kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "pipe", type: AsyncPipe, name: "async" }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "pipe", type: TranslatePipe, name: "translate" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: PanelComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-form-panel', standalone: true, imports: [NgIf, NgFor, NgClass, AsyncPipe, NgTemplateOutlet, TranslatePipe], template: "<div [ngClass]=\"this.panel.containerClass\">\n  @if (this.panel.label) {\n    <h2 class=\"panel-title\">{{ this.panel.label | translate }}</h2>\n  }\n\n  <div [ngClass]=\"this.panel.contentClass\">\n    @for (input of this.panel.children; track this.trackByKey($index, input)) {\n      @if (input) {\n        <div\n          [ngClass]=\"input.class\"\n          [style.display]=\"(input.visible$ | async) ? 'block' : 'none'\"\n          class=\"mb-space-sm\"\n        >\n          <ng-container\n            [ngTemplateOutlet]=\"this.inputsTemplate\"\n            [ngTemplateOutletContext]=\"{\n              input: input\n            }\"\n          >\n          </ng-container>\n        </div>\n      }\n    }\n  </div>\n</div>\n", styles: [".with-separator{border-bottom:1px solid #a9a9a9;padding-bottom:2em}.highlight-title .panel-title{color:var(--ta-surface-brand-primary);font-style:normal;font-weight:500;font-size:15px;line-height:24px;letter-spacing:.1em;text-transform:uppercase;padding-top:2em}.no-title-space .panel-title{padding-top:0}\n"] }]
        }], ctorParameters: () => [], propDecorators: { inputsTemplate: [{
                type: Input
            }], panel: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFuZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL2lucHV0L3BhbmVsL3BhbmVsLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9pbnB1dC9wYW5lbC9wYW5lbC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDcEYsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQWUsTUFBTSxlQUFlLENBQUM7QUFHOUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxXQUFXLENBQUM7O0FBUzVDLE1BQU0sT0FBTyxjQUFlLFNBQVEsZUFBZTtJQU1qRDtRQUNFLEtBQUssRUFBRSxDQUFDO0lBQ1YsQ0FBQzsrR0FSVSxjQUFjO21HQUFkLGNBQWMsOEpDZDNCLDZ0QkF5QkEsNldEYnlCLE9BQU8sK0VBQUUsU0FBUyw4Q0FBRSxnQkFBZ0IsK0lBQUUsYUFBYTs7NEZBRS9ELGNBQWM7a0JBUDFCLFNBQVM7K0JBQ0EsZUFBZSxjQUdYLElBQUksV0FDUCxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRSxhQUFhLENBQUM7d0RBSXBFLGNBQWM7c0JBRHBCLEtBQUs7Z0JBR0csS0FBSztzQkFBYixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdJZiwgTmdGb3IsIE5nQ2xhc3MsIEFzeW5jUGlwZSwgTmdUZW1wbGF0ZU91dGxldCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBJbnB1dFBhbmVsIH0gZnJvbSAnQHRhL2Zvcm0tbW9kZWwnO1xuaW1wb3J0IHsgVHJhbnNsYXRlUGlwZSB9IGZyb20gJ0B0YS90cmFuc2xhdGlvbic7XG5pbXBvcnQgeyBUYUJhc2VDb21wb25lbnQgfSBmcm9tICdAdGEvdXRpbHMnO1xuXG5AQ29tcG9uZW50KHtcbnNlbGVjdG9yOiAndGEtZm9ybS1wYW5lbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9wYW5lbC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3BhbmVsLmNvbXBvbmVudC5zY3NzJ10sXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtOZ0lmLCBOZ0ZvciwgTmdDbGFzcywgQXN5bmNQaXBlLCBOZ1RlbXBsYXRlT3V0bGV0LCBUcmFuc2xhdGVQaXBlXSxcbn0pXG5leHBvcnQgY2xhc3MgUGFuZWxDb21wb25lbnQgZXh0ZW5kcyBUYUJhc2VDb21wb25lbnQge1xuICBASW5wdXQoKVxuICBwdWJsaWMgaW5wdXRzVGVtcGxhdGUhOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gIEBJbnB1dCgpIHBhbmVsITogSW5wdXRQYW5lbDtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG59XG4iLCI8ZGl2IFtuZ0NsYXNzXT1cInRoaXMucGFuZWwuY29udGFpbmVyQ2xhc3NcIj5cbiAgQGlmICh0aGlzLnBhbmVsLmxhYmVsKSB7XG4gICAgPGgyIGNsYXNzPVwicGFuZWwtdGl0bGVcIj57eyB0aGlzLnBhbmVsLmxhYmVsIHwgdHJhbnNsYXRlIH19PC9oMj5cbiAgfVxuXG4gIDxkaXYgW25nQ2xhc3NdPVwidGhpcy5wYW5lbC5jb250ZW50Q2xhc3NcIj5cbiAgICBAZm9yIChpbnB1dCBvZiB0aGlzLnBhbmVsLmNoaWxkcmVuOyB0cmFjayB0aGlzLnRyYWNrQnlLZXkoJGluZGV4LCBpbnB1dCkpIHtcbiAgICAgIEBpZiAoaW5wdXQpIHtcbiAgICAgICAgPGRpdlxuICAgICAgICAgIFtuZ0NsYXNzXT1cImlucHV0LmNsYXNzXCJcbiAgICAgICAgICBbc3R5bGUuZGlzcGxheV09XCIoaW5wdXQudmlzaWJsZSQgfCBhc3luYykgPyAnYmxvY2snIDogJ25vbmUnXCJcbiAgICAgICAgICBjbGFzcz1cIm1iLXNwYWNlLXNtXCJcbiAgICAgICAgPlxuICAgICAgICAgIDxuZy1jb250YWluZXJcbiAgICAgICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0XT1cInRoaXMuaW5wdXRzVGVtcGxhdGVcIlxuICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cIntcbiAgICAgICAgICAgICAgaW5wdXQ6IGlucHV0XG4gICAgICAgICAgICB9XCJcbiAgICAgICAgICA+XG4gICAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgICAgIDwvZGl2PlxuICAgICAgfVxuICAgIH1cbiAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==