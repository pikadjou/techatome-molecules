import { AsyncPipe, NgFor, NgIf } from '@angular/common';
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { TranslatePipe } from '@ta/translation';
import { EmptyComponent, ErrorComponent, LinkComponent, ListContainerComponent, ListElementComponent, ListExtraInformationComponent, ListTitleComponent, LoaderComponent, TitleComponent, UiProfileDisplayComponent, } from '@ta/ui';
import { TaBaseComponent, fullName, sendMail } from '@ta/utils';
import * as i0 from "@angular/core";
import * as i1 from "../../services/users.service";
export class UserMyProfileComponent extends TaBaseComponent {
    get currentUser$() {
        return this._userService.currentUser.get$();
    }
    constructor(_userService) {
        super();
        this._userService = _userService;
        this.canModify = true;
        this.modifyAction = new EventEmitter();
        this.mailTo = sendMail;
        this.ctas = [
            {
                icon: 'modify',
                label: 'user.modify',
                callback: () => this._modifyProfile(),
            },
        ];
        this._fetch();
    }
    getFullName(firstName, lastName) {
        return fullName({ firstName: firstName, name: lastName });
    }
    getUserLogo(user) {
        return {
            userInfo: {
                profilePictureUrl: user.picture,
                naming: {
                    name: user.lastName,
                    firstName: user.firstName,
                    trigram: user.trigram,
                },
            },
        };
    }
    _fetch() {
        this.requestState.asked();
        this._userService.fetchCurrentUser$().subscribe({
            complete: () => this.requestState.completed(),
            error: (error) => {
                this.requestState.onError(error.status, error.statusText);
            },
        });
    }
    _modifyProfile() {
        this.modifyAction.emit();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: UserMyProfileComponent, deps: [{ token: i1.TaUsersService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: UserMyProfileComponent, isStandalone: true, selector: "ta-user-my-profile", inputs: { canModify: "canModify" }, outputs: { modifyAction: "modifyAction" }, usesInheritance: true, ngImport: i0, template: "<ta-loader [isLoading]=\"this.requestState.isLoading()\" *ngLet=\"this.currentUser$ | async as currentUser\">\n  <ta-error [message]=\"this.requestState.getErrorMessage()\" [code]=\"this.requestState.getErrorStatus()\">\n    <ta-empty [isEmpty]=\"!currentUser\">\n      @if (currentUser) {\n        <ta-ui-profile-display\n          [label]=\"this.getFullName(currentUser.firstName, currentUser.lastName)\"\n          [ctas]=\"this.canModify ? this.ctas : null\"\n          [userLogo]=\"this.getUserLogo(currentUser)\"\n        >\n          <div class=\"pt-space-xxl\">\n            <div class=\"pt-space-xs align-center\">\n              <ta-title class=\"m-a\" [level]=\"3\">\n                <ta-link (action)=\"this.mailTo(currentUser.userName)\">{{ currentUser.userName }}</ta-link>\n              </ta-title>\n            </div>\n            <div class=\"pt-space-xs align-center\">\n              <ta-title class=\"m-a\" [level]=\"3\">\n                {{ currentUser.phoneNumber }}\n              </ta-title>\n            </div>\n            @if (currentUser.tenantInformations.length === 1) {\n              <div class=\"align-center\">\n                <ta-title class=\"m-a\" [level]=\"3\">\n                  {{ 'user.clientnumber' | translate }}\n                  {{ currentUser.tenantInformations[0].customerId }}\n                </ta-title>\n              </div>\n            }\n            @if (currentUser.tenantInformations.length > 1) {\n              <div>\n                <div class=\"pt-space-xxl align-center\">\n                  <ta-title class=\"m-a\" [level]=\"3\">\n                    {{ 'user.tenantlisttitle' | translate }}\n                  </ta-title>\n                </div>\n                <div class=\"list\">\n                  <div class=\"tenant-list\">\n                    <ta-list-container>\n                      @for (tenantInformation of currentUser.tenantInformations; track tenantInformation) {\n                        <ta-list-element [withSeparator]=\"false\">\n                          <ta-list-title>\n                            <div>{{ tenantInformation.tenantName }}</div>\n                          </ta-list-title>\n                          <ta-list-extra-information>\n                            @if (tenantInformation.customerId) {\n                              <div class=\"align-center\">\n                                <div class=\"mr-space-sm\">\n                                  {{ tenantInformation.customerId }}\n                                </div>\n                                <!-- <ta-text-to-clipboard [value]=\"tenantInformation.customerId.toString()\" ></ta-text-to-clipboard> -->\n                              </div>\n                            }\n                          </ta-list-extra-information>\n                        </ta-list-element>\n                      }\n                    </ta-list-container>\n                  </div>\n                </div>\n              </div>\n            }\n          </div>\n        </ta-ui-profile-display>\n      }\n    </ta-empty>\n  </ta-error>\n</ta-loader>\n", styles: [".text{font-size:var(--ta-font-key-key-default-size);line-height:var(--ta-font-key-key-default-line);font-weight:var(--ta-font-key-key-default-weight);display:flex;justify-content:center;line-height:32px}.list{display:flex;justify-content:center}.list .tenant-list{min-width:240px}\n"], dependencies: [{ kind: "pipe", type: AsyncPipe, name: "async" }, { kind: "component", type: TitleComponent, selector: "ta-title", inputs: ["level", "isTheme", "isBold"] }, { kind: "component", type: ListContainerComponent, selector: "ta-list-container" }, { kind: "component", type: ListElementComponent, selector: "ta-list-element", inputs: ["withSeparator", "flexColumn"], outputs: ["action"] }, { kind: "component", type: ListTitleComponent, selector: "ta-list-title" }, { kind: "component", type: ListExtraInformationComponent, selector: "ta-list-extra-information" }, { kind: "component", type: LoaderComponent, selector: "ta-loader", inputs: ["isLoading", "skeleton"] }, { kind: "component", type: ErrorComponent, selector: "ta-error", inputs: ["message", "code"] }, { kind: "component", type: EmptyComponent, selector: "ta-empty", inputs: ["isEmpty", "isLight", "showMessage", "text", "type", "icon", "iconSize"] }, { kind: "component", type: UiProfileDisplayComponent, selector: "ta-ui-profile-display", inputs: ["label", "userLogo", "ctas", "sideIcon"] }, { kind: "component", type: LinkComponent, selector: "ta-link", inputs: ["state", "underline", "bold", "size", "icon"], outputs: ["action"] }, { kind: "pipe", type: TranslatePipe, name: "translate" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: UserMyProfileComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-user-my-profile', standalone: true, imports: [
                        NgIf,
                        NgFor,
                        AsyncPipe,
                        TitleComponent,
                        ListContainerComponent,
                        ListElementComponent,
                        ListTitleComponent,
                        ListExtraInformationComponent,
                        LoaderComponent,
                        ErrorComponent,
                        EmptyComponent,
                        UiProfileDisplayComponent,
                        LinkComponent,
                        TranslatePipe,
                    ], template: "<ta-loader [isLoading]=\"this.requestState.isLoading()\" *ngLet=\"this.currentUser$ | async as currentUser\">\n  <ta-error [message]=\"this.requestState.getErrorMessage()\" [code]=\"this.requestState.getErrorStatus()\">\n    <ta-empty [isEmpty]=\"!currentUser\">\n      @if (currentUser) {\n        <ta-ui-profile-display\n          [label]=\"this.getFullName(currentUser.firstName, currentUser.lastName)\"\n          [ctas]=\"this.canModify ? this.ctas : null\"\n          [userLogo]=\"this.getUserLogo(currentUser)\"\n        >\n          <div class=\"pt-space-xxl\">\n            <div class=\"pt-space-xs align-center\">\n              <ta-title class=\"m-a\" [level]=\"3\">\n                <ta-link (action)=\"this.mailTo(currentUser.userName)\">{{ currentUser.userName }}</ta-link>\n              </ta-title>\n            </div>\n            <div class=\"pt-space-xs align-center\">\n              <ta-title class=\"m-a\" [level]=\"3\">\n                {{ currentUser.phoneNumber }}\n              </ta-title>\n            </div>\n            @if (currentUser.tenantInformations.length === 1) {\n              <div class=\"align-center\">\n                <ta-title class=\"m-a\" [level]=\"3\">\n                  {{ 'user.clientnumber' | translate }}\n                  {{ currentUser.tenantInformations[0].customerId }}\n                </ta-title>\n              </div>\n            }\n            @if (currentUser.tenantInformations.length > 1) {\n              <div>\n                <div class=\"pt-space-xxl align-center\">\n                  <ta-title class=\"m-a\" [level]=\"3\">\n                    {{ 'user.tenantlisttitle' | translate }}\n                  </ta-title>\n                </div>\n                <div class=\"list\">\n                  <div class=\"tenant-list\">\n                    <ta-list-container>\n                      @for (tenantInformation of currentUser.tenantInformations; track tenantInformation) {\n                        <ta-list-element [withSeparator]=\"false\">\n                          <ta-list-title>\n                            <div>{{ tenantInformation.tenantName }}</div>\n                          </ta-list-title>\n                          <ta-list-extra-information>\n                            @if (tenantInformation.customerId) {\n                              <div class=\"align-center\">\n                                <div class=\"mr-space-sm\">\n                                  {{ tenantInformation.customerId }}\n                                </div>\n                                <!-- <ta-text-to-clipboard [value]=\"tenantInformation.customerId.toString()\" ></ta-text-to-clipboard> -->\n                              </div>\n                            }\n                          </ta-list-extra-information>\n                        </ta-list-element>\n                      }\n                    </ta-list-container>\n                  </div>\n                </div>\n              </div>\n            }\n          </div>\n        </ta-ui-profile-display>\n      }\n    </ta-empty>\n  </ta-error>\n</ta-loader>\n", styles: [".text{font-size:var(--ta-font-key-key-default-size);line-height:var(--ta-font-key-key-default-line);font-weight:var(--ta-font-key-key-default-weight);display:flex;justify-content:center;line-height:32px}.list{display:flex;justify-content:center}.list .tenant-list{min-width:240px}\n"] }]
        }], ctorParameters: () => [{ type: i1.TaUsersService }], propDecorators: { canModify: [{
                type: Input
            }], modifyAction: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,