import { Component, inject } from '@angular/core';
import { MatMenu, MatMenuTrigger } from '@angular/material/menu';
import { FontIconComponent } from '@ta/icons';
import { TaTranslationService } from '@ta/translation';
import { SwitchLanguageComponent } from '../switch-language.component';
import * as i0 from "@angular/core";
export class SwitchLanguageCtaComponent {
    constructor() {
        this.translateService = inject(TaTranslationService);
        this.activeLanguage = this.translateService.getLanguage();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: SwitchLanguageCtaComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.13", type: SwitchLanguageCtaComponent, isStandalone: true, selector: "ta-switch-language-cta", ngImport: i0, template: "<div [matMenuTriggerFor]=\"menu\" class=\"flex-start g-space-sm c-pointer\">\n  {{ this.activeLanguage.toLocaleUpperCase() }}\n  <ta-font-icon name=\"arrow-big-bottom\"></ta-font-icon>\n</div>\n\n<mat-menu #menu=\"matMenu\">\n  <ta-switch-language></ta-switch-language>\n</mat-menu>\n", styles: [""], dependencies: [{ kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "component", type: MatMenu, selector: "mat-menu", inputs: ["backdropClass", "aria-label", "aria-labelledby", "aria-describedby", "xPosition", "yPosition", "overlapTrigger", "hasBackdrop", "class", "classList"], outputs: ["closed", "close"], exportAs: ["matMenu"] }, { kind: "component", type: SwitchLanguageComponent, selector: "ta-switch-language" }, { kind: "directive", type: MatMenuTrigger, selector: "[mat-menu-trigger-for], [matMenuTriggerFor]", inputs: ["mat-menu-trigger-for", "matMenuTriggerFor", "matMenuTriggerData", "matMenuTriggerRestoreFocus"], outputs: ["menuOpened", "onMenuOpen", "menuClosed", "onMenuClose"], exportAs: ["matMenuTrigger"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: SwitchLanguageCtaComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-switch-language-cta', standalone: true, imports: [FontIconComponent, MatMenu, SwitchLanguageComponent, MatMenuTrigger], template: "<div [matMenuTriggerFor]=\"menu\" class=\"flex-start g-space-sm c-pointer\">\n  {{ this.activeLanguage.toLocaleUpperCase() }}\n  <ta-font-icon name=\"arrow-big-bottom\"></ta-font-icon>\n</div>\n\n<mat-menu #menu=\"matMenu\">\n  <ta-switch-language></ta-switch-language>\n</mat-menu>\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dpdGNoLWxhbmd1YWdlLWN0YS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL21vZHVsZXMvdXNlci9jb21wb25lbnRzL3N3aXRjaC1sYW5ndWFnZS9zd2l0Y2gtbGFuZ3VhZ2UtY3RhL3N3aXRjaC1sYW5ndWFnZS1jdGEuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9tb2R1bGVzL3VzZXIvY29tcG9uZW50cy9zd2l0Y2gtbGFuZ3VhZ2Uvc3dpdGNoLWxhbmd1YWdlLWN0YS9zd2l0Y2gtbGFuZ3VhZ2UtY3RhLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFakUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQzlDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRXZELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDOztBQVN2RSxNQUFNLE9BQU8sMEJBQTBCO0lBUHZDO1FBUVcscUJBQWdCLEdBQUcsTUFBTSxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFFbEQsbUJBQWMsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxFQUFFLENBQUM7S0FDN0Q7K0dBSlksMEJBQTBCO21HQUExQiwwQkFBMEIsa0ZDZnZDLDhSQVFBLDBEREtZLGlCQUFpQixtRkFBRSxPQUFPLDJRQUFFLHVCQUF1QiwrREFBRSxjQUFjOzs0RkFFbEUsMEJBQTBCO2tCQVB0QyxTQUFTOytCQUNFLHdCQUF3QixjQUd0QixJQUFJLFdBQ1AsQ0FBQyxpQkFBaUIsRUFBRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsY0FBYyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBpbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1hdE1lbnUsIE1hdE1lbnVUcmlnZ2VyIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvbWVudSc7XG5cbmltcG9ydCB7IEZvbnRJY29uQ29tcG9uZW50IH0gZnJvbSAnQHRhL2ljb25zJztcbmltcG9ydCB7IFRhVHJhbnNsYXRpb25TZXJ2aWNlIH0gZnJvbSAnQHRhL3RyYW5zbGF0aW9uJztcblxuaW1wb3J0IHsgU3dpdGNoTGFuZ3VhZ2VDb21wb25lbnQgfSBmcm9tICcuLi9zd2l0Y2gtbGFuZ3VhZ2UuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGEtc3dpdGNoLWxhbmd1YWdlLWN0YScsXG4gIHRlbXBsYXRlVXJsOiAnLi9zd2l0Y2gtbGFuZ3VhZ2UtY3RhLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vc3dpdGNoLWxhbmd1YWdlLWN0YS5jb21wb25lbnQuc2NzcyddLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbRm9udEljb25Db21wb25lbnQsIE1hdE1lbnUsIFN3aXRjaExhbmd1YWdlQ29tcG9uZW50LCBNYXRNZW51VHJpZ2dlcl0sXG59KVxuZXhwb3J0IGNsYXNzIFN3aXRjaExhbmd1YWdlQ3RhQ29tcG9uZW50IHtcbiAgcmVhZG9ubHkgdHJhbnNsYXRlU2VydmljZSA9IGluamVjdChUYVRyYW5zbGF0aW9uU2VydmljZSk7XG5cbiAgcHVibGljIGFjdGl2ZUxhbmd1YWdlID0gdGhpcy50cmFuc2xhdGVTZXJ2aWNlLmdldExhbmd1YWdlKCk7XG59XG4iLCI8ZGl2IFttYXRNZW51VHJpZ2dlckZvcl09XCJtZW51XCIgY2xhc3M9XCJmbGV4LXN0YXJ0IGctc3BhY2Utc20gYy1wb2ludGVyXCI+XG4gIHt7IHRoaXMuYWN0aXZlTGFuZ3VhZ2UudG9Mb2NhbGVVcHBlckNhc2UoKSB9fVxuICA8dGEtZm9udC1pY29uIG5hbWU9XCJhcnJvdy1iaWctYm90dG9tXCI+PC90YS1mb250LWljb24+XG48L2Rpdj5cblxuPG1hdC1tZW51ICNtZW51PVwibWF0TWVudVwiPlxuICA8dGEtc3dpdGNoLWxhbmd1YWdlPjwvdGEtc3dpdGNoLWxhbmd1YWdlPlxuPC9tYXQtbWVudT5cbiJdfQ==