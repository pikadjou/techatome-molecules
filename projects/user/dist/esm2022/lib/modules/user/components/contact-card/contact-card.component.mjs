import { AsyncPipe, NgIf } from '@angular/common';
import { Component, Input } from '@angular/core';
import { FontIconComponent } from '@ta/icons';
import { EmptyComponent, ErrorComponent, LoaderComponent, UserLogoComponent } from '@ta/ui';
import { TaBaseComponent } from '@ta/utils';
import * as i0 from "@angular/core";
import * as i1 from "../../services/users.service";
export class ContactCardComponent extends TaBaseComponent {
    get user$() {
        return this._usersService.user.get$(this.userId);
    }
    constructor(_usersService) {
        super();
        this._usersService = _usersService;
        this.userId = '';
    }
    ngOnInit() {
        this._fetch();
    }
    getUserLogoData(user) {
        return {
            firstName: user.firstName,
            lastName: user.lastName,
            trigram: user.trigram,
            picture: user.picture,
        };
    }
    _fetch() {
        this.requestState.asked();
        this._usersService.fetchUser$(this.userId).subscribe({
            complete: () => this.requestState.completed(),
            error: (error) => {
                this.requestState.onError(error.status, error.statusText);
            },
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: ContactCardComponent, deps: [{ token: i1.TaUsersService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: ContactCardComponent, isStandalone: true, selector: "ta-contact-card", inputs: { userId: "userId" }, usesInheritance: true, ngImport: i0, template: "<ta-loader [isLoading]=\"this.requestState.isLoading()\" *ngLet=\"this.user$ | async as user\">\n  <ta-error [message]=\"this.requestState.getErrorMessage()\" [code]=\"this.requestState.getErrorStatus()\">\n    <ta-empty [isEmpty]=\"!user\">\n      @if (user) {\n        <ta-user-logo class=\"user-logo\" [user]=\"this.getUserLogoData(user)\"></ta-user-logo>\n      }\n      <div class=\"contact-name\">{{ user?.firstName }} {{ user?.lastName }}</div>\n      <div class=\"contacts align-center\">\n        <div class=\"phone align-center\">\n          <ta-font-icon class=\"mr-space-xs\" name=\"phone\"></ta-font-icon>\n          {{ user?.phoneNumber }}\n        </div>\n        <div class=\"mail align-center\">\n          <ta-font-icon class=\"mr-space-xs\" name=\"mail\"></ta-font-icon>\n          {{ user?.userName }}\n        </div>\n      </div>\n    </ta-empty>\n  </ta-error>\n</ta-loader>\n", styles: [".contact-name{font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-default-weight)}.user-logo{display:flex;padding-bottom:var(--ta-space-xs)}.contacts{padding-top:var(--ta-space-sm);gap:var(--ta-space-xl)}ta-font-icon{color:var(--ta-icon-brand-primary)}\n"], dependencies: [{ kind: "pipe", type: AsyncPipe, name: "async" }, { kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "component", type: LoaderComponent, selector: "ta-loader", inputs: ["isLoading", "skeleton"] }, { kind: "component", type: ErrorComponent, selector: "ta-error", inputs: ["message", "code"] }, { kind: "component", type: EmptyComponent, selector: "ta-empty", inputs: ["isEmpty", "isLight", "showMessage", "text", "type", "icon", "iconSize"] }, { kind: "component", type: UserLogoComponent, selector: "ta-user-logo", inputs: ["userInfo", "user", "size", "forcedSize", "defaultType"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: ContactCardComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-contact-card', standalone: true, imports: [NgIf, AsyncPipe, FontIconComponent, LoaderComponent, ErrorComponent, EmptyComponent, UserLogoComponent], template: "<ta-loader [isLoading]=\"this.requestState.isLoading()\" *ngLet=\"this.user$ | async as user\">\n  <ta-error [message]=\"this.requestState.getErrorMessage()\" [code]=\"this.requestState.getErrorStatus()\">\n    <ta-empty [isEmpty]=\"!user\">\n      @if (user) {\n        <ta-user-logo class=\"user-logo\" [user]=\"this.getUserLogoData(user)\"></ta-user-logo>\n      }\n      <div class=\"contact-name\">{{ user?.firstName }} {{ user?.lastName }}</div>\n      <div class=\"contacts align-center\">\n        <div class=\"phone align-center\">\n          <ta-font-icon class=\"mr-space-xs\" name=\"phone\"></ta-font-icon>\n          {{ user?.phoneNumber }}\n        </div>\n        <div class=\"mail align-center\">\n          <ta-font-icon class=\"mr-space-xs\" name=\"mail\"></ta-font-icon>\n          {{ user?.userName }}\n        </div>\n      </div>\n    </ta-empty>\n  </ta-error>\n</ta-loader>\n", styles: [".contact-name{font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-default-weight)}.user-logo{display:flex;padding-bottom:var(--ta-space-xs)}.contacts{padding-top:var(--ta-space-sm);gap:var(--ta-space-xl)}ta-font-icon{color:var(--ta-icon-brand-primary)}\n"] }]
        }], ctorParameters: () => [{ type: i1.TaUsersService }], propDecorators: { userId: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGFjdC1jYXJkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvbW9kdWxlcy91c2VyL2NvbXBvbmVudHMvY29udGFjdC1jYXJkL2NvbnRhY3QtY2FyZC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL21vZHVsZXMvdXNlci9jb21wb25lbnRzL2NvbnRhY3QtY2FyZC9jb250YWN0LWNhcmQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUVsRCxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDOUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsZUFBZSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQzVGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxXQUFXLENBQUM7OztBQVk1QyxNQUFNLE9BQU8sb0JBQXFCLFNBQVEsZUFBZTtJQUl2RCxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbkQsQ0FBQztJQUVELFlBQW9CLGFBQTZCO1FBQy9DLEtBQUssRUFBRSxDQUFDO1FBRFUsa0JBQWEsR0FBYixhQUFhLENBQWdCO1FBTmpELFdBQU0sR0FBVyxFQUFFLENBQUM7SUFRcEIsQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVNLGVBQWUsQ0FBQyxJQUFVO1FBQy9CLE9BQU87WUFDTCxTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVM7WUFDekIsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO1lBQ3ZCLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTztZQUNyQixPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU87U0FDdEIsQ0FBQztJQUNKLENBQUM7SUFFTyxNQUFNO1FBQ1osSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUMxQixJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsU0FBUyxDQUFDO1lBQ25ELFFBQVEsRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsRUFBRTtZQUM3QyxLQUFLLEVBQUUsQ0FBQyxLQUF3QixFQUFFLEVBQUU7Z0JBQ2xDLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQzVELENBQUM7U0FDRixDQUFDLENBQUM7SUFDTCxDQUFDOytHQWpDVSxvQkFBb0I7bUdBQXBCLG9CQUFvQixnSUNsQmpDLHE0QkFvQkEsK1hESmtCLFNBQVMsOENBQUUsaUJBQWlCLG1GQUFFLGVBQWUseUZBQUUsY0FBYyxrRkFBRSxjQUFjLHdJQUFFLGlCQUFpQjs7NEZBRXJHLG9CQUFvQjtrQkFQaEMsU0FBUzsrQkFDRSxpQkFBaUIsY0FHZixJQUFJLFdBQ1AsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLGlCQUFpQixFQUFFLGVBQWUsRUFBRSxjQUFjLEVBQUUsY0FBYyxFQUFFLGlCQUFpQixDQUFDO21GQUlqSCxNQUFNO3NCQURMLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc3luY1BpcGUsIE5nSWYgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgSHR0cEVycm9yUmVzcG9uc2UgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IEZvbnRJY29uQ29tcG9uZW50IH0gZnJvbSAnQHRhL2ljb25zJztcbmltcG9ydCB7IEVtcHR5Q29tcG9uZW50LCBFcnJvckNvbXBvbmVudCwgTG9hZGVyQ29tcG9uZW50LCBVc2VyTG9nb0NvbXBvbmVudCB9IGZyb20gJ0B0YS91aSc7XG5pbXBvcnQgeyBUYUJhc2VDb21wb25lbnQgfSBmcm9tICdAdGEvdXRpbHMnO1xuXG5pbXBvcnQgeyBUYVVzZXJzU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3VzZXJzLnNlcnZpY2UnO1xuaW1wb3J0IHsgVXNlciB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3VzZXJzL2R0by91c2VyJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGEtY29udGFjdC1jYXJkJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2NvbnRhY3QtY2FyZC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2NvbnRhY3QtY2FyZC5jb21wb25lbnQuc2NzcyddLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbTmdJZiwgQXN5bmNQaXBlLCBGb250SWNvbkNvbXBvbmVudCwgTG9hZGVyQ29tcG9uZW50LCBFcnJvckNvbXBvbmVudCwgRW1wdHlDb21wb25lbnQsIFVzZXJMb2dvQ29tcG9uZW50XSxcbn0pXG5leHBvcnQgY2xhc3MgQ29udGFjdENhcmRDb21wb25lbnQgZXh0ZW5kcyBUYUJhc2VDb21wb25lbnQge1xuICBASW5wdXQoKVxuICB1c2VySWQ6IHN0cmluZyA9ICcnO1xuXG4gIGdldCB1c2VyJCgpIHtcbiAgICByZXR1cm4gdGhpcy5fdXNlcnNTZXJ2aWNlLnVzZXIuZ2V0JCh0aGlzLnVzZXJJZCk7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF91c2Vyc1NlcnZpY2U6IFRhVXNlcnNTZXJ2aWNlKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuX2ZldGNoKCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0VXNlckxvZ29EYXRhKHVzZXI6IFVzZXIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZmlyc3ROYW1lOiB1c2VyLmZpcnN0TmFtZSxcbiAgICAgIGxhc3ROYW1lOiB1c2VyLmxhc3ROYW1lLFxuICAgICAgdHJpZ3JhbTogdXNlci50cmlncmFtLFxuICAgICAgcGljdHVyZTogdXNlci5waWN0dXJlLFxuICAgIH07XG4gIH1cblxuICBwcml2YXRlIF9mZXRjaCgpIHtcbiAgICB0aGlzLnJlcXVlc3RTdGF0ZS5hc2tlZCgpO1xuICAgIHRoaXMuX3VzZXJzU2VydmljZS5mZXRjaFVzZXIkKHRoaXMudXNlcklkKS5zdWJzY3JpYmUoe1xuICAgICAgY29tcGxldGU6ICgpID0+IHRoaXMucmVxdWVzdFN0YXRlLmNvbXBsZXRlZCgpLFxuICAgICAgZXJyb3I6IChlcnJvcjogSHR0cEVycm9yUmVzcG9uc2UpID0+IHtcbiAgICAgICAgdGhpcy5yZXF1ZXN0U3RhdGUub25FcnJvcihlcnJvci5zdGF0dXMsIGVycm9yLnN0YXR1c1RleHQpO1xuICAgICAgfSxcbiAgICB9KTtcbiAgfVxufVxuIiwiPHRhLWxvYWRlciBbaXNMb2FkaW5nXT1cInRoaXMucmVxdWVzdFN0YXRlLmlzTG9hZGluZygpXCIgKm5nTGV0PVwidGhpcy51c2VyJCB8IGFzeW5jIGFzIHVzZXJcIj5cbiAgPHRhLWVycm9yIFttZXNzYWdlXT1cInRoaXMucmVxdWVzdFN0YXRlLmdldEVycm9yTWVzc2FnZSgpXCIgW2NvZGVdPVwidGhpcy5yZXF1ZXN0U3RhdGUuZ2V0RXJyb3JTdGF0dXMoKVwiPlxuICAgIDx0YS1lbXB0eSBbaXNFbXB0eV09XCIhdXNlclwiPlxuICAgICAgQGlmICh1c2VyKSB7XG4gICAgICAgIDx0YS11c2VyLWxvZ28gY2xhc3M9XCJ1c2VyLWxvZ29cIiBbdXNlcl09XCJ0aGlzLmdldFVzZXJMb2dvRGF0YSh1c2VyKVwiPjwvdGEtdXNlci1sb2dvPlxuICAgICAgfVxuICAgICAgPGRpdiBjbGFzcz1cImNvbnRhY3QtbmFtZVwiPnt7IHVzZXI/LmZpcnN0TmFtZSB9fSB7eyB1c2VyPy5sYXN0TmFtZSB9fTwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cImNvbnRhY3RzIGFsaWduLWNlbnRlclwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwicGhvbmUgYWxpZ24tY2VudGVyXCI+XG4gICAgICAgICAgPHRhLWZvbnQtaWNvbiBjbGFzcz1cIm1yLXNwYWNlLXhzXCIgbmFtZT1cInBob25lXCI+PC90YS1mb250LWljb24+XG4gICAgICAgICAge3sgdXNlcj8ucGhvbmVOdW1iZXIgfX1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJtYWlsIGFsaWduLWNlbnRlclwiPlxuICAgICAgICAgIDx0YS1mb250LWljb24gY2xhc3M9XCJtci1zcGFjZS14c1wiIG5hbWU9XCJtYWlsXCI+PC90YS1mb250LWljb24+XG4gICAgICAgICAge3sgdXNlcj8udXNlck5hbWUgfX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L3RhLWVtcHR5PlxuICA8L3RhLWVycm9yPlxuPC90YS1sb2FkZXI+XG4iXX0=