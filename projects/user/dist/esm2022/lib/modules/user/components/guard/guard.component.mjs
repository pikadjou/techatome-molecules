import { NgIf } from '@angular/common';
import { Component, Input, inject } from '@angular/core';
import { FontIconComponent } from '@ta/icons';
import { CamIconType } from '@ta/icons';
import { TaMainRoute, TaRoutes } from '@ta/menu';
import { TranslatePipe } from '@ta/translation';
import { ButtonComponent } from '@ta/ui';
import { CamAbstractComponent } from '@ta/utils';
import { CamPermissionsService } from '../../services/permissions.service';
import * as i0 from "@angular/core";
export class GuardComponent extends CamAbstractComponent {
    get noAccessIcon() {
        return CamIconType.NoAccess;
    }
    constructor() {
        super();
        this.canDisplayErrorMessage = true;
        this._permissionsService = inject(CamPermissionsService);
    }
    isGuardValid() {
        return this._permissionsService.canDirectAccess(this.feature, this.level);
    }
    goToLogin() {
        this._router.navigateByUrl(TaRoutes.getUrl([TaMainRoute.USERLOGIN]));
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: GuardComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: GuardComponent, isStandalone: true, selector: "ta-guard", inputs: { level: "level", feature: "feature", canDisplayErrorMessage: "canDisplayErrorMessage" }, usesInheritance: true, ngImport: i0, template: "<div class=\"guard\">\n  @if (this.isGuardValid()) {\n    <div class=\"guard-valid\">\n      <ng-content></ng-content>\n    </div>\n  }\n  @if (!this.isGuardValid() && this.canDisplayErrorMessage) {\n    <div class=\"guard-no-valid ta-c\">\n      <ta-font-icon name=\"close-tool\" size=\"md\"></ta-font-icon>\n      {{ 'container.guard.content' | translate }}\n\n      @if (this.level === 'authenticated') {\n        <ta-button (action)=\"this.goToLogin()\"> Me connecter </ta-button>\n      }\n    </div>\n  }\n</div>\n", styles: [""], dependencies: [{ kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "component", type: ButtonComponent, selector: "ta-button", inputs: ["state", "type", "size", "icon", "options", "stopPropagationActivation"], outputs: ["action"] }, { kind: "pipe", type: TranslatePipe, name: "translate" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: GuardComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-guard', standalone: true, imports: [NgIf, FontIconComponent, ButtonComponent, TranslatePipe], template: "<div class=\"guard\">\n  @if (this.isGuardValid()) {\n    <div class=\"guard-valid\">\n      <ng-content></ng-content>\n    </div>\n  }\n  @if (!this.isGuardValid() && this.canDisplayErrorMessage) {\n    <div class=\"guard-no-valid ta-c\">\n      <ta-font-icon name=\"close-tool\" size=\"md\"></ta-font-icon>\n      {{ 'container.guard.content' | translate }}\n\n      @if (this.level === 'authenticated') {\n        <ta-button (action)=\"this.goToLogin()\"> Me connecter </ta-button>\n      }\n    </div>\n  }\n</div>\n" }]
        }], ctorParameters: () => [], propDecorators: { level: [{
                type: Input
            }], feature: [{
                type: Input
            }], canDisplayErrorMessage: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3VhcmQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9tb2R1bGVzL3VzZXIvY29tcG9uZW50cy9ndWFyZC9ndWFyZC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL21vZHVsZXMvdXNlci9jb21wb25lbnRzL2d1YXJkL2d1YXJkLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2QyxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQzlDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDeEMsT0FBTyxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDakQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDekMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRWpELE9BQU8sRUFBRSxxQkFBcUIsRUFBb0MsTUFBTSxvQ0FBb0MsQ0FBQzs7QUFTN0csTUFBTSxPQUFPLGNBQWUsU0FBUSxvQkFBb0I7SUFXdEQsSUFBSSxZQUFZO1FBQ2QsT0FBTyxXQUFXLENBQUMsUUFBUSxDQUFDO0lBQzlCLENBQUM7SUFFRDtRQUNFLEtBQUssRUFBRSxDQUFDO1FBUlYsMkJBQXNCLEdBQVksSUFBSSxDQUFDO1FBRXRCLHdCQUFtQixHQUFHLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0lBT3JFLENBQUM7SUFFTSxZQUFZO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLG1CQUFtQixDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM1RSxDQUFDO0lBRU0sU0FBUztRQUNkLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3ZFLENBQUM7K0dBekJVLGNBQWM7bUdBQWQsY0FBYyw2TENuQjNCLDBnQkFpQkEsMEREQWtCLGlCQUFpQixtRkFBRSxlQUFlLHlKQUFFLGFBQWE7OzRGQUV0RCxjQUFjO2tCQVAxQixTQUFTOytCQUNFLFVBQVUsY0FHUixJQUFJLFdBQ1AsQ0FBQyxJQUFJLEVBQUUsaUJBQWlCLEVBQUUsZUFBZSxFQUFFLGFBQWEsQ0FBQzt3REFJbEUsS0FBSztzQkFESixLQUFLO2dCQUlOLE9BQU87c0JBRE4sS0FBSztnQkFJTixzQkFBc0I7c0JBRHJCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ0lmIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIGluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBGb250SWNvbkNvbXBvbmVudCB9IGZyb20gJ0B0YS9pY29ucyc7XG5pbXBvcnQgeyBDYW1JY29uVHlwZSB9IGZyb20gJ0B0YS9pY29ucyc7XG5pbXBvcnQgeyBUYU1haW5Sb3V0ZSwgVGFSb3V0ZXMgfSBmcm9tICdAdGEvbWVudSc7XG5pbXBvcnQgeyBUcmFuc2xhdGVQaXBlIH0gZnJvbSAnQHRhL3RyYW5zbGF0aW9uJztcbmltcG9ydCB7IEJ1dHRvbkNvbXBvbmVudCB9IGZyb20gJ0B0YS91aSc7XG5pbXBvcnQgeyBDYW1BYnN0cmFjdENvbXBvbmVudCB9IGZyb20gJ0B0YS91dGlscyc7XG5cbmltcG9ydCB7IENhbVBlcm1pc3Npb25zU2VydmljZSwgRG9tYWluLCBMZXZlbCwgUGVybWlzc2lvbkZlYXR1cmUgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9wZXJtaXNzaW9ucy5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGEtZ3VhcmQnLFxuICB0ZW1wbGF0ZVVybDogJy4vZ3VhcmQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9ndWFyZC5jb21wb25lbnQuc2NzcyddLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbTmdJZiwgRm9udEljb25Db21wb25lbnQsIEJ1dHRvbkNvbXBvbmVudCwgVHJhbnNsYXRlUGlwZV0sXG59KVxuZXhwb3J0IGNsYXNzIEd1YXJkQ29tcG9uZW50IGV4dGVuZHMgQ2FtQWJzdHJhY3RDb21wb25lbnQge1xuICBASW5wdXQoKVxuICBsZXZlbCE6IExldmVsIHwgc3RyaW5nO1xuXG4gIEBJbnB1dCgpXG4gIGZlYXR1cmUhOiBQZXJtaXNzaW9uRmVhdHVyZSB8IERvbWFpbiB8IHN0cmluZztcblxuICBASW5wdXQoKVxuICBjYW5EaXNwbGF5RXJyb3JNZXNzYWdlOiBib29sZWFuID0gdHJ1ZTtcblxuICBwcml2YXRlIHJlYWRvbmx5IF9wZXJtaXNzaW9uc1NlcnZpY2UgPSBpbmplY3QoQ2FtUGVybWlzc2lvbnNTZXJ2aWNlKTtcbiAgZ2V0IG5vQWNjZXNzSWNvbigpIHtcbiAgICByZXR1cm4gQ2FtSWNvblR5cGUuTm9BY2Nlc3M7XG4gIH1cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgcHVibGljIGlzR3VhcmRWYWxpZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fcGVybWlzc2lvbnNTZXJ2aWNlLmNhbkRpcmVjdEFjY2Vzcyh0aGlzLmZlYXR1cmUsIHRoaXMubGV2ZWwpO1xuICB9XG5cbiAgcHVibGljIGdvVG9Mb2dpbigpIHtcbiAgICB0aGlzLl9yb3V0ZXIubmF2aWdhdGVCeVVybChUYVJvdXRlcy5nZXRVcmwoW1RhTWFpblJvdXRlLlVTRVJMT0dJTl0pKTtcbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cImd1YXJkXCI+XG4gIEBpZiAodGhpcy5pc0d1YXJkVmFsaWQoKSkge1xuICAgIDxkaXYgY2xhc3M9XCJndWFyZC12YWxpZFwiPlxuICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICAgIDwvZGl2PlxuICB9XG4gIEBpZiAoIXRoaXMuaXNHdWFyZFZhbGlkKCkgJiYgdGhpcy5jYW5EaXNwbGF5RXJyb3JNZXNzYWdlKSB7XG4gICAgPGRpdiBjbGFzcz1cImd1YXJkLW5vLXZhbGlkIHRhLWNcIj5cbiAgICAgIDx0YS1mb250LWljb24gbmFtZT1cImNsb3NlLXRvb2xcIiBzaXplPVwibWRcIj48L3RhLWZvbnQtaWNvbj5cbiAgICAgIHt7ICdjb250YWluZXIuZ3VhcmQuY29udGVudCcgfCB0cmFuc2xhdGUgfX1cblxuICAgICAgQGlmICh0aGlzLmxldmVsID09PSAnYXV0aGVudGljYXRlZCcpIHtcbiAgICAgICAgPHRhLWJ1dHRvbiAoYWN0aW9uKT1cInRoaXMuZ29Ub0xvZ2luKClcIj4gTWUgY29ubmVjdGVyIDwvdGEtYnV0dG9uPlxuICAgICAgfVxuICAgIDwvZGl2PlxuICB9XG48L2Rpdj5cbiJdfQ==