import { NgIf } from '@angular/common';
import { Component, Input, inject } from '@angular/core';
import { FontIconComponent } from '@ta/icons';
import { CamIconType } from '@ta/icons';
import { TaMainRoute, TaRoutes } from '@ta/menu';
import { TranslatePipe } from '@ta/translation';
import { ButtonComponent } from '@ta/ui';
import { TaAbstractComponent } from '@ta/utils';
import { CamPermissionsService } from '../../services/permissions.service';
import * as i0 from "@angular/core";
export class GuardComponent extends TaAbstractComponent {
    get noAccessIcon() {
        return CamIconType.NoAccess;
    }
    constructor() {
        super();
        this.canDisplayErrorMessage = true;
        this._permissionsService = inject(CamPermissionsService);
    }
    isGuardValid() {
        return this._permissionsService.canDirectAccess(this.feature, this.level);
    }
    goToLogin() {
        this._router.navigateByUrl(TaRoutes.getUrl([TaMainRoute.USERLOGIN]));
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: GuardComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: GuardComponent, isStandalone: true, selector: "ta-guard", inputs: { level: "level", feature: "feature", canDisplayErrorMessage: "canDisplayErrorMessage" }, usesInheritance: true, ngImport: i0, template: "<div class=\"guard\">\n  @if (this.isGuardValid()) {\n    <div class=\"guard-valid\">\n      <ng-content></ng-content>\n    </div>\n  }\n  @if (!this.isGuardValid() && this.canDisplayErrorMessage) {\n    <div class=\"guard-no-valid ta-c\">\n      <ta-font-icon name=\"close-tool\" size=\"md\"></ta-font-icon>\n      {{ 'container.guard.content' | translate }}\n\n      @if (this.level === 'authenticated') {\n        <ta-button (action)=\"this.goToLogin()\"> Me connecter </ta-button>\n      }\n    </div>\n  }\n</div>\n", styles: [""], dependencies: [{ kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "component", type: ButtonComponent, selector: "ta-button", inputs: ["state", "type", "size", "icon", "options", "stopPropagationActivation"], outputs: ["action"] }, { kind: "pipe", type: TranslatePipe, name: "translate" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: GuardComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-guard', standalone: true, imports: [NgIf, FontIconComponent, ButtonComponent, TranslatePipe], template: "<div class=\"guard\">\n  @if (this.isGuardValid()) {\n    <div class=\"guard-valid\">\n      <ng-content></ng-content>\n    </div>\n  }\n  @if (!this.isGuardValid() && this.canDisplayErrorMessage) {\n    <div class=\"guard-no-valid ta-c\">\n      <ta-font-icon name=\"close-tool\" size=\"md\"></ta-font-icon>\n      {{ 'container.guard.content' | translate }}\n\n      @if (this.level === 'authenticated') {\n        <ta-button (action)=\"this.goToLogin()\"> Me connecter </ta-button>\n      }\n    </div>\n  }\n</div>\n" }]
        }], ctorParameters: () => [], propDecorators: { level: [{
                type: Input
            }], feature: [{
                type: Input
            }], canDisplayErrorMessage: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3VhcmQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9tb2R1bGVzL3VzZXIvY29tcG9uZW50cy9ndWFyZC9ndWFyZC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL21vZHVsZXMvdXNlci9jb21wb25lbnRzL2d1YXJkL2d1YXJkLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2QyxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQzlDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDeEMsT0FBTyxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDakQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDekMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRWhELE9BQU8sRUFBRSxxQkFBcUIsRUFBb0MsTUFBTSxvQ0FBb0MsQ0FBQzs7QUFTN0csTUFBTSxPQUFPLGNBQWUsU0FBUSxtQkFBbUI7SUFXckQsSUFBSSxZQUFZO1FBQ2QsT0FBTyxXQUFXLENBQUMsUUFBUSxDQUFDO0lBQzlCLENBQUM7SUFFRDtRQUNFLEtBQUssRUFBRSxDQUFDO1FBUlYsMkJBQXNCLEdBQVksSUFBSSxDQUFDO1FBRXRCLHdCQUFtQixHQUFHLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0lBT3JFLENBQUM7SUFFTSxZQUFZO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLG1CQUFtQixDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM1RSxDQUFDO0lBRU0sU0FBUztRQUNkLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3ZFLENBQUM7K0dBekJVLGNBQWM7bUdBQWQsY0FBYyw2TENuQjNCLDBnQkFpQkEsMEREQWtCLGlCQUFpQixtRkFBRSxlQUFlLHlKQUFFLGFBQWE7OzRGQUV0RCxjQUFjO2tCQVAxQixTQUFTOytCQUNFLFVBQVUsY0FHUixJQUFJLFdBQ1AsQ0FBQyxJQUFJLEVBQUUsaUJBQWlCLEVBQUUsZUFBZSxFQUFFLGFBQWEsQ0FBQzt3REFJbEUsS0FBSztzQkFESixLQUFLO2dCQUlOLE9BQU87c0JBRE4sS0FBSztnQkFJTixzQkFBc0I7c0JBRHJCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ0lmIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIGluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBGb250SWNvbkNvbXBvbmVudCB9IGZyb20gJ0B0YS9pY29ucyc7XG5pbXBvcnQgeyBDYW1JY29uVHlwZSB9IGZyb20gJ0B0YS9pY29ucyc7XG5pbXBvcnQgeyBUYU1haW5Sb3V0ZSwgVGFSb3V0ZXMgfSBmcm9tICdAdGEvbWVudSc7XG5pbXBvcnQgeyBUcmFuc2xhdGVQaXBlIH0gZnJvbSAnQHRhL3RyYW5zbGF0aW9uJztcbmltcG9ydCB7IEJ1dHRvbkNvbXBvbmVudCB9IGZyb20gJ0B0YS91aSc7XG5pbXBvcnQgeyBUYUFic3RyYWN0Q29tcG9uZW50IH0gZnJvbSAnQHRhL3V0aWxzJztcblxuaW1wb3J0IHsgQ2FtUGVybWlzc2lvbnNTZXJ2aWNlLCBEb21haW4sIExldmVsLCBQZXJtaXNzaW9uRmVhdHVyZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3Blcm1pc3Npb25zLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0YS1ndWFyZCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9ndWFyZC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2d1YXJkLmNvbXBvbmVudC5zY3NzJ10sXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtOZ0lmLCBGb250SWNvbkNvbXBvbmVudCwgQnV0dG9uQ29tcG9uZW50LCBUcmFuc2xhdGVQaXBlXSxcbn0pXG5leHBvcnQgY2xhc3MgR3VhcmRDb21wb25lbnQgZXh0ZW5kcyBUYUFic3RyYWN0Q29tcG9uZW50IHtcbiAgQElucHV0KClcbiAgbGV2ZWwhOiBMZXZlbCB8IHN0cmluZztcblxuICBASW5wdXQoKVxuICBmZWF0dXJlITogUGVybWlzc2lvbkZlYXR1cmUgfCBEb21haW4gfCBzdHJpbmc7XG5cbiAgQElucHV0KClcbiAgY2FuRGlzcGxheUVycm9yTWVzc2FnZTogYm9vbGVhbiA9IHRydWU7XG5cbiAgcHJpdmF0ZSByZWFkb25seSBfcGVybWlzc2lvbnNTZXJ2aWNlID0gaW5qZWN0KENhbVBlcm1pc3Npb25zU2VydmljZSk7XG4gIGdldCBub0FjY2Vzc0ljb24oKSB7XG4gICAgcmV0dXJuIENhbUljb25UeXBlLk5vQWNjZXNzO1xuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIHB1YmxpYyBpc0d1YXJkVmFsaWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX3Blcm1pc3Npb25zU2VydmljZS5jYW5EaXJlY3RBY2Nlc3ModGhpcy5mZWF0dXJlLCB0aGlzLmxldmVsKTtcbiAgfVxuXG4gIHB1YmxpYyBnb1RvTG9naW4oKSB7XG4gICAgdGhpcy5fcm91dGVyLm5hdmlnYXRlQnlVcmwoVGFSb3V0ZXMuZ2V0VXJsKFtUYU1haW5Sb3V0ZS5VU0VSTE9HSU5dKSk7XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJndWFyZFwiPlxuICBAaWYgKHRoaXMuaXNHdWFyZFZhbGlkKCkpIHtcbiAgICA8ZGl2IGNsYXNzPVwiZ3VhcmQtdmFsaWRcIj5cbiAgICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgICA8L2Rpdj5cbiAgfVxuICBAaWYgKCF0aGlzLmlzR3VhcmRWYWxpZCgpICYmIHRoaXMuY2FuRGlzcGxheUVycm9yTWVzc2FnZSkge1xuICAgIDxkaXYgY2xhc3M9XCJndWFyZC1uby12YWxpZCB0YS1jXCI+XG4gICAgICA8dGEtZm9udC1pY29uIG5hbWU9XCJjbG9zZS10b29sXCIgc2l6ZT1cIm1kXCI+PC90YS1mb250LWljb24+XG4gICAgICB7eyAnY29udGFpbmVyLmd1YXJkLmNvbnRlbnQnIHwgdHJhbnNsYXRlIH19XG5cbiAgICAgIEBpZiAodGhpcy5sZXZlbCA9PT0gJ2F1dGhlbnRpY2F0ZWQnKSB7XG4gICAgICAgIDx0YS1idXR0b24gKGFjdGlvbik9XCJ0aGlzLmdvVG9Mb2dpbigpXCI+IE1lIGNvbm5lY3RlciA8L3RhLWJ1dHRvbj5cbiAgICAgIH1cbiAgICA8L2Rpdj5cbiAgfVxuPC9kaXY+XG4iXX0=