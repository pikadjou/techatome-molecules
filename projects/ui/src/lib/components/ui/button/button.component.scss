@use "ta/utils/mixins/flex";
@use "ta/utils/mixins/common";
@use "ta/utils/mixins/fonts";

.button {
  width: 100%;

  border: none;

  border-radius: common.get-var(components, button, radius);
  padding: common.get-var(components, button, padding-vertical) common.get-var(components, button, padding-horizontal);

  @include fonts.fontSizeBody(md);

  @include flex.align-center();
  @include flex.justify-center();

  gap: common.get-var(components, button, gap);

  &.small {
    @include fonts.fontSizeBody(sm);
    padding: common.get-var(components, button, small, padding-vertical) common.get-var(components, button, small, padding-horizontal);
  }
  &.large {
    padding: common.get-var(components, button, large, padding-vertical) common.get-var(components, button, large, padding-horizontal);
  }
  &.no-border {
    border: none;
  }
  &.disabled,
  &.inactive {
    cursor: not-allowed;
  }
  &.primary {
    color: common.get-var(components, button, primary, color);
    background-color: common.get-var(components, button, primary, background);

    &:hover {
      color: common.get-var(components, button, primary, hover, color);
      background-color: common.get-var(components, button, primary, hover, background);
      border: 1px solid common.get-var(components, button, primary, hover, border);

    }

    &.disabled {
      color: common.get-var(components, button, primary, disabled, color);
      background-color: common.get-var(components, button,  primary, disabled, background);
    }
    &.inactive {
      color: common.get-var(components, button, primary, inactive, color);
      background-color: common.get-var(components, button,  primary, inactive, background);
    }

  }
  &.secondary {
    color: common.get-var(components, button, secondary, color);
    background-color: common.get-var(components, button, secondary, background);
    border: 1px solid common.get-var(components, button, secondary, border);
    &:hover {
      border-color: common.get-var(components, button, secondary, hover, border);
    }
    &.disabled {
      color: common.get-var(components, button, secondary, disabled, color);
      border-color: common.get-var(components, button, secondary, disabled, border);
    }
    &.inactive {
      border-color: common.get-var(components, button, secondary, inactive, border);
    }

    ta-font-icon {
      color: common.get-var(components, button, secondary, icon, color);
    }
  }
  &.tertiary {
    color: common.get-var(components, button, tertiary, color);
    background-color: common.get-var(components, button, tertiary, background);
    border: 1px solid common.get-var(components, button, tertiary, border);
    &:hover {
      color: common.get-var(components, button, tertiary, hover, color);
      background-color: common.get-var(components, button, tertiary, hover, border);
      border-color: common.get-var(components, button, tertiary, hover, border);
    }
    &.disabled {
      color: common.get-var(components, button, tertiary, disabled, color);
      border-color: common.get-var(components, button, tertiary, disabled, border);
    }
    &.inactive {
      border-color: common.get-var(components, button, tertiary, inactive, border);
    }
  }
}

.circular {
  height: common.get-var(components, button, circular, height);
  width: common.get-var(components, button, circular, width);
  border-radius: common.get-var(components, button, circular, radius);
  padding: common.get-var(components, button, circular, padding);

  &.big {
    height: common.get-var(components, button, circular, big, height);
    width: common.get-var(components, button, circular, big, width);
  }
  &.small {
    height: common.get-var(components, button, circular, small, height);
    width: common.get-var(components, button, circular, small, width);
  }
}
