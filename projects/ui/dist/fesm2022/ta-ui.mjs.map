{"version":3,"file":"ta-ui.mjs","sources":["../../src/lib/components/ui/translation.service.ts","../../src/lib/components/ui/badge/badge.component.ts","../../src/lib/components/ui/badge/badge.component.html","../../src/lib/components/ui/bullet/bullet.component.ts","../../src/lib/components/ui/bullet/bullet.component.html","../../src/lib/components/ui/button/action/action-button.component.ts","../../src/lib/components/ui/button/action/action-button.component.html","../../src/lib/components/ui/button/button.component.ts","../../src/lib/components/ui/button/button.component.html","../../src/lib/components/ui/button/dual/dual-button.component.ts","../../src/lib/components/ui/button/dual/dual-button.component.html","../../src/lib/components/ui/button/tool/tool.component.ts","../../src/lib/components/ui/button/tool/tool.component.html","../../src/lib/components/ui/civility/civility.component.ts","../../src/lib/components/ui/civility/civility.component.html","../../src/lib/components/ui/contact-information/contact-information.component.ts","../../src/lib/components/ui/contact-information/contact-information.component.html","../../src/lib/components/ui/criticity/criticity.component.ts","../../src/lib/components/ui/criticity/criticity.component.html","../../src/lib/components/ui/culture/culture.component.ts","../../src/lib/components/ui/culture/culture.component.html","../../src/lib/components/ui/departments/department-icon-list/department-icon-list.component.ts","../../src/lib/components/ui/departments/department-icon-list/department-icon-list.component.html","../../src/lib/components/ui/departments/professions/professions.component.ts","../../src/lib/components/ui/departments/professions/professions.component.html","../../src/lib/components/ui/departments/departments.component.ts","../../src/lib/components/ui/departments/departments.component.html","../../src/lib/components/ui/duration/duration.component.ts","../../src/lib/components/ui/duration/duration.component.html","../../src/lib/components/ui/expandable-text/expandable-text.component.ts","../../src/lib/components/ui/expandable-text/expandable-text.component.html","../../src/lib/components/ui/expansion-panel/expansion-panel.component.ts","../../src/lib/components/ui/expansion-panel/expansion-panel.component.html","../../src/lib/components/ui/file-image/file-image.component.ts","../../src/lib/components/ui/file-image/file-image.component.html","../../src/lib/components/ui/hour-date-line/hour-date-line.component.ts","../../src/lib/components/ui/hour-date-line/hour-date-line.component.html","../../src/lib/components/ui/label/label.component.ts","../../src/lib/components/ui/label/label.component.html","../../src/lib/components/ui/link/link.component.ts","../../src/lib/components/ui/link/link.component.html","../../src/lib/components/ui/logo/logo.component.ts","../../src/lib/components/ui/logo/logo.component.html","../../src/lib/components/ui/megaoctet/megaoctet.component.ts","../../src/lib/components/ui/megaoctet/megaoctet.component.html","../../src/lib/components/ui/new/new.component.ts","../../src/lib/components/ui/new/new.component.html","../../src/lib/components/ui/notification-badge/notification-badge-container.component.ts","../../src/lib/components/ui/notification-badge/notification-badge-container.component.html","../../src/lib/components/ui/notification-badge/notification-badge/notification-badge.component.ts","../../src/lib/components/ui/notification-badge/notification-badge/notification-badge.component.html","../../src/lib/components/ui/typed-message/typed-message.component.ts","../../src/lib/components/ui/typed-message/typed-message.component.html","../../src/lib/components/ui/picture-info-message/picture-info-message.component.ts","../../src/lib/components/ui/picture-info-message/picture-info-message.component.html","../../src/lib/components/ui/progress-bar/progress-bar.component.ts","../../src/lib/components/ui/progress-bar/progress-bar.component.html","../../src/lib/components/ui/progress/circle/progress-circle/progress-circle.component.ts","../../src/lib/components/ui/progress/circle/progress-circle/progress-circle.component.html","../../src/lib/components/ui/title/title.component.ts","../../src/lib/components/ui/title/title.component.html","../../src/lib/components/ui/progress/progress-bar-data/progress-bar-data.component.ts","../../src/lib/components/ui/progress/progress-bar-data/progress-bar-data.component.html","../../src/lib/enum.ts","../../src/lib/components/ui/toast/toast.component.ts","../../src/lib/components/ui/toast/toast.component.html","../../src/lib/components/ui/pwa/pwa.component.ts","../../src/lib/components/ui/pwa/pwa.component.html","../../src/lib/components/ui/text/text.component.ts","../../src/lib/components/ui/text/text.component.html","../../src/lib/components/ui/time-ago/time-ago.component.ts","../../src/lib/components/ui/time-ago/time-ago.component.html","../../src/lib/components/ui/trigram/trigram.component.ts","../../src/lib/components/ui/trigram/trigram.component.html","../../src/lib/components/ui/user-logo/user-logo.component.ts","../../src/lib/components/ui/user-logo/user-logo.component.html","../../src/lib/components/ui/users-list/users-list.component.ts","../../src/lib/components/ui/users-list/users-list.component.html","../../src/lib/components/ui/ui.module.ts","../../src/lib/components/ui/tree/tree-children/tree-children.component.ts","../../src/lib/components/ui/tree/tree-children/tree-children.component.html","../../src/lib/components/ui/tree/tree-container/tree-container.component.ts","../../src/lib/components/ui/tree/tree-container/tree-container.component.html","../../src/lib/components/ui/tree/tree-item/tree-item.component.ts","../../src/lib/components/ui/tree/tree-item/tree-item.component.html","../../src/lib/components/ui/toggle-card/toggle-card.component.ts","../../src/lib/components/ui/toggle-card/toggle-card.component.html","../../src/lib/components/ui/banner/banner.component.ts","../../src/lib/components/ui/banner/banner.component.html","../../src/lib/components/ui/profil-data/inline-profile-data/inline-profile-data.component.ts","../../src/lib/components/ui/profil-data/inline-profile-data/inline-profile-data.component.html","../../src/lib/components/ui/benefit-item/benefit-item.component.ts","../../src/lib/components/ui/benefit-item/benefit-item.component.html","../../src/lib/components/ui/public-api.ts","../../src/lib/modules/layout/layout-content/layout-content.component.ts","../../src/lib/modules/layout/layout-content/layout-content.component.html","../../src/lib/modules/layout/layout-title/layout-title.component.ts","../../src/lib/modules/layout/layout-title/layout-title.component.html","../../src/lib/modules/layout/layout-header/layout-header.component.ts","../../src/lib/modules/layout/layout-header/layout-header.component.html","../../src/lib/modules/layout/translation.service.ts","../../src/lib/modules/layout/layout-full-panel/layout-full-panel.component.ts","../../src/lib/modules/layout/layout-full-panel/layout-full-panel.component.html","../../src/lib/modules/layout/layout-flex/layout-flex.component.ts","../../src/lib/modules/layout/layout-flex/layout-flex.component.html","../../src/lib/modules/layout/layout-header/layout-header-default/layout-header-default.component.ts","../../src/lib/modules/layout/layout-header/layout-header-default/layout-header-default.component.html","../../src/lib/modules/layout/layout-modal/layout-modal.component.ts","../../src/lib/modules/layout/layout-modal/layout-modal.component.html","../../src/lib/modules/layout/layout-modal/layout-modal-container/layout-modal-container.component.ts","../../src/lib/modules/layout/layout-header/layout-header-logo/layout-header-logo.component.ts","../../src/lib/modules/layout/layout-header/layout-header-logo/layout-header-logo.component.html","../../src/lib/modules/layout/layout-side/layout-side-cta/layout-side-cta.component.ts","../../src/lib/modules/layout/layout-side/layout-side-cta/layout-side-cta.component.html","../../src/lib/modules/layout/layout-side/layout-side.component.ts","../../src/lib/modules/layout/layout-side/layout-side.component.html","../../src/lib/modules/layout/layout-side/layout-side-content/layout-side-content.component.ts","../../src/lib/modules/layout/layout-side/layout-side-content/layout-side-content.component.html","../../src/lib/modules/layout/layout-nav/layout-nav.component.ts","../../src/lib/modules/layout/layout-nav/layout-nav.component.html","../../src/lib/modules/layout/layout-panel/layout-panel.component.ts","../../src/lib/modules/layout/layout-panel/layout-panel.component.html","../../src/lib/modules/layout/with-bottom-nav/layout-with-bottom-nav.component.ts","../../src/lib/modules/layout/with-bottom-nav/layout-with-bottom-nav.component.html","../../src/lib/modules/layout/with-panel/layout-with-panel.component.ts","../../src/lib/modules/layout/with-panel/layout-with-panel.component.html","../../src/lib/modules/layout/layout-page/layout-page.component.ts","../../src/lib/modules/layout/layout-page/layout-page.component.html","../../src/lib/modules/layout/layout-error/not-found/not-found.component.ts","../../src/lib/modules/layout/layout-error/not-found/not-found.component.html","../../src/lib/modules/layout/layout.module.ts","../../src/lib/modules/card/card-image/card-image.component.ts","../../src/lib/modules/card/card-image/card-image.component.html","../../src/lib/modules/card/card.component.ts","../../src/lib/modules/card/card.component.html","../../src/lib/modules/card/content/card-content.component.ts","../../src/lib/modules/card/content/card-content.component.html","../../src/lib/modules/card/cta/card-cta.component.ts","../../src/lib/modules/card/cta/card-cta.component.html","../../src/lib/modules/card/dashboard/dashboard.component.ts","../../src/lib/modules/card/dashboard/dashboard.component.html","../../src/lib/modules/card/header/card-header.component.ts","../../src/lib/modules/card/header/card-header.component.html","../../src/lib/modules/card/subtitle/card-subtitle.component.ts","../../src/lib/modules/card/subtitle/card-subtitle.component.html","../../src/lib/modules/card/tag/card-tag.component.ts","../../src/lib/modules/card/tag/card-tag.component.html","../../src/lib/modules/card/title/card-title.component.ts","../../src/lib/modules/card/title/card-title.component.html","../../src/lib/modules/card/card.module.ts","../../src/lib/modules/swiper/swiper.component.ts","../../src/lib/modules/swiper/swiper.component.html","../../src/lib/modules/swiper/swiper.module.ts","../../src/lib/modules/container/translation.service.ts","../../src/lib/modules/container/validation/modal/modal-validation.component.ts","../../src/lib/modules/container/validation/modal/modal-validation.component.html","../../src/lib/modules/container/validation/common-modal.ts","../../src/lib/modules/container/validation/cta/container-validation.component.ts","../../src/lib/modules/container/validation/cta/container-validation.component.html","../../src/lib/modules/container/empty/empty.component.ts","../../src/lib/modules/container/empty/empty.component.html","../../src/lib/modules/container/error/error.component.ts","../../src/lib/modules/container/error/error.component.html","../../src/lib/modules/container/placeholder/config.ts","../../src/lib/modules/container/placeholder/placeholder.component.ts","../../src/lib/modules/container/placeholder/placeholder.component.html","../../src/lib/modules/container/loader/loader.component.ts","../../src/lib/modules/container/loader/loader.component.html","../../src/lib/modules/container/swiper-light/swiper-light.component.ts","../../src/lib/modules/container/swiper-light/swiper-light.component.html","../../src/lib/modules/container/container.module.ts","../../src/lib/modules/list/element/list-element.component.ts","../../src/lib/modules/list/element/list-element.component.html","../../src/lib/modules/list/extra-information/list-extra-information.component.ts","../../src/lib/modules/list/extra-information/list-extra-information.component.html","../../src/lib/modules/list/list-container/list-container.component.ts","../../src/lib/modules/list/list-container/list-container.component.html","../../src/lib/modules/list/sub-title/list-sub-title.component.ts","../../src/lib/modules/list/sub-title/list-sub-title.component.html","../../src/lib/modules/list/tag/list-tag.component.ts","../../src/lib/modules/list/tag/list-tag.component.html","../../src/lib/modules/list/title/list-title.component.ts","../../src/lib/modules/list/title/list-title.component.html","../../src/lib/modules/list/list.module.ts","../../src/lib/modules/overlay-panel/overlay.service.ts","../../src/lib/modules/overlay-panel/default-panel/default-panel.component.ts","../../src/lib/modules/overlay-panel/default-panel/default-panel.component.html","../../src/lib/modules/overlay-panel/overlay-panel/overlay-panel.component.ts","../../src/lib/modules/overlay-panel/overlay-panel/overlay-panel.component.html","../../src/public-api.ts","../../src/ta-ui.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { TaLazyTranslationService } from '@ta/translation';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaTranslationUI extends TaLazyTranslationService {\n  constructor() {\n    super('ui');\n  }\n}\n","import { NgClass, NgIf } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { FontIconComponent } from '@ta/icons';\n\nimport { TaTranslationUI } from '../translation.service';\n\nexport type BadgeType = 'danger' | 'warning' | 'success' | 'primary' | 'secondary' | 'info' | 'purple' | 'orange';\n@Component({\n  selector: 'ta-badge',\n  templateUrl: './badge.component.html',\n  styleUrls: ['./badge.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgClass, FontIconComponent, TranslateModule],\n})\nexport class BadgeComponent {\n  /**\n   * Text to display in badge\n   */\n  @Input()\n  value!: string;\n\n  /**\n   * Style of badge\n   */\n  @Input()\n  type: BadgeType = 'primary';\n\n  /**\n   * @deprecated\n   * showClickOption\n   */\n  @Input()\n  showClickOption = false;\n\n  @Input()\n  icon?: string;\n\n  @Output()\n  clickAction = new EventEmitter();\n\n  constructor() {\n    TaTranslationUI.getInstance();\n  }\n\n  public getClass(): string {\n    return `badge-${this.type}`;\n  }\n\n  public click() {\n    this.clickAction.emit();\n  }\n}\n","<span class=\"badge-container\" [ngClass]=\"this.getClass()\" (click)=\"this.click()\">\n  <span class=\"value\">{{ this.value | translate }}</span>\n  @if (this.icon) {\n    <ta-font-icon class=\"ml-space-xs\" [name]=\"icon\" type=\"xs\"></ta-font-icon>\n  }\n  @if (this.showClickOption) {\n    <ta-font-icon name=\"arrow-small\" type=\"xs\"></ta-font-icon>\n  }\n</span>\n","import { NgClass } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { ColorType, TaSizes } from '@ta/styles';\n\n@Component({\n  selector: 'ta-bullet',\n  templateUrl: './bullet.component.html',\n  styleUrls: ['./bullet.component.scss'],\n  standalone: true,\n  imports: [NgClass],\n})\nexport class BulletComponent {\n  @Input()\n  size: TaSizes = 'sm';\n\n  @Input()\n  type: ColorType | 'notif' = 'default';\n\n  public getClass(): string {\n    return `bullet-${this.type} ${this.size}`;\n  }\n}\n","<span class=\"bullet-container\" [ngClass]=\"this.getClass()\">\n  <div>\n    <ng-content></ng-content>\n  </div>\n</span>\n","import { NgIf, NgFor, NgClass } from '@angular/common';\nimport { FontIconComponent, LocalIconComponent } from '@ta/icons';\nimport { Component, Input } from '@angular/core';\n\nimport { getFontIcon, isFontIcon, isLocalIcon } from '@ta/icons';\n\nimport { ActionButtonData } from './action-button-data';\n\n@Component({\nselector: 'ta-action-button',\n  templateUrl: './action-button.component.html',\n  styleUrls: ['./action-button.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgFor, NgClass, FontIconComponent, LocalIconComponent],\n})\nexport class ActionButtonComponent {\n  /**\n   * List of action available\n   */\n  @Input() actions!: ActionButtonData[];\n\n  public isFontIcon(action: ActionButtonData): boolean {\n    return isFontIcon(action.icon);\n  }\n\n  public getFontIcon(action: ActionButtonData): string {\n    return getFontIcon(action.icon);\n  }\n\n  public isLocalIcon(action: ActionButtonData): boolean {\n    return isLocalIcon(action.icon);\n  }\n\n  public isOpen: boolean = false;\n\n  public openBullet(): void {\n    if (this.actions.length === 0) {\n      return;\n    }\n    if (this.actions.length > 1) {\n      // more than one feature, we open all options\n      this.isOpen = !this.isOpen;\n      return;\n    }\n\n    const action: ActionButtonData = this.actions[0];\n    action.callback();\n  }\n}\n","<div class=\"container\">\n  <div class=\"bullet\" (click)=\"this.openBullet()\" [ngClass]=\"{ open: this.isOpen }\"></div>\n\n  <div class=\"items\">\n    @for (action of actions; track action) {\n      <div class=\"item\" (click)=\"this.action.callback()\" [ngClass]=\"{ show: this.isOpen }\">\n        @if (this.isFontIcon(action)) {\n          <ta-font-icon [name]=\"getFontIcon(action)\"></ta-font-icon>\n        } @else if (this.isLocalIcon(action)) {\n          <ta-local-icon [type]=\"action.icon\"></ta-local-icon>\n        }\n      </div>\n    }\n  </div>\n</div>\n","import { NgClass, NgIf } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { FontIconComponent } from '@ta/icons';\nimport { TaState } from '@ta/styles';\nimport { StopPropagationDirective } from '@ta/utils';\n\n@Component({\n  selector: 'ta-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  standalone: true,\n  imports: [NgClass, NgIf, FontIconComponent, StopPropagationDirective],\n})\nexport class ButtonComponent {\n  /**\n   * Is button type\n   */\n  @Input()\n  state: TaState = 'classic';\n\n  /**\n   * Indicate the button type\n   */\n  @Input()\n  type: 'primary' | 'secondary' | 'danger' = 'primary';\n\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  @Input()\n  icon: string | null = null;\n  /**\n   * Class - Add custom classes separates by space\n   * Outline - Draw a border around the button when true\n   * Rounded - Make button rounded when true\n   * Circular - Make button circular when true\n   */\n  @Input()\n  options: {\n    class?: string;\n    circular?: boolean | 'big' | 'small';\n    border?: boolean;\n  } | null = null;\n\n  @Input()\n  stopPropagationActivation = true;\n\n  /**\n   * Event emitted when button is clicked\n   */\n  @Output()\n  action = new EventEmitter();\n\n  constructor() {}\n\n  public handleClick() {\n    if (this.state === 'classic') {\n      this.action.emit();\n    }\n  }\n\n  public getClass() {\n    const css: { [index: string]: boolean } = {};\n\n    css[this.state] = true;\n    css[this.size] = true;\n    css[this.type] = true;\n\n    if (this.options?.circular === true) {\n      css['circular'] = true;\n    }\n    if (this.options?.circular === 'big') {\n      css['circular big'] = true;\n    }\n    if (this.options?.circular === 'small') {\n      css['circular small'] = true;\n    }\n    if (this.options?.class) {\n      css[this.options.class] = true;\n    }\n    if (this.options?.border === false) {\n      css['no-border'] = true;\n    }\n\n    return css;\n  }\n}\n","<button\r\n  appStopPropagation\r\n  [stopPropagationActivation]=\"this.stopPropagationActivation\"\r\n  type=\"button\"\r\n  class=\"button pointer\"\r\n  [ngClass]=\"this.getClass()\"\r\n  (click)=\"handleClick()\"\r\n>\r\n  <div class=\"flex-row g-space-sm align-center\">\r\n    @if (this.icon) {\r\n      <ta-font-icon [name]=\"this.icon\"></ta-font-icon>\r\n    }\r\n    <ng-content></ng-content>\r\n  </div>\r\n</button>\r\n","import { NgClass } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { FontIconComponent } from '@ta/icons';\n\nimport { TaTranslationUI } from '../../translation.service';\n\nexport interface DualButtonInput {\n  icon: string;\n  label: string;\n  callback: () => void;\n}\n\n@Component({\n  selector: 'ta-dual-button',\n  templateUrl: './dual-button.component.html',\n  styleUrls: ['./dual-button.component.scss'],\n  standalone: true,\n  imports: [NgClass, FontIconComponent, TranslateModule],\n})\nexport class DualButtonComponent {\n  @Input()\n  isFull = false;\n\n  @Input()\n  first!: DualButtonInput;\n\n  @Input()\n  second!: DualButtonInput;\n\n  @Input()\n  type: 'primary' | 'secondary' = 'primary';\n\n  constructor() {\n    TaTranslationUI.getInstance();\n  }\n\n  public getClass() {\n    const css: { [index: string]: boolean } = {};\n\n    css[this.type] = true;\n\n    return css;\n  }\n}\n","<div class=\"dual-button row\" [class.full]=\"this.isFull\">\n  <div class=\"col first\" (click)=\"this.first.callback()\" [ngClass]=\"this.getClass()\">\n    <div class=\"flex-start\">\n      <ta-font-icon class=\"icon\" [name]=\"this.first.icon\"></ta-font-icon>\n      <span class=\"label\">{{ this.first.label | translate }}</span>\n    </div>\n  </div>\n  <div class=\"col second\" (click)=\"this.second.callback()\" [ngClass]=\"this.getClass()\">\n    <div class=\"flex-start\">\n      <span class=\"label\">{{ this.second.label | translate }}</span>\n      <ta-font-icon class=\"icon\" [name]=\"this.second.icon\"></ta-font-icon>\n    </div>\n  </div>\n</div>\n","import { NgClass, NgIf } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { FontIconComponent } from '@ta/icons';\nimport { TaSizes, TaState } from '@ta/styles';\nimport { StopPropagationDirective } from '@ta/utils';\n\n@Component({\n  selector: 'ta-button-tool',\n  templateUrl: './tool.component.html',\n  styleUrls: ['./tool.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgClass, FontIconComponent, StopPropagationDirective],\n})\nexport class ButtonToolComponent {\n  @Input()\n  state: TaState = 'classic';\n\n  @Input()\n  type: 'primary' = 'primary';\n\n  @Input()\n  size: TaSizes = 'md';\n\n  @Input()\n  icon: string | null = null;\n\n  @Input()\n  stopPropagationActivation = true;\n\n  @Input()\n  readonly: boolean = false;\n\n  /**\n   * Event emitted when button is clicked\n   */\n  @Output()\n  action = new EventEmitter();\n\n  constructor() {}\n\n  public handleClick() {\n    if (this.state === 'classic') {\n      this.action.emit();\n    }\n  }\n\n  public getClass() {\n    const css: { [index: string]: boolean } = {};\n\n    css[this.state] = true;\n    css[this.size] = true;\n    css[this.type] = true;\n\n    return css;\n  }\n}\n","<button\r\n  [disabled]=\"this.readonly\"\r\n  appStopPropagation\r\n  [stopPropagationActivation]=\"this.stopPropagationActivation\"\r\n  type=\"button\"\r\n  class=\"button pointer\"\r\n  [ngClass]=\"this.getClass()\"\r\n  (click)=\"this.handleClick()\"\r\n>\r\n  <div class=\"flex-row g-space-sm align-c enter\">\r\n    @if (this.icon) {\r\n      <ta-font-icon [name]=\"this.icon\" [type]=\"this.size\"></ta-font-icon>\r\n    }\r\n  </div>\r\n</button>\r\n","import { NgIf } from '@angular/common';\nimport { MaterialIconComponent } from '@ta/icons';\nimport { Component, Input } from '@angular/core';\n\nimport { Civility } from '@ta/utils';\n\n@Component({\nselector: 'ta-civility',\n  templateUrl: './civility.component.html',\n  styleUrls: ['./civility.component.scss'],\n  standalone: true,\n  imports: [NgIf, MaterialIconComponent],\n})\nexport class CivilityComponent {\n  /**\n   * Define the civility to display\n   */\n  @Input()\n  civility!: Civility | null;\n\n  constructor() {}\n\n  public getIcon(): string {\n    switch (this.civility) {\n      case Civility.Unknown:\n        return '';\n      case Civility.Dear:\n        return 'wc';\n      case Civility.Madame:\n        return 'woman';\n      case Civility.Sir:\n        return 'man';\n      default:\n        return '';\n    }\n  }\n}\n","@if (this.civility) {\n  <ta-material-icon>\n    {{ this.getIcon() }}\n  </ta-material-icon>\n}\n","import { NgIf } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { FontIconComponent, LocalIconComponent } from '@ta/icons';\nimport { TaIconType } from '@ta/icons';\n\nimport { TaTranslationUI } from '../translation.service';\n\n@Component({\n  selector: 'ta-contact-information',\n  templateUrl: './contact-information.component.html',\n  styleUrls: ['./contact-information.component.scss'],\n  standalone: true,\n  imports: [NgIf, FontIconComponent, LocalIconComponent, TranslateModule],\n})\nexport class ContactInformationComponent {\n  /**\n   * Text to display\n   */\n  @Input()\n  value!: string | null;\n\n  /**\n   * Material icon to display\n   */\n  @Input()\n  icon!: string;\n\n  /**\n   * Local icon to display\n   */\n  @Input()\n  localIcon!: TaIconType;\n\n  constructor() {\n    TaTranslationUI.getInstance();\n  }\n}\n","@if (this.value) {\n  <div class=\"header\">\n    <div class=\"icon\">\n      @if (this.localIcon) {\n        <ta-local-icon class=\"local-icon\" [type]=\"this.localIcon\"></ta-local-icon>\n      } @else if (this.icon) {\n        <ta-font-icon [name]=\"this.icon\" type=\"sm\"></ta-font-icon>\n      }\n    </div>\n\n    <div class=\"value\">\n      <div class=\"text\">{{ this.value | translate }}</div>\n    </div>\n  </div>\n}\n<div class=\"content\">\n  <ng-content></ng-content>\n</div>\n","import { Component, Input } from '@angular/core';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BadgeComponent } from '../badge/badge.component';\nimport { TaTranslationUI } from '../translation.service';\n\nexport enum CriticityStatus {\n  Unknown = 0,\n  P1 = 1,\n  P2 = 2,\n  P3 = 3,\n}\nexport const criticityLabel = (criticity: CriticityStatus) => `ui.criticity.${criticity}`;\n\n@Component({\n  selector: 'ta-criticity',\n  templateUrl: './criticity.component.html',\n  styleUrls: ['./criticity.component.scss'],\n  standalone: true,\n  imports: [TranslateModule, BadgeComponent],\n})\nexport class CriticityComponent {\n  @Input()\n  criticity!: number | CriticityStatus;\n\n  constructor() {\n    TaTranslationUI.getInstance();\n  }\n  public label() {\n    return criticityLabel(this.criticity);\n  }\n  public type() {\n    switch (this.criticity) {\n      case CriticityStatus.P1:\n        return 'danger';\n      case CriticityStatus.P2:\n        return 'warning';\n      case CriticityStatus.P3:\n        return 'success';\n      default:\n        return 'primary';\n    }\n  }\n}\n","<ta-badge [value]=\"this.label() | translate\" [type]=\"this.type()\"></ta-badge>\n","import { NgFor } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { Culture } from '@ta/utils';\n\nimport { TaTranslationUI } from '../translation.service';\n\n@Component({\n  selector: 'ta-culture',\n  templateUrl: './culture.component.html',\n  styleUrls: ['./culture.component.scss'],\n  standalone: true,\n  imports: [NgFor, TranslateModule],\n})\nexport class CultureComponent {\n  @Input()\n  cultures!: Culture[];\n\n  constructor() {\n    TaTranslationUI.getInstance();\n  }\n}\n","<div class=\"flex-start g-space-xs\">\n  @for (culture of this.cultures; track culture; let isLast = $last) {\n    <div>\n      {{ 'ui.culture.short.' + culture | translate }}{{ !isLast ? ',' : '' }}\n    </div>\n  }\n</div>\n","import { NgIf, NgFor } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { Department } from '../interface';\n\n@Component({\nselector: 'ta-department-icon-list',\n  templateUrl: './department-icon-list.component.html',\n  styleUrls: ['./department-icon-list.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgFor],\n})\nexport class DepartmentIconListComponent {\n  /**\n   * List of departments object to display\n   */\n  @Input()\n  public departments!: Department[];\n\n  @Input()\n  public withName: boolean = false;\n}\n","@if (this.withName) {\n  <div class=\"departements-container text-truncate\">\n    @for (department of this.departments; track department; let last = $last) {\n      <div class=\"department\">\n        <div class=\"img-container align-center\">\n          @if (department.iconPath) {\n            <img [src]=\"department.iconPath\" [alt]=\"department.name\" />\n          }\n        </div>\n        <p>{{ department.name }}{{ !last ? ',' : '' }}</p>\n      </div>\n    }\n  </div>\n} @else {\n  <div class=\"departements-container\">\n    @for (department of this.departments; track department) {\n      <div class=\"department\">\n        <div class=\"img-container align-center\">\n          @if (department.iconPath) {\n            <img [src]=\"department.iconPath\" [alt]=\"department.name\" />\n          }\n        </div>\n      </div>\n    }\n  </div>\n}\n","import { NgFor, NgIf } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { TaSizes } from '@ta/styles';\n\nimport { BadgeComponent } from '../../badge/badge.component';\n\n@Component({\n  selector: 'ta-department-professions',\n  templateUrl: './professions.component.html',\n  styleUrls: ['./professions.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgFor, BadgeComponent],\n})\nexport class DepartmentProfessionsComponent {\n  /**\n   * List of professions to display\n   */\n  @Input()\n  professions!: string[];\n\n  /**\n   * font-size\n   */\n  @Input()\n  fontSize: TaSizes = 'xs';\n\n  @Input() maxVisible?: number;\n\n  get visibleProfessions() {\n    if (this.maxVisible) {\n      return this.professions.slice(0, this.maxVisible);\n    }\n    return this.professions;\n  }\n\n  constructor() {}\n}\n","<div class=\"align-center professions-container g-space-xs\">\n  @for (profession of this.visibleProfessions; track profession) {\n    <span>\n      <ta-badge [value]=\"profession\"></ta-badge>\n    </span>\n  }\n  @if (this.maxVisible && this.professions.length > this.maxVisible) {\n    <span class=\"more-label\"> +{{ this.professions.length - maxVisible }} </span>\n  }\n</div>\n","import { Component, Input } from '@angular/core';\n\nimport { Department } from './interface';\nimport { DepartmentIconListComponent } from './department-icon-list/department-icon-list.component';\nimport { DepartmentProfessionsComponent } from './professions/professions.component';\n\n@Component({\nselector: 'ta-departments',\n  templateUrl: './departments.component.html',\n  styleUrls: ['./departments.component.scss'],\n  standalone: true,\n  imports: [DepartmentIconListComponent, DepartmentProfessionsComponent],\n})\nexport class DepartmentsComponent {\n  /**\n   * List of departments object to display\n   */\n  @Input()\n  departments!: Department[];\n\n  /**\n   * List of professions to display\n   */\n  @Input()\n  professions!: string[];\n}\n","<div>\n  <ta-department-icon-list [departments]=\"this.departments\"></ta-department-icon-list>\n</div>\n<div>\n  <ta-department-professions [professions]=\"this.professions\"></ta-department-professions>\n</div>\n","import { NgIf } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\n\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Duration, intervalToDuration } from 'date-fns';\n\nimport { PluralTranslatePipe } from '@ta/utils';\n\nimport { TaTranslationUI } from '../translation.service';\n\n@Component({\n  selector: 'ta-duration',\n  templateUrl: './duration.component.html',\n  styleUrls: ['./duration.component.scss'],\n  standalone: true,\n  imports: [NgIf, TranslateModule, PluralTranslatePipe],\n})\nexport class DurationComponent implements OnInit {\n  @Input()\n  startDate: number | string = Date.now();\n\n  @Input()\n  endDate: number | string = Date.now();\n\n  public interval: Duration | null = null;\n\n  constructor() {\n    TaTranslationUI.getInstance();\n  }\n\n  ngOnInit() {\n    if (this.startDate && this.endDate) {\n      try {\n        this.interval = intervalToDuration({\n          start: new Date(this.startDate),\n          end: new Date(this.endDate),\n        });\n      } catch (error) {\n        console.error('Invalid date format:', error);\n      }\n    } else {\n      console.error('startDate or endDate is missing');\n    }\n  }\n}\n","@if (this.interval) {\r\n  @if (\r\n    !this.interval.years &&\r\n    !this.interval.months &&\r\n    !this.interval.days &&\r\n    !this.interval?.hours\r\n  ) {\r\n    {{ \"ui.duration.less-than-one\" | translate }}\r\n  }\r\n\r\n  @if (this.interval.years) {\r\n    {{\r\n      \"ui.duration.years\"\r\n        | pluralTranslate : this.interval.years\r\n        | translate : { years: this.interval.years }\r\n    }}\r\n  }\r\n  @if (this.interval.months) {\r\n    {{\r\n      \"ui.duration.months\"\r\n        | pluralTranslate : this.interval.months\r\n        | translate : { months: this.interval.months }\r\n    }}\r\n  }\r\n  @if (this.interval.days) {\r\n    {{\r\n      \"ui.duration.days\"\r\n        | pluralTranslate : this.interval.days\r\n        | translate : { days: this.interval.days }\r\n    }}\r\n  }\r\n  @if (this.interval.hours) {\r\n    {{\r\n      \"ui.duration.hours\"\r\n        | pluralTranslate : this.interval.hours\r\n        | translate : { hours: this.interval.hours }\r\n    }}\r\n  }\r\n}\r\n","import { NgIf } from '@angular/common';\nimport { Component, ElementRef, Input, ViewChild } from '@angular/core';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { TaTranslationUI } from '../translation.service';\n\n@Component({\n  selector: 'ta-expandable-text',\n  templateUrl: './expandable-text.component.html',\n  styleUrls: ['./expandable-text.component.scss'],\n  standalone: true,\n  imports: [NgIf, TranslateModule],\n})\nexport class ExpandableTextComponent {\n  @Input()\n  height: number = 100;\n\n  public showFullText: boolean = false;\n  public showButton: boolean = true;\n\n  @ViewChild('myText')\n  public _myText!: ElementRef<HTMLDivElement>;\n\n  constructor() {\n    TaTranslationUI.getInstance();\n  }\n\n  get textHeight() {\n    if (this._myText) {\n      if (this._myText.nativeElement.offsetHeight < this.height) {\n        return 'auto';\n      }\n    }\n    if (this.showFullText) {\n      return 'auto';\n    }\n    return `${this.height}px`;\n  }\n\n  get hasFixedHeight() {\n    return this.textHeight != 'auto';\n  }\n\n  get hasTooBigText() {\n    if (this._myText) {\n      return this._myText.nativeElement.offsetHeight > this.height;\n    }\n    return true;\n  }\n\n  toggleText() {\n    if (this.showFullText === false) {\n      this.showFullText = true;\n    } else {\n      this.showFullText = false;\n    }\n  }\n}\n","<div class=\"text-container\">\n  <div\n    class=\"text\"\n    [class.with-shadow]=\"this.hasFixedHeight\"\n    [style.height]=\"this.textHeight\"\n  >\n    <div #myText>\n      <ng-content></ng-content>\n    </div>\n  </div>\n  @if (this.hasTooBigText) {\n    <button (click)=\"toggleText()\">\n      {{\n        (this.showFullText\n          ? \"ui.expandabletext.seeless\"\n          : \"ui.expandabletext.seemore\"\n        ) | translate\n      }}\n    </button>\n  }\n</div>\n","import { NgFor } from '@angular/common';\nimport { Component, Input, TemplateRef } from '@angular/core';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\nimport { TaBaseComponent } from '@ta/utils';\n\nexport interface ExpansionPanelInput {\n  title: TemplateRef<any>;\n  content: TemplateRef<any>;\n  context?: object;\n}\n@Component({\n  selector: 'ta-expansion-panel',\n  templateUrl: './expansion-panel.component.html',\n  styleUrls: ['./expansion-panel.component.scss'],\n  standalone: true,\n  imports: [NgFor, MatExpansionModule],\n})\nexport class TaExpansionPanelComponent extends TaBaseComponent {\n  @Input()\n  templates: ExpansionPanelInput[] = [];\n\n  constructor() {\n    super();\n  }\n}\n","<mat-accordion>\n  @for (template of this.templates; track template) {\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          <ng-template\n            [ngTemplateOutlet]=\"template.title\"\n            [ngTemplateOutletContext]=\"template.context ?? {}\"\n          ></ng-template>\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <ng-template\n        [ngTemplateOutlet]=\"template.content\"\n        [ngTemplateOutletContext]=\"template.context ?? {}\"\n      ></ng-template>\n    </mat-expansion-panel>\n  }\n</mat-accordion>\n","import { Component, Input } from '@angular/core';\n\nimport { LocalIconComponent } from '@ta/icons';\nimport { TaIconType } from '@ta/icons';\nimport { TaSizes } from '@ta/styles';\nimport { extractExtension } from '@ta/utils';\n\n@Component({\n  selector: 'ta-file-image',\n  templateUrl: './file-image.component.html',\n  styleUrls: ['./file-image.component.scss'],\n  standalone: true,\n  imports: [LocalIconComponent],\n})\nexport class FileImageComponent {\n  @Input()\n  fileName!: string;\n\n  @Input()\n  size: TaSizes = 'sm';\n\n  get extIcon(): TaIconType {\n    const ext = extractExtension(this.fileName);\n\n    switch (ext) {\n      case 'docx':\n        return TaIconType.Doc;\n      case 'pdf':\n        return TaIconType.Pdf;\n      case 'xlsx':\n        return TaIconType.Xls;\n      default:\n        return TaIconType.FileEmpty;\n    }\n  }\n}\n","<ta-local-icon [type]=\"this.extIcon\" [size]=\"this.size\"></ta-local-icon>\n","import { NgIf, DatePipe } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n@Component({\nselector: 'ta-hour-date-line',\n  templateUrl: './hour-date-line.component.html',\n  styleUrls: ['./hour-date-line.component.scss'],\n  standalone: true,\n  imports: [NgIf, DatePipe],\n})\nexport class HourDateLineComponent {\n  /**\n   * Start date\n   */\n  @Input() startDate!: Date | null;\n\n  /**\n   * End date\n   */\n  @Input() endDate!: Date | null;\n}\n","<div class=\"hour-date-line-container\">\n  @if (this.startDate) {\n    <span class=\"label date mr-space-xs\">\n      {{ this.startDate | date : \"shortDate\" }}\n    </span>\n  }\n\n  <span class=\"label hour\">\n    @if (this.startDate) {\n      <span>{{ this.startDate | date : \"HH:mm\" }}</span>\n    }\n    -\n    @if (this.endDate) {\n      <span>{{ this.endDate | date : \"HH:mm\" }}</span>\n    }\n  </span>\n</div>\n","import { NgClass } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { ColorType, TaSizes } from '@ta/styles';\n\n@Component({\n  selector: 'ta-label',\n  templateUrl: './label.component.html',\n  styleUrls: ['./label.component.scss'],\n  standalone: true,\n  imports: [NgClass],\n})\nexport class LabelComponent {\n  @Input()\n  size: TaSizes = 'md';\n\n  @Input()\n  type: ColorType = 'default';\n\n  public getClass(): string {\n    return `label-${this.type} ${this.size}`;\n  }\n}\n","<div class=\"d-flex\">\n  <span class=\"label-container\" [ngClass]=\"this.getClass()\">\n    <ng-content></ng-content>\n  </span>\n</div>\n","import { NgClass, NgIf } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { FontIconComponent } from '@ta/icons';\nimport { TaSizes, TaState } from '@ta/styles';\n\n@Component({\n  selector: 'ta-link',\n  templateUrl: './link.component.html',\n  styleUrls: ['./link.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgClass, FontIconComponent],\n})\nexport class LinkComponent {\n  @Input()\n  state: TaState = 'classic';\n\n  @Input()\n  underline?: boolean = true;\n\n  @Input()\n  bold: boolean = false;\n\n  @Input()\n  size: TaSizes = 'md';\n\n  @Input()\n  icon: string | null = null;\n\n  @Output()\n  action = new EventEmitter();\n\n  constructor() {}\n\n  public handleClick() {\n    if (this.state === 'classic') {\n      this.action.emit();\n    }\n  }\n\n  public getClass() {\n    const css: { [index: string]: boolean } = {};\n\n    css[this.state] = true;\n    css[this.size] = true;\n\n    return css;\n  }\n}\n","<a\n  class=\"link pointer\"\n  [ngClass]=\"this.getClass()\"\n  (click)=\"this.handleClick()\"\n  [class.align-center]=\"this.icon\"\n  [class.bold]=\"this.bold\"\n>\n  <div class=\"flex-row g-space-sm\">\n    @if (this.icon) {\n      <ta-font-icon [name]=\"this.icon\"></ta-font-icon>\n    }\n    <div class=\"content\" [class.underline]=\"this.underline\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n</a>\n","import { Component, Input } from '@angular/core';\n\n@Component({\nselector: 'ta-logo',\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.scss'],\n  standalone: true,\n})\nexport class LogoComponent {\n  /**\n   * If set, logo white or black version will be taken\n   */\n  @Input()\n  color?: 'white' | 'black';\n\n  /**\n   * If set, logo oneline version will be taken\n   */\n  @Input()\n  type?: 'oneline';\n\n  /**\n   * Set the logo width in %\n   */\n  @Input()\n  widthPercentage?: number = 100;\n\n  get imageWidth(): string {\n    return this.widthPercentage + '%';\n  }\n\n  constructor() {}\n\n  public getImagePath(): string {\n    return `assets/partners/logo/logo${this.type ? `-${this.type}` : ''}${this.color ? `-${this.color}` : ''}.png`;\n  }\n}\n","<img [src]=\"this.getImagePath()\" [attr.width]=\"this.imageWidth\" />\n","import { NgIf } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { FontIconComponent } from '@ta/icons';\nimport { octetsToMo, roundToDecimal } from '@ta/utils';\n\nimport { TaTranslationUI } from '../translation.service';\n\n@Component({\n  selector: 'ta-megaoctet',\n  templateUrl: './megaoctet.component.html',\n  styleUrls: ['./megaoctet.component.scss'],\n  standalone: true,\n  imports: [NgIf, FontIconComponent, TranslateModule],\n})\nexport class MegaoctetComponent {\n  @Input()\n  octet!: number;\n\n  @Input()\n  icon: boolean = false;\n\n  constructor() {\n    TaTranslationUI.getInstance();\n  }\n\n  get megaoctet() {\n    return roundToDecimal(octetsToMo(this.octet), 2);\n  }\n}\n","<div class=\"flex-row align-items-center\">\n  @if (this.icon) {\n    <ta-font-icon name=\"database\" size=\"xs\"></ta-font-icon>\n  }\n  <span>{{ 'ui.megaoctet' | translate: { size: this.megaoctet } }}</span>\n</div>\n","import { NgIf } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { TaSizes } from '@ta/styles';\n\nimport { BulletComponent } from '../bullet/bullet.component';\n\n@Component({\n  selector: 'ta-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.scss'],\n  standalone: true,\n  imports: [NgIf, BulletComponent],\n})\nexport class NewComponent {\n  @Input()\n  visible: boolean = false;\n\n  @Input()\n  isRelative: boolean = false;\n\n  @Input()\n  size: TaSizes = 'md';\n}\n","@if (this.visible) {\r\n  <div class=\"bullet\" [class.is-relative]=\"this.isRelative\" [class.is-absolute]=\"!this.isRelative\" [class]=\"this.size\">\r\n    <ta-bullet type=\"new\" [size]=\"this.size\"></ta-bullet>\r\n  </div>\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\nselector: 'ta-notification-badge-container',\n  templateUrl: './notification-badge-container.component.html',\n  styleUrls: ['./notification-badge-container.component.scss'],\n  standalone: true,\n})\nexport class NotificationBadgeContainerComponent {}\n","<div class=\"notification-badge-container\">\n  <ng-content></ng-content>\n  <ng-content select=\"ta-notification-badge\"></ng-content>\n</div>\n","import { NgClass } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { TaSizes } from '@ta/styles';\n\n@Component({\n  selector: 'ta-notification-badge',\n  templateUrl: './notification-badge.component.html',\n  styleUrls: ['./notification-badge.component.scss'],\n  standalone: true,\n  imports: [NgClass],\n})\nexport class NotificationBadgeComponent {\n  @Input()\n  number!: number;\n\n  @Input()\n  fontSize: TaSizes = 'xs';\n\n  @Input()\n  style?: string | undefined;\n\n  @Input()\n  relative: boolean = false;\n\n  public getClass() {\n    const css: { [index: string]: boolean } = {};\n\n    css[`bgc-${this.style ?? 'semantic-token-info'}`] = true;\n\n    if (this.relative) {\n      css['relative'] = true;\n    }\n\n    return css;\n  }\n}\n","<div\n  class=\"badge-container notif-{{ this.fontSize }}\"\n  [ngClass]=\"this.getClass()\"\n>\n  <div class=\"pt-space-xs\">{{ this.number }}</div>\n</div>\n","import { Component, Input } from '@angular/core';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { FontIconComponent } from '@ta/icons';\nimport { MessageLevel } from '@ta/utils';\n\nimport { TaTranslationUI } from '../translation.service';\n\n@Component({\n  selector: 'ta-typed-message',\n  templateUrl: './typed-message.component.html',\n  styleUrls: ['./typed-message.component.scss'],\n  standalone: true,\n  imports: [FontIconComponent, TranslateModule],\n})\nexport class TypedMessageComponent {\n  @Input() text!: string;\n  @Input() type!: MessageLevel;\n\n  get icon() {\n    switch (this.type) {\n      case 'danger':\n        return 'error_outline';\n      case 'success':\n        return 'check_circle_outline';\n      case 'info':\n        return 'help_outline';\n      case 'warning':\n        return 'warning_amber';\n      default:\n        return '';\n    }\n  }\n\n  constructor() {\n    TaTranslationUI.getInstance();\n  }\n}\n","<div class=\"alert alert-{{ this.type }}\" role=\"alert\">\n  <ta-font-icon [type]=\"'md'\">{{ this.icon }}</ta-font-icon>\n  <span class=\"text\">{{ this.text | translate }}</span>\n</div>\n","import { NgIf } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { FontIconComponent, LocalIconComponent } from '@ta/icons';\nimport { getFontIcon, isFontIcon, isLocalIcon } from '@ta/icons';\nimport { TaIconType } from '@ta/icons';\nimport { TaSizes } from '@ta/styles';\nimport { MessageLevel } from '@ta/utils';\n\nimport { TaTranslationUI } from '../translation.service';\nimport { TypedMessageComponent } from '../typed-message/typed-message.component';\n\n@Component({\n  selector: 'ta-picture-info-message',\n  templateUrl: './picture-info-message.component.html',\n  styleUrls: ['./picture-info-message.component.scss'],\n  standalone: true,\n  imports: [NgIf, FontIconComponent, LocalIconComponent, TranslateModule, TypedMessageComponent],\n})\nexport class PictureInfoMessageComponent {\n  @Input() icon?: TaIconType | string;\n  @Input() iconSize?: TaSizes | 'xl';\n  @Input() text?: string;\n  @Input() type?: MessageLevel = 'info';\n\n  get displayedText() {\n    return this.text ?? '';\n  }\n\n  public isFontIcon(icon: TaIconType | string): boolean {\n    return isFontIcon(icon);\n  }\n\n  public getFontIcon(icon: TaIconType | string): string {\n    return getFontIcon(icon);\n  }\n\n  public isLocalIcon(icon: TaIconType | string): boolean {\n    return isLocalIcon(icon);\n  }\n\n  constructor() {\n    TaTranslationUI.getInstance();\n  }\n}\n","@if (this.icon) {\n  <div class=\"card\">\n    @if (this.isLocalIcon(this.icon)) {\n      <ta-local-icon\n        [type]=\"this.icon\"\n        [size]=\"this.iconSize ?? 'md'\"\n      ></ta-local-icon>\n    } @else if (this.isFontIcon(this.icon)) {\n      <ta-font-icon\n        class=\"font-icon\"\n        [name]=\"this.getFontIcon(this.icon)\"\n        [type]=\"this.iconSize ?? 'md'\"\n      ></ta-font-icon>\n    }\n\n    <div class=\"pt-space-xs\">{{ this.displayedText | translate }}</div>\n  </div>\n} @else {\n  <ta-typed-message [text]=\"this.displayedText\" [type]=\"this.type ?? 'info'\"></ta-typed-message>\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\nselector: 'ta-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.scss'],\n  standalone: true,\n})\nexport class ProgressBarComponent {\n  @Input() current!: number;\n  @Input() max!: number;\n}\n","<progress\n  class=\"progress-bar\"\n  max=\"{{ this.max }}\"\n  value=\"{{ this.current }}\"\n></progress>\n","import { DecimalPipe, NgIf } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { TaTranslationUI } from '../../../translation.service';\n\n@Component({\n  selector: 'ta-progress-circle',\n  templateUrl: './progress-circle.component.html',\n  styleUrls: ['./progress-circle.component.scss'],\n  standalone: true,\n  imports: [NgIf, TranslateModule, DecimalPipe],\n})\nexport class ProgressCircleComponent {\n  /**\n   * Progress in percentage\n   */\n  @Input() progress: number = 50;\n\n  /**\n   * Title located above\n   */\n  @Input() upTitle?: string;\n\n  /**\n   * Title located below\n   */\n  @Input() downTitle?: string;\n\n  get circumference() {\n    return 2 * Math.PI * 45;\n  }\n\n  get canDisplayText() {\n    return !Number.isNaN(this.progress);\n  }\n\n  constructor() {\n    TaTranslationUI.getInstance();\n  }\n}\n","<div class=\"circle-progress-bar\">\n  @if (this.upTitle) {\n    <div class=\"title\">\n      {{ this.upTitle | translate }}\n    </div>\n  }\n\n  <svg viewBox=\"0 0 100 100\">\n    <circle class=\"circle-progress-bar-bg\" cx=\"50\" cy=\"50\" r=\"45\"></circle>\n\n    <circle\n      class=\"circle-progress-bar-progress\"\n      cx=\"50\"\n      cy=\"50\"\n      r=\"45\"\n      [attr.stroke-dasharray]=\"this.circumference\"\n      [attr.stroke-dashoffset]=\"this.circumference * (1 - this.progress / 100)\"\n    ></circle>\n\n    @if (this.canDisplayText) {\n      <text\n        class=\"circle-progress-bar-text\"\n        x=\"50\"\n        y=\"50\"\n        dominant-baseline=\"middle\"\n        text-anchor=\"middle\"\n      >\n        {{ this.progress | number : \"1.0-0\" }}%\n      </text>\n    }\n  </svg>\n\n  @if (this.downTitle) {\n    <div class=\"title\">\n      {{ this.downTitle | translate }}\n    </div>\n  }\n</div>\n","import { NgClass, NgTemplateOutlet } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n@Component({\nselector: 'ta-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss'],\n  standalone: true,\n  imports: [NgClass, NgTemplateOutlet],\n})\nexport class TitleComponent {\n  /**\n   * Title level\n   * Higher value means lower title size\n   */\n  @Input()\n  level: 1 | 2 | 3 | 4 | 5 | 6 = 1;\n\n  /**\n   * Title theme\n   * If set to true, title will be themed with CSS\n   */\n  @Input() isTheme: boolean = false;\n\n  @Input() isBold: boolean = false;\n\n  constructor() {}\n}\n","@switch (this.level) {\n  @case (1) {\n    <h1 [ngClass]=\"{ 'theme-title': this.isTheme, bold: this.isBold }\">\n      <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n    </h1>\n  }\n  @case (2) {\n    <h2 [ngClass]=\"{ 'theme-title': this.isTheme, bold: this.isBold }\">\n      <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n    </h2>\n  }\n  @case (3) {\n    <h3 [ngClass]=\"{ 'theme-title': this.isTheme, bold: this.isBold }\">\n      <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n    </h3>\n  }\n  @case (4) {\n    <h4 [ngClass]=\"{ 'theme-title': this.isTheme, bold: this.isBold }\">\n      <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n    </h4>\n  }\n  @case (5) {\n    <h5 [ngClass]=\"{ 'theme-title': this.isTheme, bold: this.isBold }\">\n      <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n    </h5>\n  }\n  @case (6) {\n    <h6 [ngClass]=\"{ 'theme-title': this.isTheme, bold: this.isBold }\">\n      <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n    </h6>\n  }\n}\n\n<ng-template #contentTemplate>\n  <ng-content></ng-content>\n</ng-template>\n","import { NgClass, NgIf } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MaterialIconComponent } from '@ta/icons';\n\nimport { ProgressBarComponent } from '../../progress-bar/progress-bar.component';\nimport { TitleComponent } from '../../title/title.component';\nimport { TaTranslationUI } from '../../translation.service';\n\n@Component({\n  selector: 'ta-progress-bar-data',\n  templateUrl: './progress-bar-data.component.html',\n  styleUrls: ['./progress-bar-data.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgClass, MaterialIconComponent, TranslateModule, TitleComponent, ProgressBarComponent],\n})\nexport class ProgressBarDataComponent {\n  @Input()\n  current?: number;\n\n  @Input()\n  max?: number;\n\n  @Input()\n  title!: string;\n\n  @Input()\n  titleIcon?: string;\n\n  /**\n   * @deprecated\n   */\n  @Input()\n  description?: string;\n\n  @Input()\n  rightText?: { text: string; colorClass?: string };\n\n  get progressValue() {\n    if ((this.current || this.current === 0) && (this.max || this.max === 0)) return `${this.current}/${this.max}`;\n\n    return (this.current ?? this.max)?.toString() ?? '';\n  }\n\n  constructor() {\n    TaTranslationUI.getInstance();\n  }\n}\n","<div class=\"progress-container\">\n  <div class=\"title\">\n    <ta-title [level]=\"3\">{{ this.title | translate }}</ta-title>\n    @if (this.titleIcon) {\n      <ta-material-icon [type]=\"'sm'\">{{ this.titleIcon }}</ta-material-icon>\n    }\n  </div>\n\n  <div class=\"right-side\">\n    <span class=\"progress-value\">{{ this.progressValue }}</span>\n    @if (this.description) {\n      <span class=\"description color-grey-600\">{{ this.description | translate }}</span>\n    }\n    @if (this.rightText?.text) {\n      <span class=\"description\" [ngClass]=\"this.rightText?.colorClass ?? ''\">{{\n        this.rightText?.text ?? '' | translate\n      }}</span>\n    }\n  </div>\n</div>\n\n<ta-progress-bar [current]=\"this.current ?? 0\" [max]=\"this.max ?? 0\"></ta-progress-bar>\n","export enum ENotificationCode {\n  none,\n  error,\n  warning,\n  information,\n  success,\n}\n\nexport const getTypeClass = (code: ENotificationCode) => {\n  if (code === ENotificationCode.error) {\n    return 'danger';\n  } else if (code === ENotificationCode.warning) {\n    return 'warning';\n  } else if (code === ENotificationCode.information) {\n    return 'info';\n  } else if (code === ENotificationCode.success) {\n    return 'success';\n  } else {\n    return '';\n  }\n};\n","import { NgClass } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { ENotificationCode, getTypeClass } from '../../../enum';\n\n@Component({\nselector: 'ta-toast',\n  templateUrl: './toast.component.html',\n  styleUrls: ['./toast.component.scss'],\n  standalone: true,\n  imports: [NgClass],\n})\nexport class ToastComponent {\n  @Input()\n  code: ENotificationCode = ENotificationCode.information;\n\n  readonly getTypeClass = getTypeClass;\n}\n","<div class=\"card\" [ngClass]=\"this.getTypeClass(this.code)\">\n  <ng-content></ng-content>\n</div>\n","import { NgIf } from '@angular/common';\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\nimport { TranslateModule } from '@ngx-translate/core';\nimport { LocalStorage } from 'storage-manager-js';\n\nimport { TaPwaService } from '@ta/capacitor';\nimport { FontIconComponent } from '@ta/icons';\nimport { TaBaseComponent } from '@ta/utils';\n\nimport { ButtonComponent } from '../button/button.component';\nimport { LinkComponent } from '../link/link.component';\nimport { LogoComponent } from '../logo/logo.component';\nimport { TitleComponent } from '../title/title.component';\nimport { ToastComponent } from '../toast/toast.component';\nimport { TaTranslationUI } from '../translation.service';\n\n@Component({\n  selector: 'ta-pwa',\n  templateUrl: './pwa.component.html',\n  styleUrls: ['./pwa.component.scss'],\n  standalone: true,\n  imports: [\n    NgIf,\n    FontIconComponent,\n    TranslateModule,\n    LinkComponent,\n    TitleComponent,\n    ButtonComponent,\n    LogoComponent,\n    ToastComponent,\n  ],\n})\nexport class PwaComponent extends TaBaseComponent implements OnInit {\n  @Output()\n  askClose: EventEmitter<null> = new EventEmitter();\n\n  public isShowed: boolean = false;\n  public pictureWidth: number = 29;\n\n  constructor(private _pwa: TaPwaService) {\n    super();\n    TaTranslationUI.getInstance();\n    this._pwa.isPWaCapability$.subscribe(\n      capability => (this.isShowed = capability && !LocalStorage.get('askForPwaAbility'))\n    );\n  }\n  ngOnInit() {\n    if (this.breakpoints.isDesktop) {\n      this.pictureWidth = 18;\n    }\n  }\n\n  public onNoClick(): void {\n    this.isShowed = false;\n  }\n  public onYesClick(): void {\n    this._pwa.launchInstall();\n    this.isShowed = false;\n  }\n  public dontAsk() {\n    LocalStorage.set('askForPwaAbility', 'false');\n    this.isShowed = false;\n  }\n}\n","@if (this.isShowed) {\n  <div class=\"pwa-layout\">\n    <ta-toast>\n      <div class=\"pwa-container\">\n        <div class=\"title-container\">\n          <div class=\"mb-space-lg\">\n            <ta-logo [widthPercentage]=\"this.pictureWidth\" [type]=\"'oneline'\" color=\"black\"></ta-logo>\n          </div>\n          <ta-title [level]=\"3\" class=\"mb-space-xs title\">{{ 'ui.pwa.title' | translate }}</ta-title>\n          {{ 'ui.pwa.description' | translate }}\n        </div>\n        <div class=\"cta col-auto flex-column g-space-md\">\n          <div class=\"cta-button flex-column g-space-md\">\n            <ta-button (action)=\"this.onYesClick()\">\n              <div class=\"button-content\">\n                <ta-font-icon name=\"download\" class=\"mr-space-xs\"></ta-font-icon>\n                {{ 'ui.pwa.install' | translate }}\n              </div>\n            </ta-button>\n            <ta-button [style]=\"'secondary'\" (action)=\"this.onNoClick()\">\n              {{ 'ui.pwa.cancel' | translate }}\n            </ta-button>\n          </div>\n          <div class=\"link-container flex-row g-space-sm\">\n            <ta-font-icon name=\"close-tool\" type=\"sm\"></ta-font-icon>\n            <ta-link (action)=\"this.dontAsk()\">\n              {{ 'ui.pwa.no-more' | translate }}\n            </ta-link>\n          </div>\n        </div>\n      </div>\n    </ta-toast>\n  </div>\n}\n","import { NgClass } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { TaSizes } from '@ta/styles';\n\n@Component({\n  selector: 'ta-text',\n  templateUrl: './text.component.html',\n  styleUrls: ['./text.component.scss'],\n  standalone: true,\n  imports: [NgClass],\n})\nexport class TextComponent {\n  /**\n   *\n   * Add small class to text\n   */\n  @Input()\n  size: TaSizes = 'md';\n\n  /**\n   *\n   * Add bold class to text\n   */\n  @Input()\n  isBold: boolean = false;\n\n  /**\n   *\n   * Add bold class to text\n   */\n  @Input()\n  color: string = 'primary';\n\n  public getColorClass() {\n    return `text-color-text-${this.color}`;\n  }\n}\n","<div\n  class=\"text\"\n  [class.bold]=\"this.isBold\"\n  [ngClass]=\"this.size + ' ' + this.getColorClass()\"\n>\n  <ng-content></ng-content>\n</div>\n","import { DatePipe, NgIf } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { TranslateModule } from '@ngx-translate/core';\nimport { differenceInCalendarDays } from 'date-fns';\n\nimport { TaTranslationUI } from '../translation.service';\n\n@Component({\n  selector: 'ta-time-ago',\n  templateUrl: './time-ago.component.html',\n  styleUrls: ['./time-ago.component.scss'],\n  standalone: true,\n  imports: [NgIf, TranslateModule, DatePipe],\n})\nexport class TimeAgoComponent {\n  @Input()\n  date!: string;\n\n  @Input()\n  withHours: boolean = false;\n\n  get absDays() {\n    return Math.abs(this.days);\n  }\n  get days() {\n    return differenceInCalendarDays(new Date(this.date), new Date());\n  }\n  public key() {\n    const diffDays = this.days;\n\n    return this._getTranslationKey(diffDays);\n  }\n\n  private _getTranslationKey(diffDays: number): string {\n    if (diffDays === 0) {\n      return 'ui.common.today';\n    }\n    if (diffDays === -1) {\n      return 'ui.common.yesterday';\n    }\n    if (diffDays === 1) {\n      return 'ui.common.tomorrow';\n    }\n    if (diffDays < -1 && diffDays >= -3) {\n      return 'ui.common.above';\n    }\n    if (diffDays > 1 && diffDays <= 3) {\n      return 'ui.common.ahead';\n    }\n    return 'ui.common.to-date';\n  }\n\n  constructor() {\n    TaTranslationUI.getInstance();\n  }\n}\n","<div class=\"flex-start g-space-sm\">\n  {{\n    this.key()\n      | translate : { date: this.date | date : \"shortDate\", days: this.absDays }\n  }}\n  @if(this.withHours) {\n  {{ this.date | date : \"shortTime\" }}\n  }\n</div>\n","import { NgIf, NgStyle } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\n@Component({\nselector: 'ta-trigram',\n  templateUrl: './trigram.component.html',\n  styleUrls: ['./trigram.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgStyle],\n})\nexport class TrigramComponent {\n  /**\n   * Text to display in trigram\n   */\n  @Input()\n  value!: string | null;\n\n  /**\n   * Size of trigram\n   */\n  @Input()\n  size: number = 35;\n\n  constructor() {}\n\n  public getFontSize() {\n    return Math.round(this.size / 3);\n  }\n}\n","@if (this.value) {\n  <div\n    class=\"trigram\"\n    [ngStyle]=\"{\n      'width.px': this.size,\n      'height.px': this.size,\n      'line-height.px': this.size,\n      'font-size.px': this.getFontSize()\n    }\"\n  >\n    {{ this.value }}\n  </div>\n}\n","import { NgStyle } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { FontIconComponent } from '@ta/icons';\nimport { TaSizes } from '@ta/styles';\n\nimport { TrigramComponent } from '../trigram/trigram.component';\n\nexport interface UserLogoNaming {\n  name: string;\n  firstName: string | null;\n  trigram: string;\n}\n\nexport interface UserLogoData {\n  firstname: string;\n  lastname: string;\n  picture?: string;\n}\n@Component({\n  selector: 'ta-user-logo',\n  templateUrl: './user-logo.component.html',\n  styleUrls: ['./user-logo.component.scss'],\n  standalone: true,\n  imports: [NgStyle, FontIconComponent, TrigramComponent],\n})\nexport class UserLogoComponent {\n  @Input()\n  user?: UserLogoData;\n\n  /**\n   * Size of user logo desired\n   */\n  @Input()\n  size?: TaSizes = 'lg';\n\n  @Input()\n  forcedSize?: number;\n\n  @Input()\n  defaultType: 'font' | 'trigram' = 'font';\n\n  get sizeValue() {\n    if (this.forcedSize) {\n      return this.forcedSize;\n    }\n    switch (this.size) {\n      case 'sm':\n        return 16;\n      case 'md':\n        return 24;\n      case 'lg':\n        return 48;\n      case 'xl':\n        return 70;\n      default:\n        return 48;\n    }\n  }\n\n  public getTrigram() {\n    return this._trigram(this.user?.firstname);\n  }\n\n  private _trigram = (name: string | null | undefined) => {\n    if (!name) return '';\n    if (name.length < 4) return name;\n\n    return (name[0] + name[2] + name[3]).toUpperCase();\n  };\n}\n","@if (this.user?.picture) {\n  <div class=\"img-container\">\n    <img\n      [src]=\"this.user?.picture\"\n      [ngStyle]=\"{ 'width.px': this.sizeValue, 'height.px': this.sizeValue }\"\n      class=\"user-image\"\n    />\n  </div>\n} @else if (this.defaultType === 'trigram') {\n  <ta-trigram [value]=\"this.getTrigram()\" [size]=\"this.sizeValue\"></ta-trigram>\n} @else if (this.defaultType === 'font') {\n  <div\n    class=\"profile-icon\"\n    [ngStyle]=\"{ 'width.px': this.sizeValue, 'height.px': this.sizeValue }\"\n  >\n    <ta-font-icon name=\"profil-picture\" [type]=\"this.size ?? 'lg'\"></ta-font-icon>\n  </div>\n}\n","import { NgFor, AsyncPipe } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { UserLogoData } from '../user-logo/user-logo.component';\nimport { UserLogoComponent } from '../user-logo/user-logo.component';\n\n@Component({\nselector: 'ta-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.scss'],\n  standalone: true,\n  imports: [NgFor, AsyncPipe, UserLogoComponent],\n})\nexport class UsersListComponent {\n  @Input()\n  users!: Observable<UserLogoData[]>;\n}\n","<div class=\"flex-row g-space-xs\">\n  @for (user of this.users | async; track user.firstname + ' ' + user.lastname) {\n    <ta-user-logo\n      [user]=\"user\"\n      size=\"md\"\n      defaultType=\"trigram\"\n      [attr.title]=\"user.firstname + ' ' + user.lastname\"\n    ></ta-user-logo>\n  }\n</div>\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { register } from 'swiper/element/bundle';\r\n\r\nimport { TaIconsModule, TaIconsService } from '@ta/icons';\r\nimport { TranslatePipe } from '@ta/translation';\r\nimport { TaDirectivePipeModule } from '@ta/utils';\r\n\r\nimport { BadgeComponent } from './badge/badge.component';\r\nimport { BulletComponent } from './bullet/bullet.component';\r\nimport { ActionButtonComponent } from './button/action/action-button.component';\r\nimport { ButtonComponent } from './button/button.component';\r\nimport { DualButtonComponent } from './button/dual/dual-button.component';\r\nimport { ButtonToolComponent } from './button/tool/tool.component';\r\nimport { CivilityComponent } from './civility/civility.component';\r\nimport { ContactInformationComponent } from './contact-information/contact-information.component';\r\nimport { CriticityComponent } from './criticity/criticity.component';\r\nimport { CultureComponent } from './culture/culture.component';\r\nimport { DepartmentIconListComponent } from './departments/department-icon-list/department-icon-list.component';\r\nimport { DepartmentsComponent } from './departments/departments.component';\r\nimport { DepartmentProfessionsComponent } from './departments/professions/professions.component';\r\nimport { DurationComponent } from './duration/duration.component';\r\nimport { ExpandableTextComponent } from './expandable-text/expandable-text.component';\r\nimport { TaExpansionPanelComponent } from './expansion-panel/expansion-panel.component';\r\nimport { FileImageComponent } from './file-image/file-image.component';\r\nimport { HourDateLineComponent } from './hour-date-line/hour-date-line.component';\r\nimport { LabelComponent } from './label/label.component';\r\nimport { LinkComponent } from './link/link.component';\r\nimport { LogoComponent } from './logo/logo.component';\r\nimport { MegaoctetComponent } from './megaoctet/megaoctet.component';\r\nimport { NewComponent } from './new/new.component';\r\nimport { NotificationBadgeContainerComponent } from './notification-badge/notification-badge-container.component';\r\nimport { NotificationBadgeComponent } from './notification-badge/notification-badge/notification-badge.component';\r\nimport { PictureInfoMessageComponent } from './picture-info-message/picture-info-message.component';\r\nimport { ProgressBarComponent } from './progress-bar/progress-bar.component';\r\nimport { ProgressCircleComponent } from './progress/circle/progress-circle/progress-circle.component';\r\nimport { ProgressBarDataComponent } from './progress/progress-bar-data/progress-bar-data.component';\r\nimport { PwaComponent } from './pwa/pwa.component';\r\nimport { TextComponent } from './text/text.component';\r\nimport { TimeAgoComponent } from './time-ago/time-ago.component';\r\nimport { TitleComponent } from './title/title.component';\r\nimport { ToastComponent } from './toast/toast.component';\r\nimport { TaTranslationUI } from './translation.service';\r\nimport { TrigramComponent } from './trigram/trigram.component';\r\nimport { TypedMessageComponent } from './typed-message/typed-message.component';\r\nimport { UserLogoComponent } from './user-logo/user-logo.component';\r\nimport { UsersListComponent } from './users-list/users-list.component';\r\n\r\nregister();\r\n\r\n/**\r\n * @deprecated Use standalone components instead.\r\n * This module will be removed in a future version.\r\n *\r\n * @example\r\n * // Instead of importing the module:\r\n * // import { TaUiModule } from '@ta/library-name';\r\n *\r\n * // Import the standalone components directly:\r\n * import { ActionButtonComponent, BadgeComponent, ButtonComponent } from '@ta/library-name';\r\n */\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatBottomSheetModule,\r\n    MatIconModule,\r\n    TaDirectivePipeModule,\r\n    TranslatePipe,\r\n    TaIconsModule,\r\n    MatExpansionModule,\r\n    MatDialogModule,\r\n    ActionButtonComponent,\r\n    BadgeComponent,\r\n    ButtonComponent,\r\n    CivilityComponent,\r\n    ContactInformationComponent,\r\n    DepartmentIconListComponent,\r\n    DepartmentProfessionsComponent,\r\n    DepartmentsComponent,\r\n    HourDateLineComponent,\r\n    LinkComponent,\r\n    LogoComponent,\r\n    ProgressCircleComponent,\r\n    TitleComponent,\r\n    TrigramComponent,\r\n    UserLogoComponent,\r\n    TextComponent,\r\n    ProgressBarDataComponent,\r\n    ProgressBarComponent,\r\n    PictureInfoMessageComponent,\r\n    TypedMessageComponent,\r\n    TaExpansionPanelComponent,\r\n    DualButtonComponent,\r\n    NotificationBadgeContainerComponent,\r\n    NotificationBadgeComponent,\r\n    PwaComponent,\r\n    ExpandableTextComponent,\r\n    ToastComponent,\r\n    LabelComponent,\r\n    NewComponent,\r\n    BulletComponent,\r\n    MegaoctetComponent,\r\n    FileImageComponent,\r\n    TimeAgoComponent,\r\n    DurationComponent,\r\n    UsersListComponent,\r\n    ButtonToolComponent,\r\n    CultureComponent,\r\n    CriticityComponent,\r\n  ],\r\n  exports: [\r\n    ActionButtonComponent,\r\n    BadgeComponent,\r\n    ButtonComponent,\r\n    CivilityComponent,\r\n    ContactInformationComponent,\r\n    DepartmentIconListComponent,\r\n    DepartmentProfessionsComponent,\r\n    DepartmentsComponent,\r\n    HourDateLineComponent,\r\n    LinkComponent,\r\n    LogoComponent,\r\n    ProgressCircleComponent,\r\n    TitleComponent,\r\n    TrigramComponent,\r\n    UserLogoComponent,\r\n    ProgressBarDataComponent,\r\n    ProgressBarComponent,\r\n    PictureInfoMessageComponent,\r\n    DualButtonComponent,\r\n    TaExpansionPanelComponent,\r\n    NotificationBadgeContainerComponent,\r\n    NotificationBadgeComponent,\r\n    PwaComponent,\r\n    ExpandableTextComponent,\r\n    ToastComponent,\r\n    LabelComponent,\r\n    NewComponent,\r\n    TextComponent,\r\n    BulletComponent,\r\n    MegaoctetComponent,\r\n    FileImageComponent,\r\n    TimeAgoComponent,\r\n    CriticityComponent,\r\n    DurationComponent,\r\n    UsersListComponent,\r\n    ButtonToolComponent,\r\n    CultureComponent,\r\n  ],\r\n  providers: [TaIconsService],\r\n})\r\nexport class TaUiModule {\r\n  constructor() {\r\n    TaTranslationUI.getInstance();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ta-tree-children',\n  standalone: true,\n  imports: [],\n  templateUrl: './tree-children.component.html',\n  styleUrl: './tree-children.component.scss',\n})\nexport class TaTreeChildrenComponent {}\n","<div class=\"children\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ta-tree-container',\n  standalone: true,\n  imports: [],\n  templateUrl: './tree-container.component.html',\n  styleUrl: './tree-container.component.scss',\n})\nexport class TaTreeContainerComponent {}\n","<div>\r\n  <ng-content></ng-content>\r\n</div>\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ta-tree-item',\n  standalone: true,\n  imports: [],\n  templateUrl: './tree-item.component.html',\n  styleUrl: './tree-item.component.scss',\n})\nexport class TaTreeItemComponent {}\n","<div class=\"item\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ta-toggle-card',\r\n  templateUrl: './toggle-card.component.html',\r\n  styleUrls: ['./toggle-card.component.scss'],\r\n  standalone: true,\r\n  imports: [NgClass],\r\n})\r\nexport class ToggleCardComponent {\r\n  @Input()\r\n  title: string = '';\r\n\r\n  @Input()\r\n  description?: string;\r\n\r\n  @Input()\r\n  icon?: string;\r\n\r\n  @Input()\r\n  isActive: boolean = false;\r\n\r\n  @Input()\r\n  disabled: boolean = false;\r\n\r\n  @Output()\r\n  toggle: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  public onToggle() {\r\n    if (!this.disabled) {\r\n      this.isActive = !this.isActive;\r\n      this.toggle.emit(this.isActive);\r\n    }\r\n  }\r\n}","<div\r\n  class=\"toggle-card\"\r\n  [ngClass]=\"{\r\n    'toggle-card--active': isActive,\r\n    'toggle-card--disabled': disabled\r\n  }\"\r\n  (click)=\"onToggle()\"\r\n>\r\n  <div class=\"toggle-card__content\">\r\n    @if (icon) {\r\n      <div class=\"toggle-card__icon\">\r\n        <i [class]=\"'icon-' + icon\"></i>\r\n      </div>\r\n    }\r\n    <div class=\"toggle-card__text\">\r\n      <div class=\"toggle-card__title\">{{ title }}</div>\r\n      @if (description) {\r\n        <div class=\"toggle-card__description\">{{ description }}</div>\r\n      }\r\n    </div>\r\n  </div>\r\n  <div class=\"toggle-card__indicator\">\r\n    <div class=\"toggle-card__check\" [ngClass]=\"{ 'toggle-card__check--active': isActive }\">\r\n      @if (isActive) {\r\n        <span>✓</span>\r\n      }\r\n    </div>\r\n  </div>\r\n</div>","import { Component, Input } from '@angular/core';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { TranslatePipe } from '@ta/translation';\nimport { TaBaseComponent } from '@ta/utils';\n\nimport { TaTranslationUI } from '../translation.service';\n\n@Component({\n  selector: 'ta-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss'],\n  standalone: true,\n  imports: [TranslatePipe, TranslateModule],\n})\nexport class BannerComponent extends TaBaseComponent {\n  @Input()\n  message!: string;\n\n  constructor() {\n    super();\n    TaTranslationUI.getInstance();\n  }\n}\n","<div class=\"banner\">\n  {{ this.message | translate }}\n</div>\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { TaSizes } from '@ta/styles';\r\n\r\nimport { UserLogoData } from '../../user-logo/user-logo.component';\r\nimport { UserLogoComponent } from '../../user-logo/user-logo.component';\r\nimport { IProfileData } from '../IProfileData';\r\n\r\n@Component({\r\n  selector: 'ta-inline-profile-data',\r\n  templateUrl: './inline-profile-data.component.html',\r\n  styleUrls: ['./inline-profile-data.component.scss'],\r\n  standalone: true,\r\n  imports: [UserLogoComponent],\r\n})\r\nexport class InlineProfileDataComponent {\r\n  @Input()\r\n  profile!: IProfileData;\r\n\r\n  @Input()\r\n  userLogo?: {\r\n    user: UserLogoData;\r\n    size?: TaSizes;\r\n  } | null;\r\n}\r\n","<div class=\"align-center\">\r\n  @if (this.userLogo) {\r\n    <div class=\"mr-space-xs\">\r\n      <ta-user-logo [user]=\"this.userLogo.user\" [size]=\"this.userLogo.size\"></ta-user-logo>\r\n    </div>\r\n  }\r\n\r\n  <div class=\"text\">\r\n    @if (this.profile.title?.second) {\r\n      <div class=\"text\">\r\n        {{ this.profile.title?.second }}\r\n      </div>\r\n    }\r\n    @if (this.profile.email) {\r\n      <div class=\"mail\">\r\n        {{ this.profile.email }}\r\n      </div>\r\n    }\r\n  </div>\r\n</div>\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\n\r\nimport { FontIconComponent } from '@ta/icons';\r\nimport { ColorType } from '@ta/styles';\r\n\r\nimport { TextComponent } from '../text/text.component';\r\n\r\nexport type BenefitType = 'success' | 'warning' | 'error';\r\n\r\nexport interface BenefitConfig {\r\n  icon: string;\r\n  backgroundColor: string;\r\n  borderColor: string;\r\n  iconColor: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'ta-benefit-item',\r\n  templateUrl: './benefit-item.component.html',\r\n  styleUrls: ['./benefit-item.component.scss'],\r\n  standalone: true,\r\n  imports: [NgClass, FontIconComponent, TextComponent],\r\n})\r\nexport class BenefitItemComponent {\r\n  @Input() type: ColorType = 'success';\r\n  @Input() text: string = '';\r\n\r\n  protected config!: BenefitConfig;\r\n  protected isInitialized = false;\r\n\r\n  public cssClasses() {\r\n    return [this.type];\r\n  }\r\n\r\n  public icon() {\r\n    switch (this.type) {\r\n      case 'success':\r\n        return 'check';\r\n      case 'warning':\r\n        return 'warning';\r\n      case 'alert':\r\n        return 'error';\r\n      default:\r\n        return 'check';\r\n    }\r\n  }\r\n}\r\n","<div \r\n  class=\"benefit-item\"\r\n  [ngClass]=\"this.cssClasses()\">\r\n  <ta-font-icon \r\n    [name]=\"this.icon()\"\r\n    class=\"benefit-icon\">\r\n  </ta-font-icon>\r\n  <ta-text \r\n    class=\"benefit-text\">\r\n    {{ text }}\r\n  </ta-text>\r\n</div>","/**\n * Common component\n */\n\nexport * from './ui.module';\n\nexport * from './tree/public-api';\n\nexport * from './badge/badge.component';\nexport * from './bullet/bullet.component';\nexport * from './button/action/action-button-data';\nexport * from './button/action/action-button.component';\nexport * from './button/button.component';\nexport * from './button/dual/dual-button.component';\nexport * from './button/tool/tool.component';\nexport * from './civility/civility.component';\nexport * from './contact-information/contact-information.component';\nexport * from './criticity/criticity.component';\nexport * from './culture/culture.component';\nexport * from './departments/department-icon-list/department-icon-list.component';\nexport * from './departments/departments.component';\nexport * from './departments/professions/professions.component';\nexport * from './duration/duration.component';\nexport * from './expandable-text/expandable-text.component';\nexport * from './expansion-panel/expansion-panel.component';\nexport * from './file-image/file-image.component';\nexport * from './hour-date-line/hour-date-line.component';\nexport * from './label/label.component';\nexport * from './link/link.component';\nexport * from './logo/logo.component';\nexport * from './megaoctet/megaoctet.component';\nexport * from './new/new.component';\nexport * from './notification-badge/notification-badge-container.component';\nexport * from './notification-badge/notification-badge/notification-badge.component';\nexport * from './picture-info-message/picture-info-message.component';\nexport * from './progress-bar/progress-bar.component';\nexport * from './progress/circle/progress-circle/progress-circle.component';\nexport * from './progress/progress-bar-data/progress-bar-data.component';\nexport * from './pwa/pwa.component';\nexport * from './segmented-tab-items/segmented-tab-item';\nexport * from './text/text.component';\nexport * from './time-ago/time-ago.component';\nexport * from './title/title.component';\nexport * from './toast/toast.component';\nexport * from './toggle-card/toggle-card.component';\nexport * from './trigram/trigram.component';\nexport * from './typed-message/typed-message.component';\nexport * from './user-logo/user-logo.component';\nexport * from './users-list/users-list.component';\nexport * from './banner/banner.component';\nexport * from './profil-data/inline-profile-data/inline-profile-data.component';\nexport * from './benefit-item/benefit-item.component';\n","import { Component, Input } from '@angular/core';\n\n@Component({\nselector: 'ta-layout-content',\n  templateUrl: './layout-content.component.html',\n  styleUrls: ['./layout-content.component.scss'],\n  standalone: true,\n})\nexport class LayoutContentComponent {\n  @Input()\n  autoHeight: boolean = false;\n\n  constructor() {}\n}\n","<div class=\"layout-content\" [class.auto]=\"this.autoHeight\">\n  <ng-content></ng-content>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\nselector: 'ta-layout-title',\n  templateUrl: './layout-title.component.html',\n  styleUrls: ['./layout-title.component.scss'],\n  standalone: true,\n})\nexport class LayoutTitleComponent {}\n","<div class=\"title\">\n  <ng-content></ng-content>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\nselector: 'ta-layout-header',\n  templateUrl: './layout-header.component.html',\n  styleUrls: ['./layout-header.component.scss'],\n  standalone: true,\n})\nexport class LayoutHeaderComponent {\n  constructor() {}\n}\n","<div class=\"header\">\n  <ng-content></ng-content>\n</div>\n","import { Injectable } from '@angular/core';\n\nimport { TaLazyTranslationService } from '@ta/translation';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaTranslationLayout extends TaLazyTranslationService {\n  constructor() {\n    super('layout');\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { FontIconComponent } from '@ta/icons';\nimport { TaBaseComponent } from '@ta/utils';\n\nimport { TitleComponent } from '../../../components/ui/title/title.component';\nimport { LayoutHeaderComponent } from '../layout-header/layout-header.component';\nimport { LayoutTitleComponent } from '../layout-title/layout-title.component';\nimport { TaTranslationLayout } from '../translation.service';\n\n@Component({\n  selector: 'ta-layout-full-panel',\n  templateUrl: './layout-full-panel.component.html',\n  styleUrls: ['./layout-full-panel.component.scss'],\n  standalone: true,\n  imports: [FontIconComponent, TranslateModule, LayoutTitleComponent, LayoutHeaderComponent, TitleComponent],\n})\nexport class LayoutFullPanelComponent extends TaBaseComponent {\n  @Input()\n  width = '400px';\n\n  @Input()\n  title: string = '';\n\n  @Output()\n  closeEvent = new EventEmitter();\n\n  constructor() {\n    super();\n    TaTranslationLayout.getInstance();\n  }\n\n  public askClose() {\n    this.closeEvent.emit();\n  }\n}\n","<div class=\"side-panel-background\" (click)=\"this.askClose()\"></div>\n<div class=\"side-panel\" [style.width]=\"this.width\">\n  <ta-layout-header>\n    <div class=\"flex-row justify-content-between\">\n      <ta-title [level]=\"3\" [isBold]=\"true\">{{ this.title | translate }}</ta-title>\n      <div (click)=\"this.askClose()\">\n        <ta-font-icon name=\"close\"></ta-font-icon>\n      </div>\n    </div>\n  </ta-layout-header>\n  <div class=\"layout-content\">\n    <ng-content></ng-content>\n  </div>\n</div>\n","import { AsyncPipe, NgIf } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { FontIconComponent } from '@ta/icons';\nimport { TaState } from '@ta/styles';\nimport { TaBaseComponent } from '@ta/utils';\n\nimport { ButtonComponent } from '../../../components/ui/button/button.component';\nimport { LayoutFullPanelComponent } from '../layout-full-panel/layout-full-panel.component';\n\ntype Panel = 'left' | 'right' | 'center';\n\n@Component({\n  selector: 'ta-layout-flex',\n  templateUrl: './layout-flex.component.html',\n  styleUrls: ['./layout-flex.component.scss'],\n  standalone: true,\n  imports: [NgIf, AsyncPipe, FontIconComponent, ButtonComponent, LayoutFullPanelComponent],\n})\nexport class LayoutFlexComponent extends TaBaseComponent {\n  @Input()\n  allowClose = false;\n\n  constructor() {\n    super();\n    this._registerSubscription(\n      this.breakpoints.isLessThanLG$.subscribe(value => {\n        if (value) {\n          this.view = ['left'];\n        } else {\n          this.view = ['left', 'right', 'center'];\n        }\n      })\n    );\n  }\n  public view: Panel[] = ['left', 'right', 'center'];\n\n  public state(panel: Panel): TaState {\n    if (!this.onlyOne()) {\n      return 'classic';\n    }\n    return this.has(panel) ? 'disabled' : 'classic';\n  }\n  public onlyOne() {\n    return this.view.length === 1;\n  }\n  public has(panel: Panel) {\n    return this.view.findIndex(v => v === panel) > -1;\n  }\n\n  public toggle(panel: Panel) {\n    const index = this.view.findIndex(v => v === panel);\n    if (index === -1) {\n      this.view.push(panel);\n    } else {\n      this.view.splice(index, 1);\n    }\n  }\n}\n","@if (this.breakpoints.isTablette$ | async) {\n  <div class=\"mobile-control full-width\">\n    <div class=\"space-between\">\n      <ta-button (action)=\"this.toggle('center')\" type=\"secondary\" [options]=\"{ circular: 'small' }\">\n        <ta-font-icon name=\"mail\" size=\"sm\"></ta-font-icon>\n      </ta-button>\n      <ta-button (action)=\"this.toggle('right')\" type=\"secondary\" [options]=\"{ circular: 'small' }\">\n        <ta-font-icon name=\"task-todo\" size=\"sm\"></ta-font-icon>\n      </ta-button>\n    </div>\n  </div>\n}\n<div class=\"flex-container\">\n  <div class=\"main\">\n    <div class=\"left\">\n      @if (this.allowClose) {\n        <div class=\"control\">\n          @if (this.has('left')) {\n            <ng-content select=\"[header-left]\"></ng-content>\n          }\n          <ta-button\n            (action)=\"this.toggle('left')\"\n            [style]=\"'secondary'\"\n            [options]=\"{ circular: 'small' }\"\n            [state]=\"this.state('left')\"\n          >\n            @if (this.has('left')) {\n              <ta-font-icon name=\"expand-horizontal\" size=\"sm\"></ta-font-icon>\n            } @else {\n              <ta-font-icon name=\"collapse-horizontal\" size=\"sm\"></ta-font-icon>\n            }\n          </ta-button>\n        </div>\n      }\n\n      @if (this.has('left')) {\n        <div class=\"content\">\n          <ng-template [ngTemplateOutlet]=\"leftTemplate\"></ng-template>\n        </div>\n      }\n    </div>\n\n    <div class=\"center\">\n      @if (this.allowClose) {\n        <div class=\"control\">\n          @if (this.has('center')) {\n            <ng-content select=\"[header-center]\"></ng-content>\n          }\n          <ta-button\n            (action)=\"this.toggle('center')\"\n            [style]=\"'secondary'\"\n            [options]=\"{ circular: 'small' }\"\n            [state]=\"this.state('center')\"\n          >\n            @if (this.has('center')) {\n              <ta-font-icon name=\"expand-horizontal\" size=\"sm\"></ta-font-icon>\n            } @else {\n              <ta-font-icon name=\"collapse-horizontal\" size=\"sm\"></ta-font-icon>\n            }\n          </ta-button>\n        </div>\n      }\n      @if (this.has('center') && !(this.breakpoints.isTablette$ | async)) {\n        <div class=\"content\">\n          <ng-template [ngTemplateOutlet]=\"centerTemplate\"></ng-template>\n        </div>\n      }\n    </div>\n  </div>\n\n  @if (!(this.breakpoints.isTablette$ | async)) {\n    <div class=\"second\">\n      <div class=\"right\">\n        @if (this.allowClose) {\n          <div class=\"control\">\n            @if (this.has('right')) {\n              <ng-content select=\"[header-right]\"></ng-content>\n            }\n            <ta-button\n              (action)=\"this.toggle('right')\"\n              [style]=\"'secondary'\"\n              [options]=\"{ circular: 'small' }\"\n              [state]=\"this.state('right')\"\n            >\n              @if (this.has('right')) {\n                <ta-font-icon name=\"expand-horizontal\" size=\"sm\"></ta-font-icon>\n              } @else {\n                <ta-font-icon name=\"collapse-horizontal\" size=\"sm\"></ta-font-icon>\n              }\n            </ta-button>\n          </div>\n        }\n        @if (this.has('right')) {\n          <div class=\"content\">\n            <ng-template [ngTemplateOutlet]=\"rightTemplate\"></ng-template>\n          </div>\n        }\n      </div>\n    </div>\n  }\n</div>\n\n@if (this.breakpoints.isTablette$ | async) {\n  @if (this.has('center')) {\n    <ta-layout-full-panel (closeEvent)=\"this.toggle('center')\" width=\"100%\">\n      <ng-template [ngTemplateOutlet]=\"centerTemplate\"></ng-template>\n    </ta-layout-full-panel>\n  }\n\n  @if (this.has('right')) {\n    <ta-layout-full-panel (closeEvent)=\"this.toggle('right')\">\n      <div class=\"full-width\">\n        <ng-template [ngTemplateOutlet]=\"rightTemplate\"></ng-template>\n      </div>\n    </ta-layout-full-panel>\n  }\n}\n\n<ng-template #leftTemplate>\n  <ng-content select=\"[left]\"></ng-content>\n</ng-template>\n\n<ng-template #centerTemplate>\n  <ng-content select=\"[center]\"></ng-content>\n</ng-template>\n\n<ng-template #rightTemplate>\n  <ng-content select=\"[right]\"></ng-content>\n</ng-template>\n","import { NgIf } from '@angular/common';\nimport { Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { FontIconComponent } from '@ta/icons';\nimport { TaBaseComponent } from '@ta/utils';\n\nimport { TaTranslationLayout } from '../../translation.service';\n\n@Component({\n  selector: 'ta-layout-header-default',\n  templateUrl: './layout-header-default.component.html',\n  styleUrls: ['./layout-header-default.component.scss'],\n  standalone: true,\n  imports: [NgIf, FontIconComponent, TranslateModule, MatMenuModule],\n})\nexport class LayoutHeaderDefaultComponent extends TaBaseComponent {\n  @Input()\n  showBack: boolean = true;\n\n  @Input()\n  menuTemplate?: TemplateRef<any>;\n\n  @Input()\n  title?: string;\n\n  @Output()\n  backEvent = new EventEmitter();\n\n  constructor() {\n    super();\n    TaTranslationLayout.getInstance();\n  }\n\n  public showBackAction() {\n    this._location.back();\n    this.backEvent.emit();\n  }\n}\n","<div class=\"icons space-between\">\n  <div class=\"back\">\n    @if (this.showBack) {\n      <ta-font-icon class=\"close\" (click)=\"this.showBackAction()\" name=\"arrow-big-left\" type=\"md\">\n      </ta-font-icon>\n    }\n  </div>\n\n  <div class=\"title\">\n    @if (this.title) {\n      {{ this.title | translate }}\n    }\n  </div>\n\n  <div class=\"more\" [matMenuTriggerFor]=\"menu\">\n    @if (this.menuTemplate) {\n      <ta-font-icon class=\"more\" name=\"more\" type=\"md\"></ta-font-icon>\n    }\n  </div>\n</div>\n\n<mat-menu #menu=\"matMenu\">\n  @if (this.menuTemplate) {\n    <ng-template *ngTemplateOutlet=\"this.menuTemplate; context: { element: menu }\"></ng-template>\n  }\n</mat-menu>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { FontIconComponent } from '@ta/icons';\nimport { TaBaseComponent } from '@ta/utils';\n\nimport { TitleComponent } from '../../../components/ui/title/title.component';\nimport { LayoutContentComponent } from '../layout-content/layout-content.component';\nimport { LayoutHeaderComponent } from '../layout-header/layout-header.component';\nimport { LayoutTitleComponent } from '../layout-title/layout-title.component';\nimport { TaTranslationLayout } from '../translation.service';\n\nexport type ModalStyle = 'full' | 'big' | 'classic' | 'small';\n@Component({\n  selector: 'ta-layout-modal',\n  templateUrl: './layout-modal.component.html',\n  styleUrls: ['./layout-modal.component.scss'],\n  standalone: true,\n  imports: [\n    FontIconComponent,\n    TranslateModule,\n    LayoutTitleComponent,\n    LayoutHeaderComponent,\n    TitleComponent,\n    LayoutContentComponent,\n  ],\n})\nexport class LayoutModalComponent extends TaBaseComponent implements OnInit {\n  @Input()\n  style: ModalStyle = 'classic';\n\n  @Input()\n  title: string = '';\n\n  constructor(public dialogRef: MatDialogRef<any>) {\n    super();\n    TaTranslationLayout.getInstance();\n  }\n\n  ngOnInit() {\n    this.dialogRef.addPanelClass(this.style + '-modal');\n  }\n\n  public close() {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"modal-container\">\n  <ta-layout-header>\n    <div class=\"header flex-row justify-content-between\">\n      <ta-title [level]=\"3\" [isBold]=\"true\">{{ this.title | translate }}</ta-title>\n      @if(!this.dialogRef.disableClose) {\n        <div (click)=\"this.close()\">\n          <ta-font-icon name=\"close\" type=\"md\"></ta-font-icon>\n        </div>\n      }\n\n    </div>\n  </ta-layout-header>\n  <ta-layout-content [autoHeight]=\"true\">\n    <ng-content></ng-content>\n  </ta-layout-content>\n</div>\n","import { NgTemplateOutlet } from '@angular/common';\nimport { Component, Inject, TemplateRef } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { Observable } from 'rxjs';\n\nimport { TaBaseModal } from '@ta/utils';\n\nimport { LayoutModalComponent, ModalStyle } from '../layout-modal.component';\n\nexport interface TemplateModalContainerData {\n  template: TemplateRef<any>;\n  askClosing$?: Observable<null>;\n  style?: ModalStyle;\n}\n@Component({\n  selector: '',\n  template:\n    '<ta-layout-modal [style]=\"this.style\"><ng-template [ngTemplateOutlet]=\"this.data.template\"></ng-template></ta-layout-modal>',\n  standalone: true,\n  imports: [LayoutModalComponent, NgTemplateOutlet],\n})\nexport class TemplateModalContainer extends TaBaseModal {\n  get style(): ModalStyle {\n    return this.data.style ?? 'full';\n  }\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: TemplateModalContainerData,\n    public dialogRef: MatDialogRef<any>\n  ) {\n    super();\n\n    if (this.data.askClosing$) {\n      this._registerSubscription(this.data.askClosing$.subscribe(_ => this.dialogRef.close()));\n    }\n  }\n}\n","import { NgIf } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, Component, Input, TemplateRef } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { FontIconComponent } from '@ta/icons';\nimport { TaBaseComponent } from '@ta/utils';\nimport { Observable } from 'rxjs';\n\nimport {\n  TemplateModalContainer,\n  TemplateModalContainerData,\n} from '../../layout-modal/layout-modal-container/layout-modal-container.component';\n\ninterface UserLogoNaming {\n  name: string;\n  firstName: string | null;\n  trigram: string;\n}\n\n@Component({\n  selector: 'ta-layout-header-logo',\n  templateUrl: './layout-header-logo.component.html',\n  styleUrls: ['./layout-header-logo.component.scss'],\n  standalone: true,\n  imports: [NgIf, FontIconComponent, MatMenuModule],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class LayoutHeaderLogoComponent extends TaBaseComponent {\n  @Input()\n  profile: {\n    template: TemplateRef<any>;\n    user: { profilePictureUrl?: string; naming: UserLogoNaming | null };\n  } | null = null;\n\n  @Input()\n  notificationTemplate: TemplateRef<any> | null = null;\n\n  @Input()\n  askClosing$: Observable<null> | undefined;\n\n  constructor(private _modal: MatDialog) {\n    super();\n  }\n\n  public userInfo(): {\n    profilePictureUrl?: string;\n    naming: UserLogoNaming | null;\n  } {\n    if (!this.profile) {\n      return {\n        naming: null,\n        profilePictureUrl: '',\n      };\n    }\n    return {\n      naming: this.profile.user.naming,\n      profilePictureUrl: this.profile.user.profilePictureUrl,\n    };\n  }\n\n  public goToHome() {\n    this._router.navigateByUrl('/');\n  }\n  public openProfile() {\n    if (!this.profile?.template) {\n      return;\n    }\n    this._modal.open<TemplateModalContainer, TemplateModalContainerData>(TemplateModalContainer, {\n      data: {\n        template: this.profile?.template,\n        askClosing$: this.askClosing$,\n      },\n    });\n  }\n\n  public openNotification() {\n    if (!this.notificationTemplate) {\n      return;\n    }\n    this._modal.open<TemplateModalContainer, TemplateModalContainerData>(TemplateModalContainer, {\n      data: {\n        template: this.notificationTemplate,\n        askClosing$: this.askClosing$,\n      },\n    });\n  }\n}\n","<div class=\"icons row align-items-center\">\n  <div class=\"image col-2\">\n    <ta-user-logo [userInfo]=\"this.userInfo()\" size=\"lg\" (click)=\"this.openProfile()\"></ta-user-logo>\n  </div>\n\n  <div class=\"title col-8\">\n    <ta-logo (click)=\"this.goToHome()\" color=\"black\"></ta-logo>\n  </div>\n\n  <div class=\"notif col-2\">\n    <ta-font-icon\n      name=\"notifications\"\n      type=\"lg\"\n      [class.disabled]=\"!this.notificationTemplate\"\n      (click)=\"this.openNotification()\"\n    ></ta-font-icon>\n  </div>\n</div>\n\n<mat-menu #showNotificationTemplate=\"matMenu\">\n  @if (this.notificationTemplate) {\n    <ng-template *ngTemplateOutlet=\"this.notificationTemplate\"></ng-template>\n  }\n</mat-menu>\n\n<mat-menu #showProfileTemplate=\"matMenu\">\n  @if (this.profile) {\n    <ng-template *ngTemplateOutlet=\"this.profile.template\"></ng-template>\n  }\n</mat-menu>\n","import { Component, Input } from '@angular/core';\n\n@Component({\nselector: 'ta-layout-side-cta',\n  templateUrl: './layout-side-cta.component.html',\n  styleUrls: ['./layout-side-cta.component.scss'],\n  standalone: true,\n})\nexport class LayoutSideCtaComponent {\n  @Input()\n  background: boolean = true;\n\n  constructor() {}\n}\n","<div class=\"side-cta-container\" [class.background]=\"this.background\">\n  <ng-content></ng-content>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\nselector: 'ta-layout-side',\n  templateUrl: './layout-side.component.html',\n  styleUrls: ['./layout-side.component.scss'],\n  standalone: true,\n})\nexport class LayoutSideComponent {}\n","<div class=\"side-container\">\n  <div class=\"side-content\">\n    <ng-content select=\"ta-layout-side-content\"></ng-content>\n  </div>\n  <div class=\"side-cta\">\n    <ng-content select=\"ta-layout-side-cta\"></ng-content>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\nselector: 'ta-layout-side-content',\n  templateUrl: './layout-side-content.component.html',\n  styleUrls: ['./layout-side-content.component.scss'],\n  standalone: true,\n})\nexport class LayoutSideContentComponent {}\n","<div class=\"form-container\">\n  <ng-content></ng-content>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\nselector: 'ta-layout-nav',\n  templateUrl: './layout-nav.component.html',\n  styleUrls: ['./layout-nav.component.scss'],\n  standalone: true,\n})\nexport class LayoutNavComponent {\n  constructor() {}\n}\n","<ng-content></ng-content>\n","import { Component } from '@angular/core';\n\n@Component({\nselector: 'ta-layout-panel',\n  templateUrl: './layout-panel.component.html',\n  styleUrls: ['./layout-panel.component.scss'],\n  standalone: true,\n})\nexport class LayoutPanelComponent {\n  constructor() {}\n}\n","<ng-content></ng-content>\n","import { AsyncPipe } from '@angular/common';\nimport { AfterViewChecked, Component, ElementRef, Input, ViewChild, inject } from '@angular/core';\n\nimport { combineLatest, map, startWith } from 'rxjs';\n\nimport { TaSharedMenuService } from '@ta/services';\nimport { TaBaseComponent } from '@ta/utils';\n\n@Component({\n  selector: 'ta-layout-with-bottom-nav',\n  templateUrl: './layout-with-bottom-nav.component.html',\n  styleUrls: ['./layout-with-bottom-nav.component.scss'],\n  standalone: true,\n  imports: [AsyncPipe],\n})\nexport class LayoutWithBottomNavComponent extends TaBaseComponent implements AfterViewChecked {\n  @Input()\n  type!: string;\n\n  @ViewChild('bottomNavContainer')\n  private _bottomNav!: ElementRef<HTMLDivElement>;\n\n  @ViewChild('bottomLayoutContainer')\n  private _layoutContent!: ElementRef<HTMLDivElement>;\n\n  public sharedMenu = inject(TaSharedMenuService);\n\n  public isMinimized$ = combineLatest([\n    this.sharedMenu.isMinimized$.pipe(startWith(false)),\n    this.breakpoints.isDesktop$,\n  ]).pipe(\n    map(data => ({\n      isMinimized: data[0],\n      isDesktop: data[1],\n    })),\n    map(({ isMinimized, isDesktop }) => isMinimized && isDesktop)\n  );\n\n  constructor() {\n    super();\n  }\n  ngAfterViewChecked(): void {\n    const clientHeight = this._bottomNav.nativeElement.clientHeight;\n    const clientWidth = this._bottomNav.nativeElement.clientWidth;\n\n    this._layoutContent.nativeElement.setAttribute('style', `padding-bottom: ${clientHeight + 10}px`);\n    this._layoutContent.nativeElement.setAttribute('style', `width: ${window.screen.width - clientWidth}px`);\n  }\n}\n","<div class=\"layout-container\" [class.is-menu-minimized]=\"this.isMinimized$ | async\">\n  <div class=\"layout-content-container\" #bottomLayoutContainer>\n    <div class=\"container\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n  <div class=\"bottom-nav-container\" #bottomNavContainer>\n    <ng-content select=\"ta-layout-nav\"></ng-content>\n  </div>\n</div>\n","import { NgClass } from '@angular/common';\nimport { AfterViewInit, Component, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatDrawer, MatDrawerContainer } from '@angular/material/sidenav';\n\n@Component({\nselector: 'ta-layout-with-panel',\n  templateUrl: './layout-with-panel.component.html',\n  styleUrls: ['./layout-with-panel.component.scss'],\n  standalone: true,\n  imports: [NgClass, MatDrawer, MatDrawerContainer],\n})\nexport class LayoutWithPanelComponent implements OnChanges, AfterViewInit {\n  @Input()\n  open!: boolean;\n\n  @ViewChild('drawer') drawer: MatDrawer | null = null;\n\n  constructor() {}\n\n  public ngAfterViewInit() {\n    this.manageDrawer();\n  }\n  public ngOnChanges(changes: SimpleChanges) {\n    this.manageDrawer();\n  }\n\n  public manageDrawer() {\n    if (this.open === true) {\n      this.drawer?.open();\n    } else {\n      this.drawer?.close();\n    }\n  }\n}\n","<mat-drawer-container hasBackdrop [ngClass]=\"{ isOpen: this.open }\">\n  <mat-drawer #drawer [position]=\"'end'\" class=\"drawer\">\n    <ng-content select=\"ta-layout-panel\"></ng-content>\n  </mat-drawer>\n\n  <div class=\"ta-layout-content-container\">\n    <ng-content select=\"ta-layout-content\"></ng-content>\n  </div>\n</mat-drawer-container>\n","import { Component } from '@angular/core';\nimport { LayoutWithBottomNavComponent } from '../with-bottom-nav/layout-with-bottom-nav.component';\nimport { LayoutNavComponent } from '../layout-nav/layout-nav.component';\n\n@Component({\nselector: 'ta-layout-page',\n  templateUrl: './layout-page.component.html',\n  styleUrls: ['./layout-page.component.scss'],\n  standalone: true,\n  imports: [LayoutWithBottomNavComponent, LayoutNavComponent],\n})\nexport class LayoutPageComponent {}\n","<div class=\"layout-page-header\">\n  <ng-content select=\"ta-layout-header\"></ng-content>\n</div>\n<div class=\"layout-page-title\">\n  <ng-content select=\"ta-layout-title\"></ng-content>\n</div>\n<div class=\"layout-page-content\">\n  <ng-content></ng-content>\n</div>\n<ta-layout-nav>\n  <ng-content select=\"ta-layout-nav\"></ng-content>\n</ta-layout-nav>\n","import { Component } from '@angular/core';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { FontIconComponent } from '@ta/icons';\nimport { TaBaseComponent } from '@ta/utils';\n\nimport { ButtonComponent } from '../../../../components/ui/button/button.component';\nimport { TaTranslationLayout } from '../../translation.service';\n\n@Component({\n  selector: 'ta-layout-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss'],\n  standalone: true,\n  imports: [FontIconComponent, TranslateModule, ButtonComponent],\n})\nexport class LayoutNotFoundComponent extends TaBaseComponent {\n  constructor() {\n    super();\n    TaTranslationLayout.getInstance();\n  }\n\n  public goToHome() {\n    this._router.navigateByUrl('/');\n  }\n}\n","<div class=\"not-found-container\">\n  <div class=\"icon\">\n    <ta-font-icon name=\"close-tool\" size=\"lg\"></ta-font-icon>\n  </div>\n  <div class=\"title\">\n    {{ 'layout.notfound.title' | translate }}\n  </div>\n  <div class=\"content\">\n    {{ 'layout.notfound.content' | translate }}\n  </div>\n  <div class=\"button\">\n    <ta-button (action)=\"this.goToHome()\">{{ 'layout.notfound.cta' | translate }}</ta-button>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\nimport { TaIconsModule } from '@ta/icons';\nimport { TranslatePipe } from '@ta/translation';\nimport { TaDirectivePipeModule } from '@ta/utils';\n\nimport { TaUiModule } from '../../components/ui/ui.module';\nimport { LayoutContentComponent } from './layout-content/layout-content.component';\nimport { LayoutNotFoundComponent } from './layout-error/not-found/not-found.component';\nimport { LayoutFlexComponent } from './layout-flex/layout-flex.component';\nimport { LayoutFullPanelComponent } from './layout-full-panel/layout-full-panel.component';\nimport { LayoutHeaderDefaultComponent } from './layout-header/layout-header-default/layout-header-default.component';\nimport { LayoutHeaderLogoComponent } from './layout-header/layout-header-logo/layout-header-logo.component';\nimport { LayoutHeaderComponent } from './layout-header/layout-header.component';\nimport { TemplateModalContainer } from './layout-modal/layout-modal-container/layout-modal-container.component';\nimport { LayoutModalComponent } from './layout-modal/layout-modal.component';\nimport { LayoutNavComponent } from './layout-nav/layout-nav.component';\nimport { LayoutPageComponent } from './layout-page/layout-page.component';\nimport { LayoutPanelComponent } from './layout-panel/layout-panel.component';\nimport { LayoutSideContentComponent } from './layout-side/layout-side-content/layout-side-content.component';\nimport { LayoutSideCtaComponent } from './layout-side/layout-side-cta/layout-side-cta.component';\nimport { LayoutSideComponent } from './layout-side/layout-side.component';\nimport { LayoutTitleComponent } from './layout-title/layout-title.component';\nimport { TaTranslationLayout } from './translation.service';\nimport { LayoutWithBottomNavComponent } from './with-bottom-nav/layout-with-bottom-nav.component';\nimport { LayoutWithPanelComponent } from './with-panel/layout-with-panel.component';\n\n/**\n * @deprecated Use standalone components instead.\n * This module will be removed in a future version.\n *\n * @example\n * // Instead of importing the module:\n * // import { TaLayoutModule } from '@ta/library-name';\n *\n * // Import the standalone components directly:\n * import { LayoutFlexComponent, LayoutContentComponent, LayoutHeaderComponent } from '@ta/library-name';\n */\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatSidenavModule,\n    TaUiModule,\n    TaIconsModule,\n    MatMenuModule,\n    TaDirectivePipeModule,\n    MatDialogModule,\n    TranslatePipe,\n    LayoutContentComponent,\n    LayoutHeaderComponent,\n    LayoutNavComponent,\n    LayoutPanelComponent,\n    LayoutWithBottomNavComponent,\n    LayoutWithPanelComponent,\n    LayoutPageComponent,\n    LayoutTitleComponent,\n    LayoutHeaderDefaultComponent,\n    LayoutModalComponent,\n    LayoutHeaderLogoComponent,\n    LayoutFullPanelComponent,\n    LayoutSideCtaComponent,\n    LayoutSideComponent,\n    LayoutSideContentComponent,\n    TemplateModalContainer,\n    LayoutNotFoundComponent,\n    LayoutFlexComponent,\n  ],\n  exports: [\n    LayoutFlexComponent,\n    LayoutContentComponent,\n    LayoutHeaderComponent,\n    LayoutNavComponent,\n    LayoutPanelComponent,\n    LayoutWithBottomNavComponent,\n    LayoutWithPanelComponent,\n    LayoutPageComponent,\n    LayoutTitleComponent,\n    LayoutHeaderDefaultComponent,\n    LayoutModalComponent,\n    LayoutHeaderLogoComponent,\n    LayoutNotFoundComponent,\n    TemplateModalContainer,\n    LayoutFullPanelComponent,\n    LayoutSideCtaComponent,\n    LayoutSideComponent,\n    LayoutSideContentComponent,\n  ],\n})\nexport class TaLayoutModule {\n  constructor() {\n    TaTranslationLayout.getInstance();\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\nselector: 'ta-card-image',\n  templateUrl: './card-image.component.html',\n  styleUrls: ['./card-image.component.scss'],\n  standalone: true,\n})\nexport class CardImageComponent {\n  @Input()\n  src: string = '';\n\n  constructor() {}\n}\n","<div class=\"img-container\">\n  <img [src]=\"this.src\" class=\"img\" />\n</div>\n","import { NgClass } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NewComponent } from '../../components/ui/new/new.component';\n\n@Component({\nselector: 'ta-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n  standalone: true,\n  imports: [NgClass, NewComponent],\n})\nexport class CardComponent {\n  @Input()\n  highlight: boolean = false;\n\n  @Input()\n  shadow: boolean = true;\n\n  @Input()\n  fullHeight: boolean = false;\n\n  @Input()\n  noContent: boolean = false;\n\n  @Input()\n  isNew: boolean = false;\n\n  @Output()\n  click: EventEmitter<any> = new EventEmitter<any>();\n\n  public hasHandler: boolean = false;\n\n  ngOnInit() {\n    this.hasHandler = this.click.observers.length > 0;\n  }\n  constructor() {}\n\n  public clickTrigger() {\n    this.click.emit(null);\n  }\n}\n","<div\n  class=\"card flex-column\"\n  [ngClass]=\"{\n    'card-shadow': this.shadow,\n    'highlight': this.highlight,\n    'full-height': this.fullHeight,\n    'no-card-border': this.noContent,\n  }\"\n  [class.hover]=\"this.hasHandler\"\n  (click)=\"this.clickTrigger()\"\n>\n  <ta-new [visible]=\"this.isNew\"></ta-new>\n  <div class=\"responsive-content\">\n    <div class=\"img-container\">\n      <div class=\"card-img-container\">\n        <ng-content select=\"ta-card-image\"></ng-content>\n      </div>\n    </div>\n    <div class=\"content-container flex-column flex-full\">\n      <div class=\"card-header-container\">\n        <ng-content select=\"ta-card-header\"></ng-content>\n      </div>\n      <div class=\"card-content-container flex-full\">\n        <ng-content select=\"ta-card-content\" class=\"flex-full\"></ng-content>\n      </div>\n      <div class=\"card-cta-container\">\n        <ng-content select=\"ta-card-cta\"></ng-content>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\nselector: 'ta-card-content',\n  templateUrl: './card-content.component.html',\n  styleUrls: ['./card-content.component.scss'],\n  standalone: true,\n})\nexport class CardContentComponent {\n  constructor() {}\n}\n","<div class=\"card-content flex-full\">\n  <ng-content></ng-content>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\nselector: 'ta-card-cta',\n  templateUrl: './card-cta.component.html',\n  styleUrls: ['./card-cta.component.scss'],\n  standalone: true,\n})\nexport class CardCtaComponent {\n  constructor() {}\n}\n","<div class=\"cta\">\n  <ng-content></ng-content>\n</div>\n","import { FontIconComponent } from '@ta/icons';\nimport { Component, Input } from '@angular/core';\nimport { TextComponent } from '../../../components/ui/text/text.component';\nimport { TitleComponent } from '../../../components/ui/title/title.component';\nimport { CardComponent } from '../card.component';\nimport { CardContentComponent } from '../content/card-content.component';\n\n@Component({\nselector: 'ta-dashboard-card',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  standalone: true,\n  imports: [FontIconComponent, TextComponent, TitleComponent, CardComponent, CardContentComponent],\n})\nexport class DashboardCardComponent {\n  @Input()\n  icon!: string;\n}\n","<ta-card [fullHeight]=\"true\">\n  <ta-card-content class=\"flex-full\">\n    <div class=\"background\">\n      <ta-font-icon [name]=\"this.icon\" type=\"big\"></ta-font-icon>\n    </div>\n    <div class=\"dashboard-content flex-full\">\n      <div class=\"icon-container\">\n        <ta-font-icon class=\"icon-color-icon-brand-primary\" [name]=\"this.icon\" type=\"lg\"></ta-font-icon>\n      </div>\n      <div class=\"flex-column g-space-md flex-full\">\n        <div class=\"title\">\n          <ta-title [level]=\"2\" [isBold]=\"true\">\n            <ng-content select=\"ta-card-title\"></ng-content>\n          </ta-title>\n        </div>\n        <div class=\"subtitle\">\n          <ta-text size=\"sm\">\n            <ng-content select=\"ta-card-subtitle\"></ng-content>\n          </ta-text>\n        </div>\n        <div class=\"flex-full flex-column\">\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </div>\n  </ta-card-content>\n</ta-card>\n","import { Component } from '@angular/core';\n\n@Component({\nselector: 'ta-card-header',\n  templateUrl: './card-header.component.html',\n  styleUrls: ['./card-header.component.scss'],\n  standalone: true,\n})\nexport class CardHeaderComponent {\n  constructor() {}\n}\n","<div class=\"header\">\n  <div class=\"header-tag\">\n    <ng-content select=\"ta-card-tag\"></ng-content>\n  </div>\n  <div class=\"header-title\">\n    <div class=\"title\">\n      <ng-content select=\"ta-card-title\"></ng-content>\n    </div>\n    <div class=\"subtitle\">\n      <ng-content select=\"ta-card-subtitle\"></ng-content>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\nselector: 'ta-card-subtitle',\n  templateUrl: './card-subtitle.component.html',\n  styleUrls: ['./card-subtitle.component.scss'],\n  standalone: true,\n})\nexport class CardSubtitleComponent {\n  constructor() {}\n}\n","<ng-content></ng-content>\n","import { Component } from '@angular/core';\n\n@Component({\nselector: 'ta-card-tag',\n  templateUrl: './card-tag.component.html',\n  styleUrls: ['./card-tag.component.scss'],\n  standalone: true,\n})\nexport class CardTagComponent {\n  constructor() {}\n}\n","<ng-content></ng-content>\n","import { Component } from '@angular/core';\n\n@Component({\nselector: 'ta-card-title',\n  templateUrl: './card-title.component.html',\n  styleUrls: ['./card-title.component.scss'],\n  standalone: true,\n})\nexport class CardTitleComponent {\n  constructor() {}\n}\n","<ng-content></ng-content>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { TaIconsModule } from '@ta/icons';\n\nimport { TaUiModule } from '../../components/ui/ui.module';\nimport { CardImageComponent } from './card-image/card-image.component';\nimport { CardComponent } from './card.component';\nimport { CardContentComponent } from './content/card-content.component';\nimport { CardCtaComponent } from './cta/card-cta.component';\nimport { DashboardCardComponent } from './dashboard/dashboard.component';\nimport { CardHeaderComponent } from './header/card-header.component';\nimport { CardSubtitleComponent } from './subtitle/card-subtitle.component';\nimport { CardTagComponent } from './tag/card-tag.component';\nimport { CardTitleComponent } from './title/card-title.component';\n\nconst exports = [\n  CardComponent,\n  CardHeaderComponent,\n  CardTitleComponent,\n  CardSubtitleComponent,\n  CardCtaComponent,\n  CardTagComponent,\n  CardContentComponent,\n  DashboardCardComponent,\n  CardImageComponent,\n];\n\nconst declarations: any[] = [];\n\n/**\n * @deprecated Use standalone components instead.\n * This module will be removed in a future version.\n */\n@NgModule({\n  declarations: declarations,\n  imports: [CommonModule, TaUiModule, TaIconsModule, ...exports],\n  exports: exports,\n})\nexport class TaCardModule {}\n","import { CommonModule } from '@angular/common';\nimport {\n  CUSTOM_ELEMENTS_SCHEMA,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { Swiper } from 'swiper/types';\n\nexport interface SwiperData {\n  visible$: Observable<boolean>;\n  key: string;\n}\n\n@Component({\n  selector: 'ta-swiper',\n  standalone: true,\n  templateUrl: './swiper.component.html',\n  styleUrls: ['./swiper.component.scss'],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  encapsulation: ViewEncapsulation.None,\n  imports: [CommonModule],\n})\nexport class SwiperComponent {\n  @Input()\n  public swipeTemplate!: TemplateRef<any>;\n\n  @Input()\n  public slides!: SwiperData[];\n\n  @Input()\n  public slidesPerPage: number = 3.5;\n\n  @Input()\n  public slidesPerGroup: number = 1;\n\n  @Input()\n  public isFreeMode: boolean = true;\n\n  @Input()\n  public startAt: number = 1;\n\n  @Output()\n  public onSlideChanged = new EventEmitter<number>();\n\n  @ViewChild('swiperContainer', { static: false })\n  swiperContainer!: ElementRef<{ swiper: Swiper }>;\n\n  constructor() {}\n\n  ngAfterViewInit() {\n    if (this.startAt) {\n      this.swiperContainer.nativeElement.swiper.slideTo(this.startAt);\n    }\n  }\n\n  public trackByKey(_: any, item: SwiperData): string {\n    return item.key;\n  }\n\n  public slideChanged($event: any) {\n    if ($event.detail) this.onSlideChanged.emit($event.detail[0].activeIndex);\n  }\n}\n","<swiper-container\n  #swiperContainer\n  [attr.slides-per-view]=\"this.slidesPerPage\"\n  (transitionend)=\"this.slideChanged($event)\"\n  [attr.free-mode]=\"this.isFreeMode\"\n  [attr.slides-per-group]=\"this.slidesPerGroup\"\n  [attr.zoom]=\"true\"\n  [attr.pagination]=\"{\n    type: 'bullets',\n  }\"\n  watch-slides-progress=\"true\"\n  init=\"true\"\n  class=\"w-full\"\n  active-index=\"3\"\n>\n  @for (element of this.slides; track this.trackByKey($index, element)) {\n    @if (element.visible$ | async) {\n      <swiper-slide>\n        <ng-container\n          [ngTemplateOutlet]=\"this.swipeTemplate\"\n          [ngTemplateOutletContext]=\"{\n            element: element\n          }\"\n        >\n        </ng-container>\n      </swiper-slide>\n    }\n  }\n</swiper-container>\n","import { NgModule } from '@angular/core';\n\nimport { SwiperComponent } from './swiper.component';\n\n/**\n * @deprecated Use standalone components instead.\n * This module will be removed in a future version.\n *\n * @example\n * // Instead of importing the module:\n * // import { TaSwiperModule } from '@ta/library-name';\n *\n * // Import the standalone components directly:\n * import { SwiperComponent } from '@ta/library-name';\n */\n@NgModule({\n  declarations: [],\n  imports: [SwiperComponent],\n  exports: [SwiperComponent],\n  providers: [],\n})\nexport class TaSwiperModule {}\n","import { Injectable } from '@angular/core';\n\nimport { TaLazyTranslationService } from '@ta/translation';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaTranslationContainer extends TaLazyTranslationService {\n  constructor() {\n    super('container');\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ButtonComponent } from '../../../../components/ui/button/button.component';\nimport { LayoutModalComponent } from '../../../layout/layout-modal/layout-modal.component';\nimport { TaTranslationContainer } from '../../translation.service';\nimport { ModalParameter } from '../common-modal';\n\n@Component({\n  selector: '',\n  templateUrl: './modal-validation.component.html',\n  styleUrls: ['./modal-validation.component.scss'],\n  standalone: true,\n  imports: [TranslateModule, ButtonComponent, LayoutModalComponent],\n})\nexport class ValidationModal {\n  public get title(): string {\n    return this.data?.title ?? 'validation.modal.title';\n  }\n\n  public get subtitle(): string {\n    return this.data?.subtitle ?? 'validation.modal.content';\n  }\n\n  constructor(\n    public dialogRef: MatDialogRef<ValidationModal>,\n    @Inject(MAT_DIALOG_DATA) public data?: ModalParameter\n  ) {\n    TaTranslationContainer.getInstance();\n  }\n\n  public onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n  public onYesClick(): void {\n    this.dialogRef.close(true);\n  }\n}\n","<ta-layout-modal [style]=\"'classic'\" [title]=\"this.title\">\n  <div class=\"subtitle\">\n    {{ this.subtitle | translate }}\n  </div>\n\n  <div class=\"align-end flex-start g-space-md ml-a\">\n    <div>\n      <ta-button [type]=\"'danger'\" (action)=\"this.onNoClick()\">\n        {{ 'container.validation.modal.cta.cancel' | translate }}\n      </ta-button>\n    </div>\n\n    <div>\n      <ta-button (action)=\"this.onYesClick()\">\n        {{ 'container.validation.modal.cta.ok' | translate }}\n      </ta-button>\n    </div>\n  </div>\n</ta-layout-modal>\n","import { MatDialog } from '@angular/material/dialog';\n\nimport { Observable } from 'rxjs';\n\nimport { ValidationModal } from './modal/modal-validation.component';\n\nexport type ModalParameter = {\n  title?: string;\n  subtitle?: string;\n};\n\nexport const openModal = (dialog: MatDialog, data?: ModalParameter): Observable<boolean> => {\n  const dialogRef = dialog.open(ValidationModal, {\n    data: data,\n  });\n\n  return dialogRef.afterClosed();\n};\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { TaBaseComponent } from '@ta/utils';\n\nimport { openModal } from '../common-modal';\n\n@Component({\n  selector: 'ta-container-validation',\n  templateUrl: './container-validation.component.html',\n  standalone: true,\n})\nexport class ContainerValidationComponent extends TaBaseComponent {\n  @Input()\n  disabled = false;\n\n  @Output()\n  validated = new EventEmitter();\n\n  constructor(public dialog: MatDialog) {\n    super();\n  }\n\n  openModal(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    openModal(this.dialog).subscribe(result => {\n      if (result) {\n        this.validated.emit();\n      }\n    });\n  }\n}\n","<div stopPropagationActivation (click)=\"this.openModal()\">\n  <ng-content></ng-content>\n</div>\n","import { NgIf } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { TaIconType } from '@ta/icons';\nimport { TaSizes } from '@ta/styles';\nimport { MessageLevel } from '@ta/utils';\n\nimport { PictureInfoMessageComponent } from '../../../components/ui/picture-info-message/picture-info-message.component';\n\n@Component({\n  selector: 'ta-empty',\n  templateUrl: './empty.component.html',\n  styleUrls: ['./empty.component.scss'],\n  standalone: true,\n  imports: [NgIf, PictureInfoMessageComponent],\n})\nexport class EmptyComponent {\n  @Input() isEmpty: boolean = true;\n  @Input() isLight: boolean = true;\n  @Input() showMessage: boolean = true;\n\n  @Input() text?: string = 'container.empty.light-message';\n  @Input() type?: MessageLevel = 'info';\n\n  @Input() icon?: TaIconType | string = 'ghost';\n  @Input() iconSize?: TaSizes | 'xl' = 'lg';\n}\n","@if (this.isEmpty) {\n  <div class=\"empty-container\">\n    @if (this.showMessage) {\n      @if (this.isLight) {\n        <ta-picture-info-message [type]=\"this.type\" [text]=\"this.text\"> </ta-picture-info-message>\n      } @else {\n        <ta-picture-info-message [icon]=\"this.icon\" [iconSize]=\"this.iconSize\" [type]=\"this.type\" [text]=\"this.text\">\n        </ta-picture-info-message>\n      }\n    }\n  </div>\n} @else {\n  <ng-content></ng-content>\n}\n","import { NgIf } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { PictureInfoMessageComponent } from '../../../components/ui/picture-info-message/picture-info-message.component';\nimport { TaTranslationContainer } from '../translation.service';\n\n@Component({\n  selector: 'ta-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss'],\n  standalone: true,\n  imports: [NgIf, TranslateModule, PictureInfoMessageComponent],\n})\nexport class ErrorComponent {\n  @Input()\n  message = '';\n\n  @Input()\n  code = 200;\n\n  constructor() {\n    TaTranslationContainer.getInstance();\n  }\n}\n","@if (this.message === '') {\n  <ng-content></ng-content>\n} @else {\n  <ta-picture-info-message icon=\"sad\" iconSize=\"lg\" type=\"danger\" text=\"container.error.title\">\n  </ta-picture-info-message>\n  <p>{{ this.message | translate }}</p>\n}\n","export type Placeholder = {\n  type: 'container' | 'row' | 'col' | 'item' | 'picture' | 'avatar';\n  children?: Placeholder[];\n  gridSize?: number;\n  attributes?: ('big' | 'empty' | 'block' | 'no-shadow')[];\n  repeat: number;\n};\n\nexport const cardPlaceholder: Placeholder = {\n  type: 'item',\n  children: [\n    {\n      type: 'col',\n      children: [\n        {\n          type: 'row',\n          children: [\n            {\n              type: 'col',\n              gridSize: 8,\n              attributes: ['big'],\n              repeat: 1,\n            },\n            {\n              type: 'col',\n              gridSize: 4,\n              attributes: ['empty', 'big'],\n              repeat: 1,\n            },\n            {\n              type: 'col',\n              gridSize: 4,\n              repeat: 1,\n            },\n          ],\n          repeat: 1,\n        },\n      ],\n      repeat: 1,\n    },\n    {\n      type: 'col',\n      gridSize: 2,\n      children: [\n        {\n          type: 'avatar',\n          repeat: 1,\n        },\n      ],\n      repeat: 1,\n    },\n    {\n      type: 'col',\n      gridSize: 12,\n      children: [\n        {\n          type: 'row',\n          children: [\n            {\n              type: 'col',\n              gridSize: 8,\n              repeat: 1,\n            },\n            {\n              type: 'col',\n              gridSize: 4,\n              attributes: ['empty'],\n              repeat: 1,\n            },\n          ],\n          repeat: 2,\n        },\n      ],\n      repeat: 1,\n    },\n    {\n      type: 'row',\n      children: [\n        {\n          type: 'col',\n          gridSize: 12,\n          repeat: 6,\n        },\n      ],\n      repeat: 1,\n    },\n  ],\n  repeat: 1,\n};\n\nexport const menuPlaceholder: Placeholder = {\n  type: 'row',\n  children: [\n    {\n      type: 'col',\n      gridSize: 3,\n      attributes: ['big'],\n      repeat: 1,\n    },\n    {\n      type: 'col',\n      gridSize: 1,\n      attributes: ['big', 'empty'],\n      repeat: 1,\n    },\n    {\n      type: 'col',\n      gridSize: 4,\n      attributes: ['big'],\n      repeat: 1,\n    },\n    {\n      type: 'col',\n      gridSize: 1,\n      attributes: ['big', 'empty'],\n      repeat: 1,\n    },\n    {\n      type: 'col',\n      gridSize: 3,\n      attributes: ['big'],\n      repeat: 1,\n    },\n  ],\n  repeat: 3,\n};\n\nexport const morePlaceholder: Placeholder = {\n  type: 'row',\n  children: [\n    {\n      type: 'col',\n      gridSize: 4,\n      attributes: ['big', 'empty'],\n      repeat: 1,\n    },\n    {\n      type: 'col',\n      gridSize: 4,\n      attributes: ['big'],\n      repeat: 1,\n    },\n    {\n      type: 'col',\n      gridSize: 4,\n      attributes: ['big', 'empty'],\n      repeat: 1,\n    },\n    {\n      type: 'col',\n      gridSize: 12,\n      attributes: ['empty'],\n      repeat: 1,\n    },\n  ],\n  repeat: 3,\n};\n\nexport const fileListPlaceholder: Placeholder = {\n  type: 'container',\n  attributes: ['block'],\n  children: [\n    {\n      type: 'item',\n      attributes: ['no-shadow'],\n      gridSize: 3,\n      repeat: 1,\n      children: [\n        {\n          type: 'col',\n          gridSize: 4,\n          repeat: 9,\n          children: [\n            {\n              type: 'picture',\n              repeat: 1,\n            },\n          ],\n        },\n      ],\n    },\n  ],\n  repeat: 1,\n};\nexport const cardListPlaceholder: Placeholder = {\n  type: 'container',\n  children: [\n    {\n      type: 'container',\n      children: [cardPlaceholder],\n      repeat: 3,\n    },\n    {\n      type: 'container',\n      children: [morePlaceholder],\n      repeat: 3,\n    },\n  ],\n  repeat: 1,\n};\n\nexport const detailPlaceholder: Placeholder = {\n  type: 'container',\n  children: [\n    {\n      type: 'container',\n      children: [cardPlaceholder],\n      repeat: 2,\n    },\n  ],\n  repeat: 1,\n};\nexport type PlaceholderConfig = 'default' | 'cardList' | 'detail' | 'fileList';\n\nexport const getPlaceholderConfig = (\n  placeHolder: PlaceholderConfig\n): Placeholder => {\n  switch (placeHolder) {\n    case 'cardList':\n      return cardListPlaceholder;\n    case 'detail':\n      return detailPlaceholder;\n    case 'fileList':\n      return fileListPlaceholder;\n    default:\n      return cardPlaceholder;\n  }\n};\n","import { NgFor, NgClass } from '@angular/common';\nimport { Component, Input } from '@angular/core';\n\nimport { createRange } from '@ta/utils';\n\nimport { Placeholder } from './config';\n\n@Component({\nselector: 'ta-placeholder',\n  templateUrl: './placeholder.component.html',\n  styleUrls: ['./placeholder.component.scss'],\n  standalone: true,\n  imports: [NgFor, NgClass],\n})\nexport class PlaceholderComponent {\n  @Input()\n  placeholder!: Placeholder;\n\n  constructor() {}\n\n  public getFakeArray(num: number): Array<number> {\n    return createRange(num);\n  }\n\n  public getColClass(gridSize: number | undefined): string {\n    return gridSize ? `ph-col-${gridSize}` : '';\n  }\n\n  public getAttributesClass(attributes: string[]): string {\n    return attributes ? attributes.join(' ') : '';\n  }\n}\n","<div class=\"placeholder-container\">\n  <ng-template\n    [ngTemplateOutlet]=\"Item\"\n    [ngTemplateOutletContext]=\"{ placeholder: this.placeholder }\"\n  ></ng-template>\n</div>\n\n<ng-template #Item let-placeholderItem=\"placeholder\">\n  @for (index of this.getFakeArray(placeholderItem.repeat); track index) {\n    @switch (placeholderItem.type) {\n      @case ('container') {\n        <ng-template\n          [ngTemplateOutlet]=\"Children\"\n          [ngTemplateOutletContext]=\"{\n            children: placeholderItem.children\n          }\"\n        ></ng-template>\n      }\n      @case ('row') {\n        <div\n          class=\"ph-row\"\n          [ngClass]=\"this.getAttributesClass(placeholderItem.attributes)\"\n        >\n          <ng-template\n            [ngTemplateOutlet]=\"Children\"\n            [ngTemplateOutletContext]=\"{\n              children: placeholderItem.children\n            }\"\n          ></ng-template>\n        </div>\n      }\n      @case ('item') {\n        <div\n          class=\"ph-item\"\n          [ngClass]=\"this.getAttributesClass(placeholderItem.attributes)\"\n        >\n          <ng-template\n            [ngTemplateOutlet]=\"Children\"\n            [ngTemplateOutletContext]=\"{\n              children: placeholderItem.children\n            }\"\n          ></ng-template>\n        </div>\n      }\n      @case ('col') {\n        <div\n          [ngClass]=\"\n            this.getColClass(placeholderItem.gridSize) +\n            ' ' +\n            this.getAttributesClass(placeholderItem.attributes)\n          \"\n        >\n          <ng-template\n            [ngTemplateOutlet]=\"Children\"\n            [ngTemplateOutletContext]=\"{\n              children: placeholderItem.children\n            }\"\n          ></ng-template>\n        </div>\n      }\n      @case ('picture') {\n        <div\n          class=\"ph-picture\"\n          [ngClass]=\"this.getColClass(placeholderItem.gridSize)\"\n        ></div>\n      }\n      @case ('avatar') {\n        <div\n          class=\"ph-avatar\"\n          [ngClass]=\"this.getColClass(placeholderItem.gridSize)\"\n        ></div>\n      }\n      @default {\n        <ng-template\n          [ngTemplateOutlet]=\"Children\"\n          [ngTemplateOutletContext]=\"{\n            children: placeholderItem.children\n          }\"\n        ></ng-template>\n      }\n    }\n  }\n</ng-template>\n\n<ng-template #Children let-children=\"children\">\n  @for (child of children; track child) {\n    <ng-template\n      [ngTemplateOutlet]=\"Item\"\n      [ngTemplateOutletContext]=\"{ placeholder: child }\"\n    ></ng-template>\n  }\n</ng-template>\n","import { NgIf } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { Placeholder, PlaceholderConfig, getPlaceholderConfig } from '../placeholder/config';\nimport { PlaceholderComponent } from '../placeholder/placeholder.component';\n\n@Component({\nselector: 'ta-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n  standalone: true,\n  imports: [NgIf, MatProgressSpinnerModule, PlaceholderComponent],\n})\nexport class LoaderComponent {\n  @Input()\n  isLoading = false;\n\n  @Input()\n  skeleton: PlaceholderConfig | null = null;\n\n  constructor() {\n    this.isLoading = true;\n  }\n\n  public getPlaceholder(): Placeholder {\n    return getPlaceholderConfig(this.skeleton || 'default');\n  }\n}\n","@if (this.isLoading) {\n  @if (!this.skeleton) {\n    <div class=\"pt-space-15\">\n      <mat-spinner style=\"margin: 0 auto\" [diameter]=\"20\"></mat-spinner>\n    </div>\n  } @else {\n    <ta-placeholder [placeholder]=\"this.getPlaceholder()\"></ta-placeholder>\n  }\n} @else {\n  <ng-content></ng-content>\n}\n","import { AsyncPipe, NgClass, NgFor, NgIf } from '@angular/common';\nimport { Component, Input, OnInit, TemplateRef } from '@angular/core';\n\nimport { TaDeviceInfoService } from '@ta/capacitor';\nimport { TaBaseComponent } from '@ta/utils';\n\n@Component({\n  selector: 'ta-swiper-light',\n  templateUrl: './swiper-light.component.html',\n  styleUrls: ['./swiper-light.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgFor, NgClass, AsyncPipe],\n})\nexport class SwiperLightComponent extends TaBaseComponent implements OnInit {\n  @Input()\n  items!: any[];\n\n  @Input()\n  template!: TemplateRef<any>;\n\n  @Input()\n  swiperClasses = 'g-space-sm';\n\n  @Input()\n  containerClasses?: string;\n\n  @Input()\n  forced?: boolean = false;\n\n  public classes: string = '';\n\n  constructor(private _deviceInfoService: TaDeviceInfoService) {\n    super();\n  }\n\n  ngOnInit() {\n    if (this.forced) {\n      this.classes = `items ${this.swiperClasses ?? ''}`;\n    } else {\n      this._registerSubscription(\n        this._deviceInfoService.os$.subscribe(os => {\n          this.classes = this._deviceInfoService.isMobileOs(os)\n            ? `items ${this.swiperClasses ?? ''}`\n            : (this.containerClasses ?? '');\n        })\n      );\n    }\n  }\n\n  public track = (_: any, item: any) => {\n    if (item.hasOwnProperty('id')) {\n      return this.trackById(_, item);\n    }\n    if (item.hasOwnProperty('key')) {\n      return this.trackByKey(_, item);\n    }\n    return item;\n  };\n}\n","<div class=\"swiper-container\" [ngClass]=\"this.classes\">\n  @for (item of this.items; track this.track($index, item)) {\n    @if ((item.visible$ | async) !== false) {\n      <ng-container *ngTemplateOutlet=\"this.template; context: { element: item }\"></ng-container>\n    }\n  }\n</div>\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\nimport { TaIconsModule } from '@ta/icons';\r\nimport { TranslatePipe } from '@ta/translation';\r\nimport { TaDirectivePipeModule } from '@ta/utils';\r\n\r\nimport { TaUiModule } from '../../components/ui/ui.module';\r\nimport { TaLayoutModule } from '../layout/layout.module';\r\nimport { EmptyComponent } from './empty/empty.component';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { LoaderComponent } from './loader/loader.component';\r\nimport { PlaceholderComponent } from './placeholder/placeholder.component';\r\nimport { SwiperLightComponent } from './swiper-light/swiper-light.component';\r\nimport { TaTranslationContainer } from './translation.service';\r\nimport { ContainerValidationComponent } from './validation/cta/container-validation.component';\r\nimport { ValidationModal } from './validation/modal/modal-validation.component';\r\n\r\n/**\r\n * @deprecated Use standalone components instead.\r\n * This module will be removed in a future version.\r\n *\r\n * @example\r\n * // Instead of importing the module:\r\n * // import { TaContainerModule } from '@ta/library-name';\r\n *\r\n * // Import the standalone components directly:\r\n * import { ContainerValidationComponent, EmptyComponent, ErrorComponent } from '@ta/library-name';\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    TaDirectivePipeModule,\r\n    TaUiModule,\r\n    TaIconsModule,\r\n    TranslatePipe,\r\n    TaLayoutModule,\r\n    ContainerValidationComponent,\r\n    ValidationModal,\r\n    EmptyComponent,\r\n    ErrorComponent,\r\n    LoaderComponent,\r\n    PlaceholderComponent,\r\n    SwiperLightComponent,\r\n  ],\r\n  declarations: [],\r\n  exports: [ContainerValidationComponent, EmptyComponent, ErrorComponent, LoaderComponent, SwiperLightComponent],\r\n})\r\nexport class TaContainerModule {\r\n  constructor() {\r\n    TaTranslationContainer.getInstance();\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\nselector: 'ta-list-element',\n  templateUrl: './list-element.component.html',\n  styleUrls: ['./list-element.component.scss'],\n  standalone: true,\n})\nexport class ListElementComponent {\n  @Input()\n  withSeparator: boolean = true;\n\n  @Input()\n  flexColumn: boolean = false;\n\n  @Output()\n  action = new EventEmitter();\n}\n","<div class=\"list-element\" [class.list-border]=\"this.withSeparator\" [class.responsive-container]=\"this.flexColumn\">\n  <div class=\"titles-container\" (click)=\"this.action.emit()\">\n    <div class=\"list-title-container\">\n      <ng-content select=\"ta-list-title\"></ng-content>\n    </div>\n    <div class=\"list-sub-title-container\">\n      <ng-content select=\"ta-list-sub-title\"></ng-content>\n    </div>\n  </div>\n  <div class=\"tag-container align-center\">\n    <div class=\"list-tag-container\">\n      <ng-content select=\"ta-list-tag\"></ng-content>\n    </div>\n  </div>\n  <div class=\"list-extra-information\" (click)=\"this.action.emit()\">\n    <ng-content select=\"ta-list-extra-information\"></ng-content>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\nselector: 'ta-list-extra-information',\n  templateUrl: './list-extra-information.component.html',\n  styleUrls: ['./list-extra-information.component.scss'],\n  standalone: true,\n})\nexport class ListExtraInformationComponent {}\n","<ng-content></ng-content>\n","import { Component } from '@angular/core';\n\n@Component({\nselector: 'ta-list-container',\n  templateUrl: './list-container.component.html',\n  styleUrls: ['./list-container.component.scss'],\n  standalone: true,\n})\nexport class ListContainerComponent {}\n","<div class=\"list-container\">\n  <ng-content></ng-content>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\nselector: 'ta-list-sub-title',\n  templateUrl: './list-sub-title.component.html',\n  styleUrls: ['./list-sub-title.component.scss'],\n  standalone: true,\n})\nexport class ListSubTitleComponent {}\n","<ng-content></ng-content>\n","import { Component } from '@angular/core';\n\n@Component({\nselector: 'ta-list-tag',\n  templateUrl: './list-tag.component.html',\n  styleUrls: ['./list-tag.component.scss'],\n  standalone: true,\n})\nexport class ListTagComponent {}\n","<ng-content></ng-content>\n","import { Component } from '@angular/core';\n\n@Component({\nselector: 'ta-list-title',\n  templateUrl: './list-title.component.html',\n  styleUrls: ['./list-title.component.scss'],\n  standalone: true,\n})\nexport class ListTitleComponent {}\n","<ng-content></ng-content>\n","import { NgModule } from '@angular/core';\n\nimport { ListElementComponent } from './element/list-element.component';\nimport { ListExtraInformationComponent } from './extra-information/list-extra-information.component';\nimport { ListContainerComponent } from './list-container/list-container.component';\nimport { ListSubTitleComponent } from './sub-title/list-sub-title.component';\nimport { ListTagComponent } from './tag/list-tag.component';\nimport { ListTitleComponent } from './title/list-title.component';\n\n/**\n * @deprecated Use standalone components instead.\n * This module will be removed in a future version.\n *\n * @example\n * // Instead of importing the module:\n * // import { TaListModule } from '@ta/library-name';\n *\n * // Import the standalone components directly:\n * import { ListTitleComponent, ListElementComponent, ListContainerComponent } from '@ta/library-name';\n */\n@NgModule({\n  declarations: [],\n  imports: [\n    ListTitleComponent,\n    ListElementComponent,\n    ListContainerComponent,\n    ListSubTitleComponent,\n    ListTagComponent,\n    ListExtraInformationComponent,\n  ],\n  exports: [\n    ListTitleComponent,\n    ListElementComponent,\n    ListContainerComponent,\n    ListSubTitleComponent,\n    ListTagComponent,\n    ListExtraInformationComponent,\n  ],\n  providers: [],\n})\nexport class TaListModule {}\n","import { ConnectedPosition, Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Injectable, InjectionToken, Injector, TemplateRef, Type } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\nimport { TaBaseService } from '@ta/server';\n\nexport const MENU_TEMPLATE = new InjectionToken<TemplateRef<any>>('MENU_TEMPLATE');\nexport const MENU_MAX_HEIGHT = new InjectionToken<number>('MENU_MAX_HEIGHT');\n\nexport interface OverlayMenuConfig<T = any> {\n  menuComponent?: Type<T>;\n  triggerElement?: HTMLElement;\n  template?: TemplateRef<any>;\n  onClose?: () => void;\n  matchTriggerWidth?: boolean;\n  positions?: ConnectedPosition[];\n  offsetX?: number;\n  offsetY?: number;\n  maxHeight?: number;\n  manualTrigger?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OverlayService extends TaBaseService {\n  private _overlayRef?: OverlayRef;\n  private _onCloseCallback?: () => void;\n  private readonly _onCloseSubject = new Subject<void>();\n  public readonly onClose$ = this._onCloseSubject.asObservable();\n\n  private readonly defaultPositions: ConnectedPosition[] = [\n    {\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'top',\n    },\n    {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'bottom',\n    },\n    {\n      originX: 'end',\n      originY: 'bottom',\n      overlayX: 'end',\n      overlayY: 'top',\n    },\n    {\n      originX: 'end',\n      originY: 'top',\n      overlayX: 'end',\n      overlayY: 'bottom',\n    },\n  ];\n\n  constructor(\n    private overlay: Overlay,\n    private injector: Injector\n  ) {\n    super();\n  }\n\n  public openMenu<T>(config: OverlayMenuConfig<T>) {\n    const {\n      menuComponent,\n      triggerElement,\n      template,\n      onClose,\n      matchTriggerWidth = true,\n      positions = this.defaultPositions,\n      offsetX = 2,\n      offsetY = 2,\n      maxHeight,\n    } = config;\n\n    if (!triggerElement) {\n      console.log('OverlayService: triggerElement is required.');\n      return;\n    }\n    if (!menuComponent) {\n      console.log('OverlayService: menuComponent is required.');\n      return;\n    }\n\n    this._overlayRef?.dispose();\n    this._onCloseCallback = onClose;\n\n    const positionStrategy = this.overlay\n      .position()\n      .flexibleConnectedTo(triggerElement)\n      .withFlexibleDimensions(true)\n      .withPush(true)\n      .withDefaultOffsetX(offsetX)\n      .withDefaultOffsetY(offsetY)\n      .withPositions(positions);\n\n    this._overlayRef = this.overlay.create({\n      positionStrategy,\n      hasBackdrop: true,\n      backdropClass: 'cdk-overlay-transparent-backdrop',\n      scrollStrategy: this.overlay.scrollStrategies.close(),\n      width: matchTriggerWidth ? triggerElement.clientWidth : undefined,\n    });\n    this._registerSubscription(this._overlayRef.backdropClick().subscribe(() => this.closeMenu()));\n\n    const portalInjector = Injector.create({\n      providers: [\n        { provide: OverlayRef, useValue: this._overlayRef },\n        { provide: MENU_TEMPLATE, useValue: template },\n        { provide: MENU_MAX_HEIGHT, useValue: maxHeight },\n      ],\n      parent: this.injector,\n    });\n\n    const portal = new ComponentPortal(menuComponent, null, portalInjector);\n    this._overlayRef.attach(portal);\n  }\n\n  public closeMenu() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = undefined;\n    }\n\n    this._onCloseSubject.next();\n\n    if (this._onCloseCallback) {\n      this._onCloseCallback();\n      this._onCloseCallback = undefined;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, Inject, Input, Optional, TemplateRef } from '@angular/core';\n\nimport { MENU_MAX_HEIGHT, MENU_TEMPLATE } from '../overlay.service';\n\n@Component({\n  selector: 'ta-default-panel',\n  templateUrl: './default-panel.component.html',\n  styleUrls: ['./default-panel.component.scss'],\n  standalone: true,\n  host: {\n    style: 'display: block; width: 100%;',\n  },\n  imports: [CommonModule],\n})\nexport class TaDefaultPanelComponent {\n  @Input() template?: TemplateRef<any>;\n\n  constructor(\n    @Optional() @Inject(MENU_TEMPLATE) public templateRef: TemplateRef<any>,\n    @Optional() @Inject(MENU_MAX_HEIGHT) public maxHeight: number\n  ) {}\n}\n","<div class=\"menu-panel\" [style.max-height.px]=\"this.maxHeight\">\n  @if (this.templateRef) {\n    <ng-container *ngTemplateOutlet=\"this.templateRef\"></ng-container>\n  } @else {\n    <ng-template> Ceci est le template par defaut. Il faut renseigner un template. </ng-template>\n  }\n</div>\n","import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport { TaBaseComponent } from '@ta/utils';\n\nimport { TaDefaultPanelComponent } from '../default-panel/default-panel.component';\nimport { OverlayMenuConfig, OverlayService } from '../overlay.service';\n\n@Component({\n  selector: 'ta-overlay-panel',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './overlay-panel.component.html',\n  styleUrls: ['./overlay-panel.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TaOverlayPanelComponent extends TaBaseComponent implements AfterViewInit {\n  @ContentChild('panelTrigger') triggerTpl!: TemplateRef<any>;\n  @ContentChild('panelContent') contentTpl!: TemplateRef<any>;\n\n  @ViewChild('triggerHost', { static: true }) triggerHostRef!: ElementRef<HTMLElement>;\n\n  @Input() panelConfig!: OverlayMenuConfig;\n\n  @Input() position: 'default' | 'right' = 'default';\n\n  @Output() closed = new EventEmitter<void>();\n\n  private _configWithDefaults: OverlayMenuConfig<unknown> | null = null;\n\n  constructor(private overlayService: OverlayService) {\n    super();\n  }\n\n  ngAfterViewInit(): void {\n    if (!this.panelConfig) {\n      console.log('Missing panelConfig');\n      return;\n    }\n    if (!this.contentTpl) {\n      console.log('Missing panelContent');\n      return;\n    }\n    if (!this.triggerTpl) {\n      console.log('Missing panelTrigger');\n      return;\n    }\n\n    if (this.position === 'right') {\n      this.panelConfig.positions = [\n        {\n          // Position à droite du déclencheur\n          originX: 'end',\n          originY: 'center',\n          overlayX: 'start',\n          overlayY: 'center',\n        },\n        {\n          // Position à gauche du déclencheur (fallback)\n          originX: 'start',\n          originY: 'center',\n          overlayX: 'end',\n          overlayY: 'center',\n        },\n      ];\n    }\n\n    this._configWithDefaults = {\n      ...this.panelConfig,\n      menuComponent: this.panelConfig.menuComponent ?? TaDefaultPanelComponent,\n      triggerElement: this.triggerHostRef?.nativeElement,\n      template: this.contentTpl,\n    };\n\n    this._registerSubscription(\n      this.overlayService.onClose$.subscribe(() => {\n        this.closed.emit();\n      })\n    );\n  }\n\n  public open(manual = false) {\n    if (!manual && this._configWithDefaults && this._configWithDefaults.manualTrigger === true) {\n      return;\n    }\n    if (!this._configWithDefaults?.triggerElement) {\n      console.log('OverlayPanel: no trigger element resolved');\n      return;\n    }\n    this.overlayService.openMenu(this._configWithDefaults);\n  }\n  public close() {\n    this.overlayService.closeMenu();\n  }\n}\n","<div class=\"flex-fill\" #triggerHost (click)=\"this.open()\">\n  <ng-container *ngTemplateOutlet=\"this.triggerTpl\"></ng-container>\n</div>\n","/*\n * Public API Surface of ui\n */\n\nexport * from './lib/components/ui/public-api';\n\nexport * from './lib/modules/layout/public-api';\nexport * from './lib/modules/card/public-api';\nexport * from './lib/modules/swiper/public-api';\nexport * from './lib/modules/container/public-api';\nexport * from './lib/modules/list/public-api';\nexport * from './lib/modules/overlay-panel/public-api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2","i1.OverlayService"],"mappings":"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"}