import { AsyncPipe } from '@angular/common';
import { Component, Input, ViewChild, inject } from '@angular/core';
import { combineLatest, map, startWith } from 'rxjs';
import { TaSharedMenuService } from '@ta/services';
import { TaBaseComponent } from '@ta/utils';
import * as i0 from "@angular/core";
export class LayoutWithBottomNavComponent extends TaBaseComponent {
    constructor() {
        super();
        this.sharedMenu = inject(TaSharedMenuService);
        this.isMinimized$ = combineLatest([
            this.sharedMenu.isMinimized$.pipe(startWith(false)),
            this.breakpoints.isDesktop$,
        ]).pipe(map(data => ({
            isMinimized: data[0],
            isDesktop: data[1],
        })), map(({ isMinimized, isDesktop }) => isMinimized && isDesktop));
    }
    ngAfterViewChecked() {
        const clientHeight = this._bottomNav.nativeElement.clientHeight;
        const clientWidth = this._bottomNav.nativeElement.clientWidth;
        this._layoutContent.nativeElement.setAttribute('style', `padding-bottom: ${clientHeight + 10}px`);
        this._layoutContent.nativeElement.setAttribute('style', `width: ${window.screen.width - clientWidth}px`);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: LayoutWithBottomNavComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.14", type: LayoutWithBottomNavComponent, isStandalone: true, selector: "ta-layout-with-bottom-nav", inputs: { type: "type" }, viewQueries: [{ propertyName: "_bottomNav", first: true, predicate: ["bottomNavContainer"], descendants: true }, { propertyName: "_layoutContent", first: true, predicate: ["bottomLayoutContainer"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<div class=\"layout-container\" [class.is-menu-minimized]=\"this.isMinimized$ | async\">\n  <div class=\"layout-content-container\" #bottomLayoutContainer>\n    <div class=\"container\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n  <div class=\"bottom-nav-container\" #bottomNavContainer>\n    <ng-content select=\"ta-layout-nav\"></ng-content>\n  </div>\n</div>\n", styles: [".layout-container{display:flex;flex-direction:column;margin:0}.layout-container .layout-content-container{width:100%;overflow:hidden}@media screen and (min-width: 576px){.layout-container .layout-content-container{order:2}}.layout-container .layout-content-container .container{width:auto}@media screen and (min-width: 576px){.layout-container .layout-content-container .container{padding:var(--ta-components-header-top) var(--ta-space-md) 0 var(--ta-space-md);padding-bottom:var(--ta-space-sm)!important}}.layout-container .bottom-nav-container{width:100%}@media screen and (max-width: 575px){.layout-container .bottom-nav-container{position:fixed;bottom:0;left:0;right:0;z-index:2}}@media screen and (min-width: 576px){.layout-container .bottom-nav-container{position:sticky;width:100px;order:1}}@media screen and (min-width: 992px){.layout-container .bottom-nav-container{width:220px}}.layout-container.is-menu-minimized .bottom-nav-container{width:100px!important}\n"], dependencies: [{ kind: "pipe", type: AsyncPipe, name: "async" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: LayoutWithBottomNavComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-layout-with-bottom-nav', standalone: true, imports: [AsyncPipe], template: "<div class=\"layout-container\" [class.is-menu-minimized]=\"this.isMinimized$ | async\">\n  <div class=\"layout-content-container\" #bottomLayoutContainer>\n    <div class=\"container\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n  <div class=\"bottom-nav-container\" #bottomNavContainer>\n    <ng-content select=\"ta-layout-nav\"></ng-content>\n  </div>\n</div>\n", styles: [".layout-container{display:flex;flex-direction:column;margin:0}.layout-container .layout-content-container{width:100%;overflow:hidden}@media screen and (min-width: 576px){.layout-container .layout-content-container{order:2}}.layout-container .layout-content-container .container{width:auto}@media screen and (min-width: 576px){.layout-container .layout-content-container .container{padding:var(--ta-components-header-top) var(--ta-space-md) 0 var(--ta-space-md);padding-bottom:var(--ta-space-sm)!important}}.layout-container .bottom-nav-container{width:100%}@media screen and (max-width: 575px){.layout-container .bottom-nav-container{position:fixed;bottom:0;left:0;right:0;z-index:2}}@media screen and (min-width: 576px){.layout-container .bottom-nav-container{position:sticky;width:100px;order:1}}@media screen and (min-width: 992px){.layout-container .bottom-nav-container{width:220px}}.layout-container.is-menu-minimized .bottom-nav-container{width:100px!important}\n"] }]
        }], ctorParameters: () => [], propDecorators: { type: [{
                type: Input
            }], _bottomNav: [{
                type: ViewChild,
                args: ['bottomNavContainer']
            }], _layoutContent: [{
                type: ViewChild,
                args: ['bottomLayoutContainer']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0LXdpdGgtYm90dG9tLW5hdi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL21vZHVsZXMvbGF5b3V0L3dpdGgtYm90dG9tLW5hdi9sYXlvdXQtd2l0aC1ib3R0b20tbmF2LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvbW9kdWxlcy9sYXlvdXQvd2l0aC1ib3R0b20tbmF2L2xheW91dC13aXRoLWJvdHRvbS1uYXYuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzVDLE9BQU8sRUFBb0IsU0FBUyxFQUFjLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWxHLE9BQU8sRUFBRSxhQUFhLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUVyRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDbkQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLFdBQVcsQ0FBQzs7QUFTNUMsTUFBTSxPQUFPLDRCQUE2QixTQUFRLGVBQWU7SUF1Qi9EO1FBQ0UsS0FBSyxFQUFFLENBQUM7UUFkSCxlQUFVLEdBQUcsTUFBTSxDQUFDLG1CQUFtQixDQUFDLENBQUM7UUFFekMsaUJBQVksR0FBRyxhQUFhLENBQUM7WUFDbEMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNuRCxJQUFJLENBQUMsV0FBVyxDQUFDLFVBQVU7U0FDNUIsQ0FBQyxDQUFDLElBQUksQ0FDTCxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQ1gsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDcEIsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDbkIsQ0FBQyxDQUFDLEVBQ0gsR0FBRyxDQUFDLENBQUMsRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLFdBQVcsSUFBSSxTQUFTLENBQUMsQ0FDOUQsQ0FBQztJQUlGLENBQUM7SUFDRCxrQkFBa0I7UUFDaEIsTUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDO1FBQ2hFLE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQztRQUU5RCxJQUFJLENBQUMsY0FBYyxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLG1CQUFtQixZQUFZLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNsRyxJQUFJLENBQUMsY0FBYyxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLFVBQVUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEdBQUcsV0FBVyxJQUFJLENBQUMsQ0FBQztJQUMzRyxDQUFDOytHQWhDVSw0QkFBNEI7bUdBQTVCLDRCQUE0QixrV0NmekMsMlhBVUEsKy9CREdZLFNBQVM7OzRGQUVSLDRCQUE0QjtrQkFQeEMsU0FBUzsrQkFDRSwyQkFBMkIsY0FHekIsSUFBSSxXQUNQLENBQUMsU0FBUyxDQUFDO3dEQUlwQixJQUFJO3NCQURILEtBQUs7Z0JBSUUsVUFBVTtzQkFEakIsU0FBUzt1QkFBQyxvQkFBb0I7Z0JBSXZCLGNBQWM7c0JBRHJCLFNBQVM7dUJBQUMsdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXN5bmNQaXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEFmdGVyVmlld0NoZWNrZWQsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIFZpZXdDaGlsZCwgaW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGNvbWJpbmVMYXRlc3QsIG1hcCwgc3RhcnRXaXRoIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IFRhU2hhcmVkTWVudVNlcnZpY2UgfSBmcm9tICdAdGEvc2VydmljZXMnO1xuaW1wb3J0IHsgVGFCYXNlQ29tcG9uZW50IH0gZnJvbSAnQHRhL3V0aWxzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGEtbGF5b3V0LXdpdGgtYm90dG9tLW5hdicsXG4gIHRlbXBsYXRlVXJsOiAnLi9sYXlvdXQtd2l0aC1ib3R0b20tbmF2LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vbGF5b3V0LXdpdGgtYm90dG9tLW5hdi5jb21wb25lbnQuc2NzcyddLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbQXN5bmNQaXBlXSxcbn0pXG5leHBvcnQgY2xhc3MgTGF5b3V0V2l0aEJvdHRvbU5hdkNvbXBvbmVudCBleHRlbmRzIFRhQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0NoZWNrZWQge1xuICBASW5wdXQoKVxuICB0eXBlITogc3RyaW5nO1xuXG4gIEBWaWV3Q2hpbGQoJ2JvdHRvbU5hdkNvbnRhaW5lcicpXG4gIHByaXZhdGUgX2JvdHRvbU5hdiE6IEVsZW1lbnRSZWY8SFRNTERpdkVsZW1lbnQ+O1xuXG4gIEBWaWV3Q2hpbGQoJ2JvdHRvbUxheW91dENvbnRhaW5lcicpXG4gIHByaXZhdGUgX2xheW91dENvbnRlbnQhOiBFbGVtZW50UmVmPEhUTUxEaXZFbGVtZW50PjtcblxuICBwdWJsaWMgc2hhcmVkTWVudSA9IGluamVjdChUYVNoYXJlZE1lbnVTZXJ2aWNlKTtcblxuICBwdWJsaWMgaXNNaW5pbWl6ZWQkID0gY29tYmluZUxhdGVzdChbXG4gICAgdGhpcy5zaGFyZWRNZW51LmlzTWluaW1pemVkJC5waXBlKHN0YXJ0V2l0aChmYWxzZSkpLFxuICAgIHRoaXMuYnJlYWtwb2ludHMuaXNEZXNrdG9wJCxcbiAgXSkucGlwZShcbiAgICBtYXAoZGF0YSA9PiAoe1xuICAgICAgaXNNaW5pbWl6ZWQ6IGRhdGFbMF0sXG4gICAgICBpc0Rlc2t0b3A6IGRhdGFbMV0sXG4gICAgfSkpLFxuICAgIG1hcCgoeyBpc01pbmltaXplZCwgaXNEZXNrdG9wIH0pID0+IGlzTWluaW1pemVkICYmIGlzRGVza3RvcClcbiAgKTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG4gIG5nQWZ0ZXJWaWV3Q2hlY2tlZCgpOiB2b2lkIHtcbiAgICBjb25zdCBjbGllbnRIZWlnaHQgPSB0aGlzLl9ib3R0b21OYXYubmF0aXZlRWxlbWVudC5jbGllbnRIZWlnaHQ7XG4gICAgY29uc3QgY2xpZW50V2lkdGggPSB0aGlzLl9ib3R0b21OYXYubmF0aXZlRWxlbWVudC5jbGllbnRXaWR0aDtcblxuICAgIHRoaXMuX2xheW91dENvbnRlbnQubmF0aXZlRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3N0eWxlJywgYHBhZGRpbmctYm90dG9tOiAke2NsaWVudEhlaWdodCArIDEwfXB4YCk7XG4gICAgdGhpcy5fbGF5b3V0Q29udGVudC5uYXRpdmVFbGVtZW50LnNldEF0dHJpYnV0ZSgnc3R5bGUnLCBgd2lkdGg6ICR7d2luZG93LnNjcmVlbi53aWR0aCAtIGNsaWVudFdpZHRofXB4YCk7XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJsYXlvdXQtY29udGFpbmVyXCIgW2NsYXNzLmlzLW1lbnUtbWluaW1pemVkXT1cInRoaXMuaXNNaW5pbWl6ZWQkIHwgYXN5bmNcIj5cbiAgPGRpdiBjbGFzcz1cImxheW91dC1jb250ZW50LWNvbnRhaW5lclwiICNib3R0b21MYXlvdXRDb250YWluZXI+XG4gICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lclwiPlxuICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cImJvdHRvbS1uYXYtY29udGFpbmVyXCIgI2JvdHRvbU5hdkNvbnRhaW5lcj5cbiAgICA8bmctY29udGVudCBzZWxlY3Q9XCJ0YS1sYXlvdXQtbmF2XCI+PC9uZy1jb250ZW50PlxuICA8L2Rpdj5cbjwvZGl2PlxuIl19