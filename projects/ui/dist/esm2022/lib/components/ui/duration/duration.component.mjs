import { NgIf } from '@angular/common';
import { Component, Input } from '@angular/core';
import { TranslateModule } from '@ngx-translate/core';
import { intervalToDuration } from 'date-fns';
import { PluralTranslatePipe } from '@ta/utils';
import { TaTranslationUI } from '../translation.service';
import * as i0 from "@angular/core";
import * as i1 from "@ngx-translate/core";
export class DurationComponent {
    constructor() {
        this.startDate = Date.now();
        this.endDate = Date.now();
        this.interval = null;
        TaTranslationUI.getInstance();
    }
    ngOnInit() {
        if (this.startDate && this.endDate) {
            try {
                this.interval = intervalToDuration({
                    start: new Date(this.startDate),
                    end: new Date(this.endDate),
                });
            }
            catch (error) {
                console.error('Invalid date format:', error);
            }
        }
        else {
            console.error('startDate or endDate is missing');
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: DurationComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.14", type: DurationComponent, isStandalone: true, selector: "ta-duration", inputs: { startDate: "startDate", endDate: "endDate" }, ngImport: i0, template: "@if (this.interval) {\r\n  @if (\r\n    !this.interval.years &&\r\n    !this.interval.months &&\r\n    !this.interval.days &&\r\n    !this.interval?.hours\r\n  ) {\r\n    {{ \"ui.duration.less-than-one\" | translate }}\r\n  }\r\n\r\n  @if (this.interval.years) {\r\n    {{\r\n      \"ui.duration.years\"\r\n        | pluralTranslate : this.interval.years\r\n        | translate : { years: this.interval.years }\r\n    }}\r\n  }\r\n  @if (this.interval.months) {\r\n    {{\r\n      \"ui.duration.months\"\r\n        | pluralTranslate : this.interval.months\r\n        | translate : { months: this.interval.months }\r\n    }}\r\n  }\r\n  @if (this.interval.days) {\r\n    {{\r\n      \"ui.duration.days\"\r\n        | pluralTranslate : this.interval.days\r\n        | translate : { days: this.interval.days }\r\n    }}\r\n  }\r\n  @if (this.interval.hours) {\r\n    {{\r\n      \"ui.duration.hours\"\r\n        | pluralTranslate : this.interval.hours\r\n        | translate : { hours: this.interval.hours }\r\n    }}\r\n  }\r\n}\r\n", styles: [""], dependencies: [{ kind: "ngmodule", type: TranslateModule }, { kind: "pipe", type: i1.TranslatePipe, name: "translate" }, { kind: "pipe", type: PluralTranslatePipe, name: "pluralTranslate" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: DurationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-duration', standalone: true, imports: [NgIf, TranslateModule, PluralTranslatePipe], template: "@if (this.interval) {\r\n  @if (\r\n    !this.interval.years &&\r\n    !this.interval.months &&\r\n    !this.interval.days &&\r\n    !this.interval?.hours\r\n  ) {\r\n    {{ \"ui.duration.less-than-one\" | translate }}\r\n  }\r\n\r\n  @if (this.interval.years) {\r\n    {{\r\n      \"ui.duration.years\"\r\n        | pluralTranslate : this.interval.years\r\n        | translate : { years: this.interval.years }\r\n    }}\r\n  }\r\n  @if (this.interval.months) {\r\n    {{\r\n      \"ui.duration.months\"\r\n        | pluralTranslate : this.interval.months\r\n        | translate : { months: this.interval.months }\r\n    }}\r\n  }\r\n  @if (this.interval.days) {\r\n    {{\r\n      \"ui.duration.days\"\r\n        | pluralTranslate : this.interval.days\r\n        | translate : { days: this.interval.days }\r\n    }}\r\n  }\r\n  @if (this.interval.hours) {\r\n    {{\r\n      \"ui.duration.hours\"\r\n        | pluralTranslate : this.interval.hours\r\n        | translate : { hours: this.interval.hours }\r\n    }}\r\n  }\r\n}\r\n" }]
        }], ctorParameters: () => [], propDecorators: { startDate: [{
                type: Input
            }], endDate: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHVyYXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL3VpL2R1cmF0aW9uL2R1cmF0aW9uLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy91aS9kdXJhdGlvbi9kdXJhdGlvbi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdkMsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFFekQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RELE9BQU8sRUFBWSxrQkFBa0IsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUV4RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFaEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHdCQUF3QixDQUFDOzs7QUFTekQsTUFBTSxPQUFPLGlCQUFpQjtJQVM1QjtRQVBBLGNBQVMsR0FBb0IsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBR3hDLFlBQU8sR0FBb0IsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBRS9CLGFBQVEsR0FBb0IsSUFBSSxDQUFDO1FBR3RDLGVBQWUsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0lBRUQsUUFBUTtRQUNOLElBQUksSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDbkMsSUFBSSxDQUFDO2dCQUNILElBQUksQ0FBQyxRQUFRLEdBQUcsa0JBQWtCLENBQUM7b0JBQ2pDLEtBQUssRUFBRSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO29CQUMvQixHQUFHLEVBQUUsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztpQkFDNUIsQ0FBQyxDQUFDO1lBQ0wsQ0FBQztZQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7Z0JBQ2YsT0FBTyxDQUFDLEtBQUssQ0FBQyxzQkFBc0IsRUFBRSxLQUFLLENBQUMsQ0FBQztZQUMvQyxDQUFDO1FBQ0gsQ0FBQzthQUFNLENBQUM7WUFDTixPQUFPLENBQUMsS0FBSyxDQUFDLGlDQUFpQyxDQUFDLENBQUM7UUFDbkQsQ0FBQztJQUNILENBQUM7K0dBMUJVLGlCQUFpQjttR0FBakIsaUJBQWlCLCtIQ2pCOUIsd2dDQXVDQSx5RER4QmtCLGVBQWUsdUZBQUUsbUJBQW1COzs0RkFFekMsaUJBQWlCO2tCQVA3QixTQUFTOytCQUNFLGFBQWEsY0FHWCxJQUFJLFdBQ1AsQ0FBQyxJQUFJLEVBQUUsZUFBZSxFQUFFLG1CQUFtQixDQUFDO3dEQUlyRCxTQUFTO3NCQURSLEtBQUs7Z0JBSU4sT0FBTztzQkFETixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdJZiB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgVHJhbnNsYXRlTW9kdWxlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5pbXBvcnQgeyBEdXJhdGlvbiwgaW50ZXJ2YWxUb0R1cmF0aW9uIH0gZnJvbSAnZGF0ZS1mbnMnO1xuXG5pbXBvcnQgeyBQbHVyYWxUcmFuc2xhdGVQaXBlIH0gZnJvbSAnQHRhL3V0aWxzJztcblxuaW1wb3J0IHsgVGFUcmFuc2xhdGlvblVJIH0gZnJvbSAnLi4vdHJhbnNsYXRpb24uc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhLWR1cmF0aW9uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2R1cmF0aW9uLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZHVyYXRpb24uY29tcG9uZW50LnNjc3MnXSxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW05nSWYsIFRyYW5zbGF0ZU1vZHVsZSwgUGx1cmFsVHJhbnNsYXRlUGlwZV0sXG59KVxuZXhwb3J0IGNsYXNzIER1cmF0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KClcbiAgc3RhcnREYXRlOiBudW1iZXIgfCBzdHJpbmcgPSBEYXRlLm5vdygpO1xuXG4gIEBJbnB1dCgpXG4gIGVuZERhdGU6IG51bWJlciB8IHN0cmluZyA9IERhdGUubm93KCk7XG5cbiAgcHVibGljIGludGVydmFsOiBEdXJhdGlvbiB8IG51bGwgPSBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIFRhVHJhbnNsYXRpb25VSS5nZXRJbnN0YW5jZSgpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgaWYgKHRoaXMuc3RhcnREYXRlICYmIHRoaXMuZW5kRGF0ZSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgdGhpcy5pbnRlcnZhbCA9IGludGVydmFsVG9EdXJhdGlvbih7XG4gICAgICAgICAgc3RhcnQ6IG5ldyBEYXRlKHRoaXMuc3RhcnREYXRlKSxcbiAgICAgICAgICBlbmQ6IG5ldyBEYXRlKHRoaXMuZW5kRGF0ZSksXG4gICAgICAgIH0pO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignSW52YWxpZCBkYXRlIGZvcm1hdDonLCBlcnJvcik7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ3N0YXJ0RGF0ZSBvciBlbmREYXRlIGlzIG1pc3NpbmcnKTtcbiAgICB9XG4gIH1cbn1cbiIsIkBpZiAodGhpcy5pbnRlcnZhbCkge1xyXG4gIEBpZiAoXHJcbiAgICAhdGhpcy5pbnRlcnZhbC55ZWFycyAmJlxyXG4gICAgIXRoaXMuaW50ZXJ2YWwubW9udGhzICYmXHJcbiAgICAhdGhpcy5pbnRlcnZhbC5kYXlzICYmXHJcbiAgICAhdGhpcy5pbnRlcnZhbD8uaG91cnNcclxuICApIHtcclxuICAgIHt7IFwidWkuZHVyYXRpb24ubGVzcy10aGFuLW9uZVwiIHwgdHJhbnNsYXRlIH19XHJcbiAgfVxyXG5cclxuICBAaWYgKHRoaXMuaW50ZXJ2YWwueWVhcnMpIHtcclxuICAgIHt7XHJcbiAgICAgIFwidWkuZHVyYXRpb24ueWVhcnNcIlxyXG4gICAgICAgIHwgcGx1cmFsVHJhbnNsYXRlIDogdGhpcy5pbnRlcnZhbC55ZWFyc1xyXG4gICAgICAgIHwgdHJhbnNsYXRlIDogeyB5ZWFyczogdGhpcy5pbnRlcnZhbC55ZWFycyB9XHJcbiAgICB9fVxyXG4gIH1cclxuICBAaWYgKHRoaXMuaW50ZXJ2YWwubW9udGhzKSB7XHJcbiAgICB7e1xyXG4gICAgICBcInVpLmR1cmF0aW9uLm1vbnRoc1wiXHJcbiAgICAgICAgfCBwbHVyYWxUcmFuc2xhdGUgOiB0aGlzLmludGVydmFsLm1vbnRoc1xyXG4gICAgICAgIHwgdHJhbnNsYXRlIDogeyBtb250aHM6IHRoaXMuaW50ZXJ2YWwubW9udGhzIH1cclxuICAgIH19XHJcbiAgfVxyXG4gIEBpZiAodGhpcy5pbnRlcnZhbC5kYXlzKSB7XHJcbiAgICB7e1xyXG4gICAgICBcInVpLmR1cmF0aW9uLmRheXNcIlxyXG4gICAgICAgIHwgcGx1cmFsVHJhbnNsYXRlIDogdGhpcy5pbnRlcnZhbC5kYXlzXHJcbiAgICAgICAgfCB0cmFuc2xhdGUgOiB7IGRheXM6IHRoaXMuaW50ZXJ2YWwuZGF5cyB9XHJcbiAgICB9fVxyXG4gIH1cclxuICBAaWYgKHRoaXMuaW50ZXJ2YWwuaG91cnMpIHtcclxuICAgIHt7XHJcbiAgICAgIFwidWkuZHVyYXRpb24uaG91cnNcIlxyXG4gICAgICAgIHwgcGx1cmFsVHJhbnNsYXRlIDogdGhpcy5pbnRlcnZhbC5ob3Vyc1xyXG4gICAgICAgIHwgdHJhbnNsYXRlIDogeyBob3VyczogdGhpcy5pbnRlcnZhbC5ob3VycyB9XHJcbiAgICB9fVxyXG4gIH1cclxufVxyXG4iXX0=