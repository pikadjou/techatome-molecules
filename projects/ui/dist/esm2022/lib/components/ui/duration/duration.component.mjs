import { NgIf } from '@angular/common';
import { Component, Input } from '@angular/core';
import { TranslateModule } from '@ngx-translate/core';
import { PluralTranslatePipe } from '@ta/utils';
import { intervalToDuration } from 'date-fns';
import { CamTranslationUI } from '../translation.service';
import * as i0 from "@angular/core";
import * as i1 from "@ngx-translate/core";
export class DurationComponent {
    constructor() {
        this.startDate = Date.now();
        this.endDate = Date.now();
        this.interval = null;
        CamTranslationUI.getInstance();
    }
    ngOnInit() {
        if (this.startDate && this.endDate) {
            try {
                this.interval = intervalToDuration({
                    start: new Date(this.startDate),
                    end: new Date(this.endDate),
                });
            }
            catch (error) {
                console.error('Invalid date format:', error);
            }
        }
        else {
            console.error('startDate or endDate is missing');
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: DurationComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: DurationComponent, isStandalone: true, selector: "ta-duration", inputs: { startDate: "startDate", endDate: "endDate" }, ngImport: i0, template: "@if (this.interval) {\r\n  @if (\r\n    !this.interval.years &&\r\n    !this.interval.months &&\r\n    !this.interval.days &&\r\n    !this.interval?.hours\r\n  ) {\r\n    {{ \"ui.duration.less-than-one\" | translate }}\r\n  }\r\n\r\n  @if (this.interval.years) {\r\n    {{\r\n      \"ui.duration.years\"\r\n        | pluralTranslate : this.interval.years\r\n        | translate : { years: this.interval.years }\r\n    }}\r\n  }\r\n  @if (this.interval.months) {\r\n    {{\r\n      \"ui.duration.months\"\r\n        | pluralTranslate : this.interval.months\r\n        | translate : { months: this.interval.months }\r\n    }}\r\n  }\r\n  @if (this.interval.days) {\r\n    {{\r\n      \"ui.duration.days\"\r\n        | pluralTranslate : this.interval.days\r\n        | translate : { days: this.interval.days }\r\n    }}\r\n  }\r\n  @if (this.interval.hours) {\r\n    {{\r\n      \"ui.duration.hours\"\r\n        | pluralTranslate : this.interval.hours\r\n        | translate : { hours: this.interval.hours }\r\n    }}\r\n  }\r\n}\r\n", styles: [""], dependencies: [{ kind: "ngmodule", type: TranslateModule }, { kind: "pipe", type: i1.TranslatePipe, name: "translate" }, { kind: "pipe", type: PluralTranslatePipe, name: "pluralTranslate" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: DurationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-duration', standalone: true, imports: [NgIf, TranslateModule, PluralTranslatePipe], template: "@if (this.interval) {\r\n  @if (\r\n    !this.interval.years &&\r\n    !this.interval.months &&\r\n    !this.interval.days &&\r\n    !this.interval?.hours\r\n  ) {\r\n    {{ \"ui.duration.less-than-one\" | translate }}\r\n  }\r\n\r\n  @if (this.interval.years) {\r\n    {{\r\n      \"ui.duration.years\"\r\n        | pluralTranslate : this.interval.years\r\n        | translate : { years: this.interval.years }\r\n    }}\r\n  }\r\n  @if (this.interval.months) {\r\n    {{\r\n      \"ui.duration.months\"\r\n        | pluralTranslate : this.interval.months\r\n        | translate : { months: this.interval.months }\r\n    }}\r\n  }\r\n  @if (this.interval.days) {\r\n    {{\r\n      \"ui.duration.days\"\r\n        | pluralTranslate : this.interval.days\r\n        | translate : { days: this.interval.days }\r\n    }}\r\n  }\r\n  @if (this.interval.hours) {\r\n    {{\r\n      \"ui.duration.hours\"\r\n        | pluralTranslate : this.interval.hours\r\n        | translate : { hours: this.interval.hours }\r\n    }}\r\n  }\r\n}\r\n" }]
        }], ctorParameters: () => [], propDecorators: { startDate: [{
                type: Input
            }], endDate: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHVyYXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL3VpL2R1cmF0aW9uL2R1cmF0aW9uLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy91aS9kdXJhdGlvbi9kdXJhdGlvbi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdkMsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUVoRCxPQUFPLEVBQVksa0JBQWtCLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFFeEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7OztBQVMxRCxNQUFNLE9BQU8saUJBQWlCO0lBUzVCO1FBUEEsY0FBUyxHQUFvQixJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7UUFHeEMsWUFBTyxHQUFvQixJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7UUFFL0IsYUFBUSxHQUFvQixJQUFJLENBQUM7UUFHdEMsZ0JBQWdCLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDakMsQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLElBQUksQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ25DLElBQUksQ0FBQztnQkFDSCxJQUFJLENBQUMsUUFBUSxHQUFHLGtCQUFrQixDQUFDO29CQUNqQyxLQUFLLEVBQUUsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztvQkFDL0IsR0FBRyxFQUFFLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7aUJBQzVCLENBQUMsQ0FBQztZQUNMLENBQUM7WUFBQyxPQUFPLEtBQUssRUFBRSxDQUFDO2dCQUNmLE9BQU8sQ0FBQyxLQUFLLENBQUMsc0JBQXNCLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDL0MsQ0FBQztRQUNILENBQUM7YUFBTSxDQUFDO1lBQ04sT0FBTyxDQUFDLEtBQUssQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO1FBQ25ELENBQUM7SUFDSCxDQUFDOytHQTFCVSxpQkFBaUI7bUdBQWpCLGlCQUFpQiwrSENoQjlCLHdnQ0F1Q0EseUREekJrQixlQUFlLHVGQUFFLG1CQUFtQjs7NEZBRXpDLGlCQUFpQjtrQkFQN0IsU0FBUzsrQkFDQSxhQUFhLGNBR1QsSUFBSSxXQUNQLENBQUMsSUFBSSxFQUFFLGVBQWUsRUFBRSxtQkFBbUIsQ0FBQzt3REFJckQsU0FBUztzQkFEUixLQUFLO2dCQUlOLE9BQU87c0JBRE4sS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nSWYgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUcmFuc2xhdGVNb2R1bGUgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcbmltcG9ydCB7IFBsdXJhbFRyYW5zbGF0ZVBpcGUgfSBmcm9tICdAdGEvdXRpbHMnO1xuXG5pbXBvcnQgeyBEdXJhdGlvbiwgaW50ZXJ2YWxUb0R1cmF0aW9uIH0gZnJvbSAnZGF0ZS1mbnMnO1xuXG5pbXBvcnQgeyBDYW1UcmFuc2xhdGlvblVJIH0gZnJvbSAnLi4vdHJhbnNsYXRpb24uc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuc2VsZWN0b3I6ICd0YS1kdXJhdGlvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9kdXJhdGlvbi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2R1cmF0aW9uLmNvbXBvbmVudC5zY3NzJ10sXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtOZ0lmLCBUcmFuc2xhdGVNb2R1bGUsIFBsdXJhbFRyYW5zbGF0ZVBpcGVdLFxufSlcbmV4cG9ydCBjbGFzcyBEdXJhdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpXG4gIHN0YXJ0RGF0ZTogbnVtYmVyIHwgc3RyaW5nID0gRGF0ZS5ub3coKTtcblxuICBASW5wdXQoKVxuICBlbmREYXRlOiBudW1iZXIgfCBzdHJpbmcgPSBEYXRlLm5vdygpO1xuXG4gIHB1YmxpYyBpbnRlcnZhbDogRHVyYXRpb24gfCBudWxsID0gbnVsbDtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBDYW1UcmFuc2xhdGlvblVJLmdldEluc3RhbmNlKCk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAodGhpcy5zdGFydERhdGUgJiYgdGhpcy5lbmREYXRlKSB7XG4gICAgICB0cnkge1xuICAgICAgICB0aGlzLmludGVydmFsID0gaW50ZXJ2YWxUb0R1cmF0aW9uKHtcbiAgICAgICAgICBzdGFydDogbmV3IERhdGUodGhpcy5zdGFydERhdGUpLFxuICAgICAgICAgIGVuZDogbmV3IERhdGUodGhpcy5lbmREYXRlKSxcbiAgICAgICAgfSk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdJbnZhbGlkIGRhdGUgZm9ybWF0OicsIGVycm9yKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcignc3RhcnREYXRlIG9yIGVuZERhdGUgaXMgbWlzc2luZycpO1xuICAgIH1cbiAgfVxufVxuIiwiQGlmICh0aGlzLmludGVydmFsKSB7XHJcbiAgQGlmIChcclxuICAgICF0aGlzLmludGVydmFsLnllYXJzICYmXHJcbiAgICAhdGhpcy5pbnRlcnZhbC5tb250aHMgJiZcclxuICAgICF0aGlzLmludGVydmFsLmRheXMgJiZcclxuICAgICF0aGlzLmludGVydmFsPy5ob3Vyc1xyXG4gICkge1xyXG4gICAge3sgXCJ1aS5kdXJhdGlvbi5sZXNzLXRoYW4tb25lXCIgfCB0cmFuc2xhdGUgfX1cclxuICB9XHJcblxyXG4gIEBpZiAodGhpcy5pbnRlcnZhbC55ZWFycykge1xyXG4gICAge3tcclxuICAgICAgXCJ1aS5kdXJhdGlvbi55ZWFyc1wiXHJcbiAgICAgICAgfCBwbHVyYWxUcmFuc2xhdGUgOiB0aGlzLmludGVydmFsLnllYXJzXHJcbiAgICAgICAgfCB0cmFuc2xhdGUgOiB7IHllYXJzOiB0aGlzLmludGVydmFsLnllYXJzIH1cclxuICAgIH19XHJcbiAgfVxyXG4gIEBpZiAodGhpcy5pbnRlcnZhbC5tb250aHMpIHtcclxuICAgIHt7XHJcbiAgICAgIFwidWkuZHVyYXRpb24ubW9udGhzXCJcclxuICAgICAgICB8IHBsdXJhbFRyYW5zbGF0ZSA6IHRoaXMuaW50ZXJ2YWwubW9udGhzXHJcbiAgICAgICAgfCB0cmFuc2xhdGUgOiB7IG1vbnRoczogdGhpcy5pbnRlcnZhbC5tb250aHMgfVxyXG4gICAgfX1cclxuICB9XHJcbiAgQGlmICh0aGlzLmludGVydmFsLmRheXMpIHtcclxuICAgIHt7XHJcbiAgICAgIFwidWkuZHVyYXRpb24uZGF5c1wiXHJcbiAgICAgICAgfCBwbHVyYWxUcmFuc2xhdGUgOiB0aGlzLmludGVydmFsLmRheXNcclxuICAgICAgICB8IHRyYW5zbGF0ZSA6IHsgZGF5czogdGhpcy5pbnRlcnZhbC5kYXlzIH1cclxuICAgIH19XHJcbiAgfVxyXG4gIEBpZiAodGhpcy5pbnRlcnZhbC5ob3Vycykge1xyXG4gICAge3tcclxuICAgICAgXCJ1aS5kdXJhdGlvbi5ob3Vyc1wiXHJcbiAgICAgICAgfCBwbHVyYWxUcmFuc2xhdGUgOiB0aGlzLmludGVydmFsLmhvdXJzXHJcbiAgICAgICAgfCB0cmFuc2xhdGUgOiB7IGhvdXJzOiB0aGlzLmludGVydmFsLmhvdXJzIH1cclxuICAgIH19XHJcbiAgfVxyXG59XHJcbiJdfQ==