import { NgIf, NgFor } from '@angular/common';
import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class DepartmentIconListComponent {
    constructor() {
        this.withName = false;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: DepartmentIconListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: DepartmentIconListComponent, isStandalone: true, selector: "ta-department-icon-list", inputs: { departments: "departments", withName: "withName" }, ngImport: i0, template: "@if (this.withName) {\n  <div class=\"departements-container text-truncate\">\n    @for (department of this.departments; track department; let last = $last) {\n      <div class=\"department\">\n        <div class=\"img-container align-center\">\n          @if (department.iconPath) {\n            <img [src]=\"department.iconPath\" [alt]=\"department.name\" />\n          }\n        </div>\n        <p>{{ department.name }}{{ !last ? ',' : '' }}</p>\n      </div>\n    }\n  </div>\n} @else {\n  <div class=\"departements-container\">\n    @for (department of this.departments; track department) {\n      <div class=\"department\">\n        <div class=\"img-container align-center\">\n          @if (department.iconPath) {\n            <img [src]=\"department.iconPath\" [alt]=\"department.name\" />\n          }\n        </div>\n      </div>\n    }\n  </div>\n}\n", styles: ["@charset \"UTF-8\";.departements-container{display:flex;align-items:center}.department{display:flex;align-items:center;margin-right:var(--ta-space-space)}.img-container{margin-right:var(--ta-space-xs);width:20px}.img-container img{width:100%}.department:last-child span{display:none}\n"] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: DepartmentIconListComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-department-icon-list', standalone: true, imports: [NgIf, NgFor], template: "@if (this.withName) {\n  <div class=\"departements-container text-truncate\">\n    @for (department of this.departments; track department; let last = $last) {\n      <div class=\"department\">\n        <div class=\"img-container align-center\">\n          @if (department.iconPath) {\n            <img [src]=\"department.iconPath\" [alt]=\"department.name\" />\n          }\n        </div>\n        <p>{{ department.name }}{{ !last ? ',' : '' }}</p>\n      </div>\n    }\n  </div>\n} @else {\n  <div class=\"departements-container\">\n    @for (department of this.departments; track department) {\n      <div class=\"department\">\n        <div class=\"img-container align-center\">\n          @if (department.iconPath) {\n            <img [src]=\"department.iconPath\" [alt]=\"department.name\" />\n          }\n        </div>\n      </div>\n    }\n  </div>\n}\n", styles: ["@charset \"UTF-8\";.departements-container{display:flex;align-items:center}.department{display:flex;align-items:center;margin-right:var(--ta-space-space)}.img-container{margin-right:var(--ta-space-xs);width:20px}.img-container img{width:100%}.department:last-child span{display:none}\n"] }]
        }], propDecorators: { departments: [{
                type: Input
            }], withName: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVwYXJ0bWVudC1pY29uLWxpc3QuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL3VpL2RlcGFydG1lbnRzL2RlcGFydG1lbnQtaWNvbi1saXN0L2RlcGFydG1lbnQtaWNvbi1saXN0LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy91aS9kZXBhcnRtZW50cy9kZXBhcnRtZW50LWljb24tbGlzdC9kZXBhcnRtZW50LWljb24tbGlzdC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQVdqRCxNQUFNLE9BQU8sMkJBQTJCO0lBUHhDO1FBZVMsYUFBUSxHQUFZLEtBQUssQ0FBQztLQUNsQzsrR0FUWSwyQkFBMkI7bUdBQTNCLDJCQUEyQixpSkNaeEMsaTJCQTBCQTs7NEZEZGEsMkJBQTJCO2tCQVB2QyxTQUFTOytCQUNBLHlCQUF5QixjQUdyQixJQUFJLFdBQ1AsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDOzhCQU9mLFdBQVc7c0JBRGpCLEtBQUs7Z0JBSUMsUUFBUTtzQkFEZCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdJZiwgTmdGb3IgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBEZXBhcnRtZW50IH0gZnJvbSAnLi4vaW50ZXJmYWNlJztcblxuQENvbXBvbmVudCh7XG5zZWxlY3RvcjogJ3RhLWRlcGFydG1lbnQtaWNvbi1saXN0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2RlcGFydG1lbnQtaWNvbi1saXN0LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZGVwYXJ0bWVudC1pY29uLWxpc3QuY29tcG9uZW50LnNjc3MnXSxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW05nSWYsIE5nRm9yXSxcbn0pXG5leHBvcnQgY2xhc3MgRGVwYXJ0bWVudEljb25MaXN0Q29tcG9uZW50IHtcbiAgLyoqXG4gICAqIExpc3Qgb2YgZGVwYXJ0bWVudHMgb2JqZWN0IHRvIGRpc3BsYXlcbiAgICovXG4gIEBJbnB1dCgpXG4gIHB1YmxpYyBkZXBhcnRtZW50cyE6IERlcGFydG1lbnRbXTtcblxuICBASW5wdXQoKVxuICBwdWJsaWMgd2l0aE5hbWU6IGJvb2xlYW4gPSBmYWxzZTtcbn1cbiIsIkBpZiAodGhpcy53aXRoTmFtZSkge1xuICA8ZGl2IGNsYXNzPVwiZGVwYXJ0ZW1lbnRzLWNvbnRhaW5lciB0ZXh0LXRydW5jYXRlXCI+XG4gICAgQGZvciAoZGVwYXJ0bWVudCBvZiB0aGlzLmRlcGFydG1lbnRzOyB0cmFjayBkZXBhcnRtZW50OyBsZXQgbGFzdCA9ICRsYXN0KSB7XG4gICAgICA8ZGl2IGNsYXNzPVwiZGVwYXJ0bWVudFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiaW1nLWNvbnRhaW5lciBhbGlnbi1jZW50ZXJcIj5cbiAgICAgICAgICBAaWYgKGRlcGFydG1lbnQuaWNvblBhdGgpIHtcbiAgICAgICAgICAgIDxpbWcgW3NyY109XCJkZXBhcnRtZW50Lmljb25QYXRoXCIgW2FsdF09XCJkZXBhcnRtZW50Lm5hbWVcIiAvPlxuICAgICAgICAgIH1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxwPnt7IGRlcGFydG1lbnQubmFtZSB9fXt7ICFsYXN0ID8gJywnIDogJycgfX08L3A+XG4gICAgICA8L2Rpdj5cbiAgICB9XG4gIDwvZGl2PlxufSBAZWxzZSB7XG4gIDxkaXYgY2xhc3M9XCJkZXBhcnRlbWVudHMtY29udGFpbmVyXCI+XG4gICAgQGZvciAoZGVwYXJ0bWVudCBvZiB0aGlzLmRlcGFydG1lbnRzOyB0cmFjayBkZXBhcnRtZW50KSB7XG4gICAgICA8ZGl2IGNsYXNzPVwiZGVwYXJ0bWVudFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiaW1nLWNvbnRhaW5lciBhbGlnbi1jZW50ZXJcIj5cbiAgICAgICAgICBAaWYgKGRlcGFydG1lbnQuaWNvblBhdGgpIHtcbiAgICAgICAgICAgIDxpbWcgW3NyY109XCJkZXBhcnRtZW50Lmljb25QYXRoXCIgW2FsdF09XCJkZXBhcnRtZW50Lm5hbWVcIiAvPlxuICAgICAgICAgIH1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICB9XG4gIDwvZGl2PlxufVxuIl19