import { NgClass } from '@angular/common';
import { Component, Input } from '@angular/core';
import { TranslateModule } from '@ngx-translate/core';
import { FontIconComponent } from '@ta/icons';
import { TaTranslationUI } from '../../translation.service';
import * as i0 from "@angular/core";
import * as i1 from "@ngx-translate/core";
export class DualButtonComponent {
    constructor() {
        this.isFull = false;
        this.type = 'primary';
        TaTranslationUI.getInstance();
    }
    getClass() {
        const css = {};
        css[this.type] = true;
        return css;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: DualButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.13", type: DualButtonComponent, isStandalone: true, selector: "ta-dual-button", inputs: { isFull: "isFull", first: "first", second: "second", type: "type" }, ngImport: i0, template: "<div class=\"dual-button row\" [class.full]=\"this.isFull\">\n  <div class=\"col first\" (click)=\"this.first.callback()\" [ngClass]=\"this.getClass()\">\n    <div class=\"flex-start\">\n      <ta-font-icon class=\"icon\" [name]=\"this.first.icon\"></ta-font-icon>\n      <span class=\"label\">{{ this.first.label | translate }}</span>\n    </div>\n  </div>\n  <div class=\"col second\" (click)=\"this.second.callback()\" [ngClass]=\"this.getClass()\">\n    <div class=\"flex-start\">\n      <span class=\"label\">{{ this.second.label | translate }}</span>\n      <ta-font-icon class=\"icon\" [name]=\"this.second.icon\"></ta-font-icon>\n    </div>\n  </div>\n</div>\n", styles: [".dual-button{display:flex;flex-direction:row;border:1px solid var(--ta-brand-50);border-radius:60px}.dual-button .first,.dual-button .second{flex:1;width:100%;font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-default-weight);padding:var(--ta-space-sm) 0}.dual-button .first.primary,.dual-button .second.primary{color:var(--ta-text-invert-primary)}.dual-button .first.secondary,.dual-button .second.secondary{color:var(--ta-text-primary);border:1px solid var(--ta-border-secondary)}.dual-button .first>div,.dual-button .second>div{justify-content:center;margin:auto}.dual-button .first .icon,.dual-button .second .icon{color:var(--ta-surface-brand-primary);margin:auto var(--ta-space-sm)}.dual-button .first{border-right:1px solid var(--ta-brand-700)}.dual-button .second{border-left:1px solid var(--ta-brand-700)}.dual-button.full{background-color:var(--ta-brand-700);border:1px solid var(--ta-text-invert-primary);color:var(--ta-text-invert-primary)}.dual-button.full .first .icon,.dual-button.full .second .icon{color:var(--ta-text-invert-primary)}.dual-button.full .first{border-right:1px solid var(--ta-text-invert-primary)}.dual-button.full .second{border-left:1px solid var(--ta-text-invert-primary)}\n"], dependencies: [{ kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "ngmodule", type: TranslateModule }, { kind: "pipe", type: i1.TranslatePipe, name: "translate" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: DualButtonComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-dual-button', standalone: true, imports: [NgClass, FontIconComponent, TranslateModule], template: "<div class=\"dual-button row\" [class.full]=\"this.isFull\">\n  <div class=\"col first\" (click)=\"this.first.callback()\" [ngClass]=\"this.getClass()\">\n    <div class=\"flex-start\">\n      <ta-font-icon class=\"icon\" [name]=\"this.first.icon\"></ta-font-icon>\n      <span class=\"label\">{{ this.first.label | translate }}</span>\n    </div>\n  </div>\n  <div class=\"col second\" (click)=\"this.second.callback()\" [ngClass]=\"this.getClass()\">\n    <div class=\"flex-start\">\n      <span class=\"label\">{{ this.second.label | translate }}</span>\n      <ta-font-icon class=\"icon\" [name]=\"this.second.icon\"></ta-font-icon>\n    </div>\n  </div>\n</div>\n", styles: [".dual-button{display:flex;flex-direction:row;border:1px solid var(--ta-brand-50);border-radius:60px}.dual-button .first,.dual-button .second{flex:1;width:100%;font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-default-weight);padding:var(--ta-space-sm) 0}.dual-button .first.primary,.dual-button .second.primary{color:var(--ta-text-invert-primary)}.dual-button .first.secondary,.dual-button .second.secondary{color:var(--ta-text-primary);border:1px solid var(--ta-border-secondary)}.dual-button .first>div,.dual-button .second>div{justify-content:center;margin:auto}.dual-button .first .icon,.dual-button .second .icon{color:var(--ta-surface-brand-primary);margin:auto var(--ta-space-sm)}.dual-button .first{border-right:1px solid var(--ta-brand-700)}.dual-button .second{border-left:1px solid var(--ta-brand-700)}.dual-button.full{background-color:var(--ta-brand-700);border:1px solid var(--ta-text-invert-primary);color:var(--ta-text-invert-primary)}.dual-button.full .first .icon,.dual-button.full .second .icon{color:var(--ta-text-invert-primary)}.dual-button.full .first{border-right:1px solid var(--ta-text-invert-primary)}.dual-button.full .second{border-left:1px solid var(--ta-text-invert-primary)}\n"] }]
        }], ctorParameters: () => [], propDecorators: { isFull: [{
                type: Input
            }], first: [{
                type: Input
            }], second: [{
                type: Input
            }], type: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHVhbC1idXR0b24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL3VpL2J1dHRvbi9kdWFsL2R1YWwtYnV0dG9uLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy91aS9idXR0b24vZHVhbC9kdWFsLWJ1dHRvbi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDMUMsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXRELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUU5QyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7OztBQWU1RCxNQUFNLE9BQU8sbUJBQW1CO0lBYTlCO1FBWEEsV0FBTSxHQUFHLEtBQUssQ0FBQztRQVNmLFNBQUksR0FBNEIsU0FBUyxDQUFDO1FBR3hDLGVBQWUsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0lBRU0sUUFBUTtRQUNiLE1BQU0sR0FBRyxHQUFpQyxFQUFFLENBQUM7UUFFN0MsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUM7UUFFdEIsT0FBTyxHQUFHLENBQUM7SUFDYixDQUFDOytHQXZCVSxtQkFBbUI7bUdBQW5CLG1CQUFtQix3SkN0QmhDLDhwQkFjQSxnMENETVksT0FBTyxvRkFBRSxpQkFBaUIsa0ZBQUUsZUFBZTs7NEZBRTFDLG1CQUFtQjtrQkFQL0IsU0FBUzsrQkFDRSxnQkFBZ0IsY0FHZCxJQUFJLFdBQ1AsQ0FBQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsZUFBZSxDQUFDO3dEQUl0RCxNQUFNO3NCQURMLEtBQUs7Z0JBSU4sS0FBSztzQkFESixLQUFLO2dCQUlOLE1BQU07c0JBREwsS0FBSztnQkFJTixJQUFJO3NCQURILEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ0NsYXNzIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgVHJhbnNsYXRlTW9kdWxlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5cbmltcG9ydCB7IEZvbnRJY29uQ29tcG9uZW50IH0gZnJvbSAnQHRhL2ljb25zJztcblxuaW1wb3J0IHsgVGFUcmFuc2xhdGlvblVJIH0gZnJvbSAnLi4vLi4vdHJhbnNsYXRpb24uc2VydmljZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRHVhbEJ1dHRvbklucHV0IHtcbiAgaWNvbjogc3RyaW5nO1xuICBsYWJlbDogc3RyaW5nO1xuICBjYWxsYmFjazogKCkgPT4gdm9pZDtcbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGEtZHVhbC1idXR0b24nLFxuICB0ZW1wbGF0ZVVybDogJy4vZHVhbC1idXR0b24uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9kdWFsLWJ1dHRvbi5jb21wb25lbnQuc2NzcyddLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbTmdDbGFzcywgRm9udEljb25Db21wb25lbnQsIFRyYW5zbGF0ZU1vZHVsZV0sXG59KVxuZXhwb3J0IGNsYXNzIER1YWxCdXR0b25Db21wb25lbnQge1xuICBASW5wdXQoKVxuICBpc0Z1bGwgPSBmYWxzZTtcblxuICBASW5wdXQoKVxuICBmaXJzdCE6IER1YWxCdXR0b25JbnB1dDtcblxuICBASW5wdXQoKVxuICBzZWNvbmQhOiBEdWFsQnV0dG9uSW5wdXQ7XG5cbiAgQElucHV0KClcbiAgdHlwZTogJ3ByaW1hcnknIHwgJ3NlY29uZGFyeScgPSAncHJpbWFyeSc7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgVGFUcmFuc2xhdGlvblVJLmdldEluc3RhbmNlKCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0Q2xhc3MoKSB7XG4gICAgY29uc3QgY3NzOiB7IFtpbmRleDogc3RyaW5nXTogYm9vbGVhbiB9ID0ge307XG5cbiAgICBjc3NbdGhpcy50eXBlXSA9IHRydWU7XG5cbiAgICByZXR1cm4gY3NzO1xuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwiZHVhbC1idXR0b24gcm93XCIgW2NsYXNzLmZ1bGxdPVwidGhpcy5pc0Z1bGxcIj5cbiAgPGRpdiBjbGFzcz1cImNvbCBmaXJzdFwiIChjbGljayk9XCJ0aGlzLmZpcnN0LmNhbGxiYWNrKClcIiBbbmdDbGFzc109XCJ0aGlzLmdldENsYXNzKClcIj5cbiAgICA8ZGl2IGNsYXNzPVwiZmxleC1zdGFydFwiPlxuICAgICAgPHRhLWZvbnQtaWNvbiBjbGFzcz1cImljb25cIiBbbmFtZV09XCJ0aGlzLmZpcnN0Lmljb25cIj48L3RhLWZvbnQtaWNvbj5cbiAgICAgIDxzcGFuIGNsYXNzPVwibGFiZWxcIj57eyB0aGlzLmZpcnN0LmxhYmVsIHwgdHJhbnNsYXRlIH19PC9zcGFuPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cImNvbCBzZWNvbmRcIiAoY2xpY2spPVwidGhpcy5zZWNvbmQuY2FsbGJhY2soKVwiIFtuZ0NsYXNzXT1cInRoaXMuZ2V0Q2xhc3MoKVwiPlxuICAgIDxkaXYgY2xhc3M9XCJmbGV4LXN0YXJ0XCI+XG4gICAgICA8c3BhbiBjbGFzcz1cImxhYmVsXCI+e3sgdGhpcy5zZWNvbmQubGFiZWwgfCB0cmFuc2xhdGUgfX08L3NwYW4+XG4gICAgICA8dGEtZm9udC1pY29uIGNsYXNzPVwiaWNvblwiIFtuYW1lXT1cInRoaXMuc2Vjb25kLmljb25cIj48L3RhLWZvbnQtaWNvbj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==