import { NgIf } from '@angular/common';
import { Component, Input } from '@angular/core';
import { TranslateModule } from '@ngx-translate/core';
import { FontIconComponent, LocalIconComponent } from '@ta/icons';
import { TaTranslationUI } from '../translation.service';
import * as i0 from "@angular/core";
import * as i1 from "@ngx-translate/core";
export class ContactInformationComponent {
    constructor() {
        TaTranslationUI.getInstance();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: ContactInformationComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.14", type: ContactInformationComponent, isStandalone: true, selector: "ta-contact-information", inputs: { value: "value", icon: "icon", localIcon: "localIcon" }, ngImport: i0, template: "@if (this.value) {\n  <div class=\"header\">\n    <div class=\"icon\">\n      @if (this.localIcon) {\n        <ta-local-icon class=\"local-icon\" [type]=\"this.localIcon\"></ta-local-icon>\n      } @else if (this.icon) {\n        <ta-font-icon [name]=\"this.icon\" type=\"sm\"></ta-font-icon>\n      }\n    </div>\n\n    <div class=\"value\">\n      <div class=\"text\">{{ this.value | translate }}</div>\n    </div>\n  </div>\n}\n<div class=\"content\">\n  <ng-content></ng-content>\n</div>\n", styles: [".header{gap:var(--ta-space-md);flex-direction:row;display:flex;align-items:center}.icon{color:var(--ta-surface-brand-primary);margin-right:var(--ta-space-xs)}.local-icon{max-width:20px}.text{font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-bold-weight)}.value{font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-bold-weight);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.content{margin-top:var(--ta-space-md);color:var(--ta-neutral-500)}\n"], dependencies: [{ kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "component", type: LocalIconComponent, selector: "ta-local-icon", inputs: ["type", "size", "rotation"] }, { kind: "ngmodule", type: TranslateModule }, { kind: "pipe", type: i1.TranslatePipe, name: "translate" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: ContactInformationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-contact-information', standalone: true, imports: [NgIf, FontIconComponent, LocalIconComponent, TranslateModule], template: "@if (this.value) {\n  <div class=\"header\">\n    <div class=\"icon\">\n      @if (this.localIcon) {\n        <ta-local-icon class=\"local-icon\" [type]=\"this.localIcon\"></ta-local-icon>\n      } @else if (this.icon) {\n        <ta-font-icon [name]=\"this.icon\" type=\"sm\"></ta-font-icon>\n      }\n    </div>\n\n    <div class=\"value\">\n      <div class=\"text\">{{ this.value | translate }}</div>\n    </div>\n  </div>\n}\n<div class=\"content\">\n  <ng-content></ng-content>\n</div>\n", styles: [".header{gap:var(--ta-space-md);flex-direction:row;display:flex;align-items:center}.icon{color:var(--ta-surface-brand-primary);margin-right:var(--ta-space-xs)}.local-icon{max-width:20px}.text{font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-bold-weight)}.value{font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-bold-weight);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.content{margin-top:var(--ta-space-md);color:var(--ta-neutral-500)}\n"] }]
        }], ctorParameters: () => [], propDecorators: { value: [{
                type: Input
            }], icon: [{
                type: Input
            }], localIcon: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGFjdC1pbmZvcm1hdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbXBvbmVudHMvdWkvY29udGFjdC1pbmZvcm1hdGlvbi9jb250YWN0LWluZm9ybWF0aW9uLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy91aS9jb250YWN0LWluZm9ybWF0aW9uL2NvbnRhY3QtaW5mb3JtYXRpb24uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWpELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUV0RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFHbEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHdCQUF3QixDQUFDOzs7QUFTekQsTUFBTSxPQUFPLDJCQUEyQjtJQW1CdEM7UUFDRSxlQUFlLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDaEMsQ0FBQzsrR0FyQlUsMkJBQTJCO21HQUEzQiwyQkFBMkIsb0pDakJ4QywrZUFrQkEseXBCREhrQixpQkFBaUIsbUZBQUUsa0JBQWtCLCtGQUFFLGVBQWU7OzRGQUUzRCwyQkFBMkI7a0JBUHZDLFNBQVM7K0JBQ0Usd0JBQXdCLGNBR3RCLElBQUksV0FDUCxDQUFDLElBQUksRUFBRSxpQkFBaUIsRUFBRSxrQkFBa0IsRUFBRSxlQUFlLENBQUM7d0RBT3ZFLEtBQUs7c0JBREosS0FBSztnQkFPTixJQUFJO3NCQURILEtBQUs7Z0JBT04sU0FBUztzQkFEUixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdJZiB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFRyYW5zbGF0ZU1vZHVsZSB9IGZyb20gJ0BuZ3gtdHJhbnNsYXRlL2NvcmUnO1xuXG5pbXBvcnQgeyBGb250SWNvbkNvbXBvbmVudCwgTG9jYWxJY29uQ29tcG9uZW50IH0gZnJvbSAnQHRhL2ljb25zJztcbmltcG9ydCB7IFRhSWNvblR5cGUgfSBmcm9tICdAdGEvaWNvbnMnO1xuXG5pbXBvcnQgeyBUYVRyYW5zbGF0aW9uVUkgfSBmcm9tICcuLi90cmFuc2xhdGlvbi5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGEtY29udGFjdC1pbmZvcm1hdGlvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9jb250YWN0LWluZm9ybWF0aW9uLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vY29udGFjdC1pbmZvcm1hdGlvbi5jb21wb25lbnQuc2NzcyddLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbTmdJZiwgRm9udEljb25Db21wb25lbnQsIExvY2FsSWNvbkNvbXBvbmVudCwgVHJhbnNsYXRlTW9kdWxlXSxcbn0pXG5leHBvcnQgY2xhc3MgQ29udGFjdEluZm9ybWF0aW9uQ29tcG9uZW50IHtcbiAgLyoqXG4gICAqIFRleHQgdG8gZGlzcGxheVxuICAgKi9cbiAgQElucHV0KClcbiAgdmFsdWUhOiBzdHJpbmcgfCBudWxsO1xuXG4gIC8qKlxuICAgKiBNYXRlcmlhbCBpY29uIHRvIGRpc3BsYXlcbiAgICovXG4gIEBJbnB1dCgpXG4gIGljb24hOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIExvY2FsIGljb24gdG8gZGlzcGxheVxuICAgKi9cbiAgQElucHV0KClcbiAgbG9jYWxJY29uITogVGFJY29uVHlwZTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBUYVRyYW5zbGF0aW9uVUkuZ2V0SW5zdGFuY2UoKTtcbiAgfVxufVxuIiwiQGlmICh0aGlzLnZhbHVlKSB7XG4gIDxkaXYgY2xhc3M9XCJoZWFkZXJcIj5cbiAgICA8ZGl2IGNsYXNzPVwiaWNvblwiPlxuICAgICAgQGlmICh0aGlzLmxvY2FsSWNvbikge1xuICAgICAgICA8dGEtbG9jYWwtaWNvbiBjbGFzcz1cImxvY2FsLWljb25cIiBbdHlwZV09XCJ0aGlzLmxvY2FsSWNvblwiPjwvdGEtbG9jYWwtaWNvbj5cbiAgICAgIH0gQGVsc2UgaWYgKHRoaXMuaWNvbikge1xuICAgICAgICA8dGEtZm9udC1pY29uIFtuYW1lXT1cInRoaXMuaWNvblwiIHR5cGU9XCJzbVwiPjwvdGEtZm9udC1pY29uPlxuICAgICAgfVxuICAgIDwvZGl2PlxuXG4gICAgPGRpdiBjbGFzcz1cInZhbHVlXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwidGV4dFwiPnt7IHRoaXMudmFsdWUgfCB0cmFuc2xhdGUgfX08L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG59XG48ZGl2IGNsYXNzPVwiY29udGVudFwiPlxuICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG48L2Rpdj5cbiJdfQ==