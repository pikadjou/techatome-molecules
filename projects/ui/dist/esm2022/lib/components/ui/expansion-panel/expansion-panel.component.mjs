import { NgFor } from '@angular/common';
import { Component, Input } from '@angular/core';
import { MatExpansionModule } from '@angular/material/expansion';
import { TaBaseComponent } from '@ta/utils';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/expansion";
export class TaExpansionPanelComponent extends TaBaseComponent {
    constructor() {
        super();
        this.templates = [];
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: TaExpansionPanelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.14", type: TaExpansionPanelComponent, isStandalone: true, selector: "ta-expansion-panel", inputs: { templates: "templates" }, usesInheritance: true, ngImport: i0, template: "<mat-accordion>\n  @for (template of this.templates; track template) {\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          <ng-template\n            [ngTemplateOutlet]=\"template.title\"\n            [ngTemplateOutletContext]=\"template.context ?? {}\"\n          ></ng-template>\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <ng-template\n        [ngTemplateOutlet]=\"template.content\"\n        [ngTemplateOutletContext]=\"template.context ?? {}\"\n      ></ng-template>\n    </mat-expansion-panel>\n  }\n</mat-accordion>\n", styles: [":host .mat-content,::ng-deep .mat-content{overflow:visible!important}:host .mat-expansion-panel,::ng-deep .mat-expansion-panel{box-shadow:none;border-radius:0!important;border-bottom:1px solid var(--ta-neutral-400);padding:var(--ta-space-sm) 0;background-color:var(--ta-surface-primary)}:host .mat-expansion-panel.mat-expanded,::ng-deep .mat-expansion-panel.mat-expanded{box-shadow:0 4px 8px #0000001a;border-radius:var(--ta-space-xs)!important}:host .mat-expansion-panel-header,:host .mat-expansion-panel-body,::ng-deep .mat-expansion-panel-header,::ng-deep .mat-expansion-panel-body{padding:var(--ta-space-xs)!important}\n"], dependencies: [{ kind: "ngmodule", type: MatExpansionModule }, { kind: "directive", type: i1.MatAccordion, selector: "mat-accordion", inputs: ["hideToggle", "displayMode", "togglePosition"], exportAs: ["matAccordion"] }, { kind: "component", type: i1.MatExpansionPanel, selector: "mat-expansion-panel", inputs: ["hideToggle", "togglePosition"], outputs: ["afterExpand", "afterCollapse"], exportAs: ["matExpansionPanel"] }, { kind: "component", type: i1.MatExpansionPanelHeader, selector: "mat-expansion-panel-header", inputs: ["expandedHeight", "collapsedHeight", "tabIndex"] }, { kind: "directive", type: i1.MatExpansionPanelTitle, selector: "mat-panel-title" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: TaExpansionPanelComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-expansion-panel', standalone: true, imports: [NgFor, MatExpansionModule], template: "<mat-accordion>\n  @for (template of this.templates; track template) {\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          <ng-template\n            [ngTemplateOutlet]=\"template.title\"\n            [ngTemplateOutletContext]=\"template.context ?? {}\"\n          ></ng-template>\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <ng-template\n        [ngTemplateOutlet]=\"template.content\"\n        [ngTemplateOutletContext]=\"template.context ?? {}\"\n      ></ng-template>\n    </mat-expansion-panel>\n  }\n</mat-accordion>\n", styles: [":host .mat-content,::ng-deep .mat-content{overflow:visible!important}:host .mat-expansion-panel,::ng-deep .mat-expansion-panel{box-shadow:none;border-radius:0!important;border-bottom:1px solid var(--ta-neutral-400);padding:var(--ta-space-sm) 0;background-color:var(--ta-surface-primary)}:host .mat-expansion-panel.mat-expanded,::ng-deep .mat-expansion-panel.mat-expanded{box-shadow:0 4px 8px #0000001a;border-radius:var(--ta-space-xs)!important}:host .mat-expansion-panel-header,:host .mat-expansion-panel-body,::ng-deep .mat-expansion-panel-header,::ng-deep .mat-expansion-panel-body{padding:var(--ta-space-xs)!important}\n"] }]
        }], ctorParameters: () => [], propDecorators: { templates: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwYW5zaW9uLXBhbmVsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy91aS9leHBhbnNpb24tcGFuZWwvZXhwYW5zaW9uLXBhbmVsLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy91aS9leHBhbnNpb24tcGFuZWwvZXhwYW5zaW9uLXBhbmVsLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN4QyxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBZSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUVqRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sV0FBVyxDQUFDOzs7QUFjNUMsTUFBTSxPQUFPLHlCQUEwQixTQUFRLGVBQWU7SUFJNUQ7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQUhWLGNBQVMsR0FBMEIsRUFBRSxDQUFDO0lBSXRDLENBQUM7K0dBTlUseUJBQXlCO21HQUF6Qix5QkFBeUIseUlDbEJ0QywwbEJBa0JBLHlxQkRGbUIsa0JBQWtCOzs0RkFFeEIseUJBQXlCO2tCQVByQyxTQUFTOytCQUNFLG9CQUFvQixjQUdsQixJQUFJLFdBQ1AsQ0FBQyxLQUFLLEVBQUUsa0JBQWtCLENBQUM7d0RBSXBDLFNBQVM7c0JBRFIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nRm9yIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNYXRFeHBhbnNpb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9leHBhbnNpb24nO1xuXG5pbXBvcnQgeyBUYUJhc2VDb21wb25lbnQgfSBmcm9tICdAdGEvdXRpbHMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEV4cGFuc2lvblBhbmVsSW5wdXQge1xuICB0aXRsZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgY29udGVudDogVGVtcGxhdGVSZWY8YW55PjtcbiAgY29udGV4dD86IG9iamVjdDtcbn1cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhLWV4cGFuc2lvbi1wYW5lbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9leHBhbnNpb24tcGFuZWwuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9leHBhbnNpb24tcGFuZWwuY29tcG9uZW50LnNjc3MnXSxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW05nRm9yLCBNYXRFeHBhbnNpb25Nb2R1bGVdLFxufSlcbmV4cG9ydCBjbGFzcyBUYUV4cGFuc2lvblBhbmVsQ29tcG9uZW50IGV4dGVuZHMgVGFCYXNlQ29tcG9uZW50IHtcbiAgQElucHV0KClcbiAgdGVtcGxhdGVzOiBFeHBhbnNpb25QYW5lbElucHV0W10gPSBbXTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG59XG4iLCI8bWF0LWFjY29yZGlvbj5cbiAgQGZvciAodGVtcGxhdGUgb2YgdGhpcy50ZW1wbGF0ZXM7IHRyYWNrIHRlbXBsYXRlKSB7XG4gICAgPG1hdC1leHBhbnNpb24tcGFuZWw+XG4gICAgICA8bWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXI+XG4gICAgICAgIDxtYXQtcGFuZWwtdGl0bGU+XG4gICAgICAgICAgPG5nLXRlbXBsYXRlXG4gICAgICAgICAgICBbbmdUZW1wbGF0ZU91dGxldF09XCJ0ZW1wbGF0ZS50aXRsZVwiXG4gICAgICAgICAgICBbbmdUZW1wbGF0ZU91dGxldENvbnRleHRdPVwidGVtcGxhdGUuY29udGV4dCA/PyB7fVwiXG4gICAgICAgICAgPjwvbmctdGVtcGxhdGU+XG4gICAgICAgIDwvbWF0LXBhbmVsLXRpdGxlPlxuICAgICAgPC9tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcj5cbiAgICAgIDxuZy10ZW1wbGF0ZVxuICAgICAgICBbbmdUZW1wbGF0ZU91dGxldF09XCJ0ZW1wbGF0ZS5jb250ZW50XCJcbiAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cInRlbXBsYXRlLmNvbnRleHQgPz8ge31cIlxuICAgICAgPjwvbmctdGVtcGxhdGU+XG4gICAgPC9tYXQtZXhwYW5zaW9uLXBhbmVsPlxuICB9XG48L21hdC1hY2NvcmRpb24+XG4iXX0=