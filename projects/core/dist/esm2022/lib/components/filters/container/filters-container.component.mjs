import { NgIf } from '@angular/common';
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { Subject } from 'rxjs';
import { FontIconComponent } from '@ta/icons';
import { LayoutContentComponent, LayoutPanelComponent, LayoutWithPanelComponent, LinkComponent } from '@ta/ui';
import { TaBaseComponent } from '@ta/utils';
import { FiltersFormComponent } from '../form/filters-form.component';
import { FiltersTagComponent } from '../tag/filters-tag.component';
import * as i0 from "@angular/core";
export class FiltersContainerComponent extends TaBaseComponent {
    constructor() {
        super();
        this.form = [];
        this.activeFilter = [];
        this.filtersSelected = new EventEmitter();
        this.removedFilter = new EventEmitter();
        this.isFilterOpen = false;
        this.askValidation$ = new Subject();
    }
    toggleFilter() {
        if (this.isFilterOpen) {
            this.askValidation$.next(null);
        }
        this.isFilterOpen = !this.isFilterOpen;
    }
    apply(data) {
        this.filtersSelected.emit(data);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: FiltersContainerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.14", type: FiltersContainerComponent, isStandalone: true, selector: "ta-filters-container", inputs: { form: "form", activeFilter: "activeFilter" }, outputs: { filtersSelected: "filtersSelected", removedFilter: "removedFilter" }, usesInheritance: true, ngImport: i0, template: "<div class=\"space-between p-space-sm\">\n  @if (this.activeFilter) {\n    <div>\n      <ta-filters-tag\n        [activeFilter]=\"this.activeFilter\"\n        (removedFilter)=\"this.removedFilter.emit($event)\"\n      ></ta-filters-tag>\n    </div>\n  }\n  <div>\n    <ta-link (action)=\"this.toggleFilter()\">\n      <ta-font-icon [name]=\"this.isFilterOpen ? 'check-line' : 'filter-tool'\"></ta-font-icon>\n    </ta-link>\n  </div>\n</div>\n<div>\n  <ta-layout-with-panel [open]=\"this.isFilterOpen\">\n    <ta-layout-panel>\n      <div class=\"p-space-sm\">\n        <ta-filters-form\n          [form]=\"this.form\"\n          [askValidation$]=\"this.askValidation$\"\n          (filtersSelected)=\"this.apply($event)\"\n        ></ta-filters-form>\n      </div>\n    </ta-layout-panel>\n    <ta-layout-content>\n      <ng-content></ng-content>\n    </ta-layout-content>\n  </ta-layout-with-panel>\n</div>\n", styles: [""], dependencies: [{ kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "component", type: LayoutWithPanelComponent, selector: "ta-layout-with-panel", inputs: ["open"] }, { kind: "component", type: LayoutPanelComponent, selector: "ta-layout-panel" }, { kind: "component", type: FiltersFormComponent, selector: "ta-filters-form", inputs: ["form", "askValidation$"], outputs: ["filtersSelected"] }, { kind: "component", type: LayoutContentComponent, selector: "ta-layout-content", inputs: ["autoHeight"] }, { kind: "component", type: FiltersTagComponent, selector: "ta-filters-tag", inputs: ["activeFilter"], outputs: ["removedFilter"] }, { kind: "component", type: LinkComponent, selector: "ta-link", inputs: ["state", "underline", "bold", "size", "icon"], outputs: ["action"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: FiltersContainerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-filters-container', standalone: true, imports: [
                        NgIf,
                        FontIconComponent,
                        LayoutWithPanelComponent,
                        LayoutPanelComponent,
                        FiltersFormComponent,
                        LayoutContentComponent,
                        FiltersTagComponent,
                        LinkComponent,
                    ], template: "<div class=\"space-between p-space-sm\">\n  @if (this.activeFilter) {\n    <div>\n      <ta-filters-tag\n        [activeFilter]=\"this.activeFilter\"\n        (removedFilter)=\"this.removedFilter.emit($event)\"\n      ></ta-filters-tag>\n    </div>\n  }\n  <div>\n    <ta-link (action)=\"this.toggleFilter()\">\n      <ta-font-icon [name]=\"this.isFilterOpen ? 'check-line' : 'filter-tool'\"></ta-font-icon>\n    </ta-link>\n  </div>\n</div>\n<div>\n  <ta-layout-with-panel [open]=\"this.isFilterOpen\">\n    <ta-layout-panel>\n      <div class=\"p-space-sm\">\n        <ta-filters-form\n          [form]=\"this.form\"\n          [askValidation$]=\"this.askValidation$\"\n          (filtersSelected)=\"this.apply($event)\"\n        ></ta-filters-form>\n      </div>\n    </ta-layout-panel>\n    <ta-layout-content>\n      <ng-content></ng-content>\n    </ta-layout-content>\n  </ta-layout-with-panel>\n</div>\n" }]
        }], ctorParameters: () => [], propDecorators: { form: [{
                type: Input
            }], activeFilter: [{
                type: Input
            }], filtersSelected: [{
                type: Output
            }], removedFilter: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVycy1jb250YWluZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL2ZpbHRlcnMvY29udGFpbmVyL2ZpbHRlcnMtY29udGFpbmVyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9maWx0ZXJzL2NvbnRhaW5lci9maWx0ZXJzLWNvbnRhaW5lci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdkMsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV2RSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRy9CLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUM5QyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsb0JBQW9CLEVBQUUsd0JBQXdCLEVBQUUsYUFBYSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQy9HLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFNUMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDdEUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sOEJBQThCLENBQUM7O0FBbUJuRSxNQUFNLE9BQU8seUJBQTBCLFNBQVEsZUFBZTtJQWdCNUQ7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQWZWLFNBQUksR0FBcUIsRUFBRSxDQUFDO1FBRzVCLGlCQUFZLEdBQXNCLEVBQUUsQ0FBQztRQUdyQyxvQkFBZSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFHMUMsa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBbUIsQ0FBQztRQUU3QyxpQkFBWSxHQUFHLEtBQUssQ0FBQztRQUNyQixtQkFBYyxHQUFHLElBQUksT0FBTyxFQUFRLENBQUM7SUFJNUMsQ0FBQztJQUVNLFlBQVk7UUFDakIsSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7WUFDdEIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDakMsQ0FBQztRQUNELElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQ3pDLENBQUM7SUFFTSxLQUFLLENBQUMsSUFBUztRQUNwQixJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQyxDQUFDOytHQTdCVSx5QkFBeUI7bUdBQXpCLHlCQUF5QixnUEM5QnRDLGc1QkErQkEsMEREVkksaUJBQWlCLG1GQUNqQix3QkFBd0IsbUZBQ3hCLG9CQUFvQiw0REFDcEIsb0JBQW9CLDhIQUNwQixzQkFBc0Isc0ZBQ3RCLG1CQUFtQixpSEFDbkIsYUFBYTs7NEZBR0oseUJBQXlCO2tCQWhCckMsU0FBUzsrQkFDRSxzQkFBc0IsY0FHcEIsSUFBSSxXQUNQO3dCQUNQLElBQUk7d0JBQ0osaUJBQWlCO3dCQUNqQix3QkFBd0I7d0JBQ3hCLG9CQUFvQjt3QkFDcEIsb0JBQW9CO3dCQUNwQixzQkFBc0I7d0JBQ3RCLG1CQUFtQjt3QkFDbkIsYUFBYTtxQkFDZDt3REFJRCxJQUFJO3NCQURILEtBQUs7Z0JBSU4sWUFBWTtzQkFEWCxLQUFLO2dCQUlOLGVBQWU7c0JBRGQsTUFBTTtnQkFJUCxhQUFhO3NCQURaLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ0lmIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHsgSW5wdXRCYXNlIH0gZnJvbSAnQHRhL2Zvcm0tbW9kZWwnO1xuaW1wb3J0IHsgRm9udEljb25Db21wb25lbnQgfSBmcm9tICdAdGEvaWNvbnMnO1xuaW1wb3J0IHsgTGF5b3V0Q29udGVudENvbXBvbmVudCwgTGF5b3V0UGFuZWxDb21wb25lbnQsIExheW91dFdpdGhQYW5lbENvbXBvbmVudCwgTGlua0NvbXBvbmVudCB9IGZyb20gJ0B0YS91aSc7XG5pbXBvcnQgeyBUYUJhc2VDb21wb25lbnQgfSBmcm9tICdAdGEvdXRpbHMnO1xuXG5pbXBvcnQgeyBGaWx0ZXJzRm9ybUNvbXBvbmVudCB9IGZyb20gJy4uL2Zvcm0vZmlsdGVycy1mb3JtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGaWx0ZXJzVGFnQ29tcG9uZW50IH0gZnJvbSAnLi4vdGFnL2ZpbHRlcnMtdGFnLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBY3RpdmVGaWx0ZXJUYWcgfSBmcm9tICcuLi90eXBlcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhLWZpbHRlcnMtY29udGFpbmVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2ZpbHRlcnMtY29udGFpbmVyLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZmlsdGVycy1jb250YWluZXIuY29tcG9uZW50LnNjc3MnXSxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW1xuICAgIE5nSWYsXG4gICAgRm9udEljb25Db21wb25lbnQsXG4gICAgTGF5b3V0V2l0aFBhbmVsQ29tcG9uZW50LFxuICAgIExheW91dFBhbmVsQ29tcG9uZW50LFxuICAgIEZpbHRlcnNGb3JtQ29tcG9uZW50LFxuICAgIExheW91dENvbnRlbnRDb21wb25lbnQsXG4gICAgRmlsdGVyc1RhZ0NvbXBvbmVudCxcbiAgICBMaW5rQ29tcG9uZW50LFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBGaWx0ZXJzQ29udGFpbmVyQ29tcG9uZW50IGV4dGVuZHMgVGFCYXNlQ29tcG9uZW50IHtcbiAgQElucHV0KClcbiAgZm9ybTogSW5wdXRCYXNlPGFueT5bXSA9IFtdO1xuXG4gIEBJbnB1dCgpXG4gIGFjdGl2ZUZpbHRlcjogQWN0aXZlRmlsdGVyVGFnW10gPSBbXTtcblxuICBAT3V0cHV0KClcbiAgZmlsdGVyc1NlbGVjdGVkID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgQE91dHB1dCgpXG4gIHJlbW92ZWRGaWx0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyPEFjdGl2ZUZpbHRlclRhZz4oKTtcblxuICBwdWJsaWMgaXNGaWx0ZXJPcGVuID0gZmFsc2U7XG4gIHB1YmxpYyBhc2tWYWxpZGF0aW9uJCA9IG5ldyBTdWJqZWN0PG51bGw+KCk7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIHB1YmxpYyB0b2dnbGVGaWx0ZXIoKSB7XG4gICAgaWYgKHRoaXMuaXNGaWx0ZXJPcGVuKSB7XG4gICAgICB0aGlzLmFza1ZhbGlkYXRpb24kLm5leHQobnVsbCk7XG4gICAgfVxuICAgIHRoaXMuaXNGaWx0ZXJPcGVuID0gIXRoaXMuaXNGaWx0ZXJPcGVuO1xuICB9XG5cbiAgcHVibGljIGFwcGx5KGRhdGE6IGFueSkge1xuICAgIHRoaXMuZmlsdGVyc1NlbGVjdGVkLmVtaXQoZGF0YSk7XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJzcGFjZS1iZXR3ZWVuIHAtc3BhY2Utc21cIj5cbiAgQGlmICh0aGlzLmFjdGl2ZUZpbHRlcikge1xuICAgIDxkaXY+XG4gICAgICA8dGEtZmlsdGVycy10YWdcbiAgICAgICAgW2FjdGl2ZUZpbHRlcl09XCJ0aGlzLmFjdGl2ZUZpbHRlclwiXG4gICAgICAgIChyZW1vdmVkRmlsdGVyKT1cInRoaXMucmVtb3ZlZEZpbHRlci5lbWl0KCRldmVudClcIlxuICAgICAgPjwvdGEtZmlsdGVycy10YWc+XG4gICAgPC9kaXY+XG4gIH1cbiAgPGRpdj5cbiAgICA8dGEtbGluayAoYWN0aW9uKT1cInRoaXMudG9nZ2xlRmlsdGVyKClcIj5cbiAgICAgIDx0YS1mb250LWljb24gW25hbWVdPVwidGhpcy5pc0ZpbHRlck9wZW4gPyAnY2hlY2stbGluZScgOiAnZmlsdGVyLXRvb2wnXCI+PC90YS1mb250LWljb24+XG4gICAgPC90YS1saW5rPlxuICA8L2Rpdj5cbjwvZGl2PlxuPGRpdj5cbiAgPHRhLWxheW91dC13aXRoLXBhbmVsIFtvcGVuXT1cInRoaXMuaXNGaWx0ZXJPcGVuXCI+XG4gICAgPHRhLWxheW91dC1wYW5lbD5cbiAgICAgIDxkaXYgY2xhc3M9XCJwLXNwYWNlLXNtXCI+XG4gICAgICAgIDx0YS1maWx0ZXJzLWZvcm1cbiAgICAgICAgICBbZm9ybV09XCJ0aGlzLmZvcm1cIlxuICAgICAgICAgIFthc2tWYWxpZGF0aW9uJF09XCJ0aGlzLmFza1ZhbGlkYXRpb24kXCJcbiAgICAgICAgICAoZmlsdGVyc1NlbGVjdGVkKT1cInRoaXMuYXBwbHkoJGV2ZW50KVwiXG4gICAgICAgID48L3RhLWZpbHRlcnMtZm9ybT5cbiAgICAgIDwvZGl2PlxuICAgIDwvdGEtbGF5b3V0LXBhbmVsPlxuICAgIDx0YS1sYXlvdXQtY29udGVudD5cbiAgICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgICA8L3RhLWxheW91dC1jb250ZW50PlxuICA8L3RhLWxheW91dC13aXRoLXBhbmVsPlxuPC9kaXY+XG4iXX0=