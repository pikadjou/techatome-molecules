import { Component } from '@angular/core';
import { Subject } from 'rxjs';
import { FontIconComponent } from '@ta/icons';
import { LayoutContentComponent, LayoutPanelComponent, LayoutWithPanelComponent, LinkComponent } from '@ta/ui';
import { FiltersFormComponent } from './form/filters-form.component';
import * as i0 from "@angular/core";
export class FiltersComponent {
    constructor() {
        this.isFilterOpen = false;
        this.askValidation$ = new Subject();
    }
    changeFilterOpen() {
        if (this.isFilterOpen) {
            this.askValidation$.next(null);
        }
        this.isFilterOpen = !this.isFilterOpen;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: FiltersComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.13", type: FiltersComponent, isStandalone: true, selector: "ta-filters", ngImport: i0, template: "<div class=\"container p-space-xs\">\n  <div class=\"row align-items-center\">\n    <div class=\"col-10 pt-space-0\">list of tag</div>\n    <div class=\"col-2\">\n      <ta-link (action)=\"this.changeFilterOpen()\">\n        <ta-font-icon [name]=\"this.isFilterOpen ? 'check-line' : 'filter-tool'\"></ta-font-icon>\n      </ta-link>\n    </div>\n  </div>\n</div>\n<div class=\"list\">\n  <ta-layout-with-panel [open]=\"this.isFilterOpen\">\n    <ta-layout-panel>\n      <ta-filters-form></ta-filters-form>\n    </ta-layout-panel>\n    <ta-layout-content>\n      <ng-content></ng-content>\n    </ta-layout-content>\n  </ta-layout-with-panel>\n</div>\n", styles: [""], dependencies: [{ kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "component", type: LinkComponent, selector: "ta-link", inputs: ["state", "underline", "bold", "size", "icon"], outputs: ["action"] }, { kind: "component", type: LayoutWithPanelComponent, selector: "ta-layout-with-panel", inputs: ["open"] }, { kind: "component", type: LayoutPanelComponent, selector: "ta-layout-panel" }, { kind: "component", type: FiltersFormComponent, selector: "ta-filters-form", inputs: ["form", "askValidation$"], outputs: ["filtersSelected"] }, { kind: "component", type: LayoutContentComponent, selector: "ta-layout-content", inputs: ["autoHeight"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: FiltersComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-filters', standalone: true, imports: [
                        FontIconComponent,
                        LinkComponent,
                        LayoutWithPanelComponent,
                        LayoutPanelComponent,
                        FiltersFormComponent,
                        LayoutContentComponent,
                    ], template: "<div class=\"container p-space-xs\">\n  <div class=\"row align-items-center\">\n    <div class=\"col-10 pt-space-0\">list of tag</div>\n    <div class=\"col-2\">\n      <ta-link (action)=\"this.changeFilterOpen()\">\n        <ta-font-icon [name]=\"this.isFilterOpen ? 'check-line' : 'filter-tool'\"></ta-font-icon>\n      </ta-link>\n    </div>\n  </div>\n</div>\n<div class=\"list\">\n  <ta-layout-with-panel [open]=\"this.isFilterOpen\">\n    <ta-layout-panel>\n      <ta-filters-form></ta-filters-form>\n    </ta-layout-panel>\n    <ta-layout-content>\n      <ng-content></ng-content>\n    </ta-layout-content>\n  </ta-layout-with-panel>\n</div>\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVycy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbXBvbmVudHMvZmlsdGVycy9maWx0ZXJzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy9maWx0ZXJzL2ZpbHRlcnMuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRS9CLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUM5QyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsb0JBQW9CLEVBQUUsd0JBQXdCLEVBQUUsYUFBYSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBRS9HLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLCtCQUErQixDQUFDOztBQWdCckUsTUFBTSxPQUFPLGdCQUFnQjtJQWQ3QjtRQWVTLGlCQUFZLEdBQUcsS0FBSyxDQUFDO1FBRXJCLG1CQUFjLEdBQUcsSUFBSSxPQUFPLEVBQVEsQ0FBQztLQVE3QztJQU5RLGdCQUFnQjtRQUNyQixJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztZQUN0QixJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNqQyxDQUFDO1FBQ0QsSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDekMsQ0FBQzsrR0FWVSxnQkFBZ0I7bUdBQWhCLGdCQUFnQixzRUN2QjdCLDRvQkFvQkEsMERETEksaUJBQWlCLG1GQUNqQixhQUFhLGlJQUNiLHdCQUF3QixtRkFDeEIsb0JBQW9CLDREQUNwQixvQkFBb0IsOEhBQ3BCLHNCQUFzQjs7NEZBR2IsZ0JBQWdCO2tCQWQ1QixTQUFTOytCQUNFLFlBQVksY0FHVixJQUFJLFdBQ1A7d0JBQ1AsaUJBQWlCO3dCQUNqQixhQUFhO3dCQUNiLHdCQUF3Qjt3QkFDeEIsb0JBQW9CO3dCQUNwQixvQkFBb0I7d0JBQ3BCLHNCQUFzQjtxQkFDdkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBGb250SWNvbkNvbXBvbmVudCB9IGZyb20gJ0B0YS9pY29ucyc7XG5pbXBvcnQgeyBMYXlvdXRDb250ZW50Q29tcG9uZW50LCBMYXlvdXRQYW5lbENvbXBvbmVudCwgTGF5b3V0V2l0aFBhbmVsQ29tcG9uZW50LCBMaW5rQ29tcG9uZW50IH0gZnJvbSAnQHRhL3VpJztcblxuaW1wb3J0IHsgRmlsdGVyc0Zvcm1Db21wb25lbnQgfSBmcm9tICcuL2Zvcm0vZmlsdGVycy1mb3JtLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3RhLWZpbHRlcnMnLFxuICB0ZW1wbGF0ZVVybDogJy4vZmlsdGVycy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2ZpbHRlcnMuY29tcG9uZW50LnNjc3MnXSxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW1xuICAgIEZvbnRJY29uQ29tcG9uZW50LFxuICAgIExpbmtDb21wb25lbnQsXG4gICAgTGF5b3V0V2l0aFBhbmVsQ29tcG9uZW50LFxuICAgIExheW91dFBhbmVsQ29tcG9uZW50LFxuICAgIEZpbHRlcnNGb3JtQ29tcG9uZW50LFxuICAgIExheW91dENvbnRlbnRDb21wb25lbnQsXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIEZpbHRlcnNDb21wb25lbnQge1xuICBwdWJsaWMgaXNGaWx0ZXJPcGVuID0gZmFsc2U7XG5cbiAgcHVibGljIGFza1ZhbGlkYXRpb24kID0gbmV3IFN1YmplY3Q8bnVsbD4oKTtcblxuICBwdWJsaWMgY2hhbmdlRmlsdGVyT3BlbigpIHtcbiAgICBpZiAodGhpcy5pc0ZpbHRlck9wZW4pIHtcbiAgICAgIHRoaXMuYXNrVmFsaWRhdGlvbiQubmV4dChudWxsKTtcbiAgICB9XG4gICAgdGhpcy5pc0ZpbHRlck9wZW4gPSAhdGhpcy5pc0ZpbHRlck9wZW47XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJjb250YWluZXIgcC1zcGFjZS14c1wiPlxuICA8ZGl2IGNsYXNzPVwicm93IGFsaWduLWl0ZW1zLWNlbnRlclwiPlxuICAgIDxkaXYgY2xhc3M9XCJjb2wtMTAgcHQtc3BhY2UtMFwiPmxpc3Qgb2YgdGFnPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImNvbC0yXCI+XG4gICAgICA8dGEtbGluayAoYWN0aW9uKT1cInRoaXMuY2hhbmdlRmlsdGVyT3BlbigpXCI+XG4gICAgICAgIDx0YS1mb250LWljb24gW25hbWVdPVwidGhpcy5pc0ZpbHRlck9wZW4gPyAnY2hlY2stbGluZScgOiAnZmlsdGVyLXRvb2wnXCI+PC90YS1mb250LWljb24+XG4gICAgICA8L3RhLWxpbms+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9kaXY+XG48ZGl2IGNsYXNzPVwibGlzdFwiPlxuICA8dGEtbGF5b3V0LXdpdGgtcGFuZWwgW29wZW5dPVwidGhpcy5pc0ZpbHRlck9wZW5cIj5cbiAgICA8dGEtbGF5b3V0LXBhbmVsPlxuICAgICAgPHRhLWZpbHRlcnMtZm9ybT48L3RhLWZpbHRlcnMtZm9ybT5cbiAgICA8L3RhLWxheW91dC1wYW5lbD5cbiAgICA8dGEtbGF5b3V0LWNvbnRlbnQ+XG4gICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgPC90YS1sYXlvdXQtY29udGVudD5cbiAgPC90YS1sYXlvdXQtd2l0aC1wYW5lbD5cbjwvZGl2PlxuIl19