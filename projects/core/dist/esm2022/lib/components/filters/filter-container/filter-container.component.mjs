import { Component, EventEmitter, Input, Output } from '@angular/core';
import { Subject } from 'rxjs';
import { FormComponent } from '@ta/form-basic';
import { FontIconComponent } from '@ta/icons';
import { TranslatePipe } from '@ta/translation';
import { ButtonComponent, LayoutSideComponent, LayoutSideContentComponent, LayoutSideCtaComponent, LinkComponent, } from '@ta/ui';
import { TaBaseComponent } from '@ta/utils';
import * as i0 from "@angular/core";
export class FilterContainerComponent extends TaBaseComponent {
    constructor() {
        super();
        this.form = [];
        this.filtersSelected = new EventEmitter();
        this.isFilterOpen = false;
        this.askValidation$ = new Subject();
        this.askClear$ = new Subject();
    }
    ngOnInit() {
        if (this.askClear$) {
            this._registerSubscription(this.askClear$.subscribe(_ => this.clear()));
        }
    }
    apply(data) {
        this.filtersSelected.emit(data);
    }
    clear() {
        this.filtersSelected.emit(null);
    }
    validate() {
        this.askValidation$.next(null);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: FilterContainerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.14", type: FilterContainerComponent, isStandalone: true, selector: "ta-filter-container", inputs: { form: "form" }, outputs: { filtersSelected: "filtersSelected" }, usesInheritance: true, ngImport: i0, template: "<ta-layout-side class=\"d-flex full-width\">\n  <ta-layout-side-content>\n    <div class=\"m-space-sm\">\n      <ta-form\n        [inputs]=\"this.form\"\n        [canDisplayButton]=\"false\"\n        [askValidation$]=\"this.askValidation$\"\n        (valid)=\"this.apply($event)\"\n      ></ta-form>\n    </div>\n  </ta-layout-side-content>\n  <ta-layout-side-cta>\n    <div class=\"align-center space-between\">\n      <div class=\"pr-space-md\">\n        <div class=\"align-center g-space-xs link\">\n          <ta-font-icon name=\"close-tool\" type=\"sm\"></ta-font-icon>\n          <ta-link class=\"c-pointer\" (action)=\"this.clear()\">\n            {{ 'core.filter.clear' | translate }}\n          </ta-link>\n        </div>\n      </div>\n      <div>\n        <ta-button (action)=\"this.validate()\">\n          <div class=\"align-center m-space-xs\">\n            <ta-font-icon name=\"check-line\"></ta-font-icon>\n            {{ 'core.filter.validate' | translate }}\n          </div>\n        </ta-button>\n      </div>\n    </div>\n  </ta-layout-side-cta>\n</ta-layout-side>\n", styles: [".link{color:var(--ta-text-secondary)}\n"], dependencies: [{ kind: "component", type: FontIconComponent, selector: "ta-font-icon", inputs: ["name", "type"] }, { kind: "component", type: LinkComponent, selector: "ta-link", inputs: ["state", "underline", "bold", "size", "icon"], outputs: ["action"] }, { kind: "component", type: LayoutSideComponent, selector: "ta-layout-side" }, { kind: "component", type: LayoutSideContentComponent, selector: "ta-layout-side-content" }, { kind: "component", type: FormComponent, selector: "ta-form", inputs: ["inputs", "askValidation$", "askOnDestroy", "loader", "error", "border", "canDisplayButton", "buttonTitle", "onLive"], outputs: ["valid", "isFormValid"] }, { kind: "component", type: LayoutSideCtaComponent, selector: "ta-layout-side-cta", inputs: ["background"] }, { kind: "component", type: ButtonComponent, selector: "ta-button", inputs: ["state", "type", "size", "icon", "options", "stopPropagationActivation"], outputs: ["action"] }, { kind: "pipe", type: TranslatePipe, name: "translate" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.14", ngImport: i0, type: FilterContainerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-filter-container', standalone: true, imports: [
                        FontIconComponent,
                        LinkComponent,
                        LayoutSideComponent,
                        LayoutSideContentComponent,
                        FormComponent,
                        LayoutSideCtaComponent,
                        ButtonComponent,
                        TranslatePipe,
                    ], template: "<ta-layout-side class=\"d-flex full-width\">\n  <ta-layout-side-content>\n    <div class=\"m-space-sm\">\n      <ta-form\n        [inputs]=\"this.form\"\n        [canDisplayButton]=\"false\"\n        [askValidation$]=\"this.askValidation$\"\n        (valid)=\"this.apply($event)\"\n      ></ta-form>\n    </div>\n  </ta-layout-side-content>\n  <ta-layout-side-cta>\n    <div class=\"align-center space-between\">\n      <div class=\"pr-space-md\">\n        <div class=\"align-center g-space-xs link\">\n          <ta-font-icon name=\"close-tool\" type=\"sm\"></ta-font-icon>\n          <ta-link class=\"c-pointer\" (action)=\"this.clear()\">\n            {{ 'core.filter.clear' | translate }}\n          </ta-link>\n        </div>\n      </div>\n      <div>\n        <ta-button (action)=\"this.validate()\">\n          <div class=\"align-center m-space-xs\">\n            <ta-font-icon name=\"check-line\"></ta-font-icon>\n            {{ 'core.filter.validate' | translate }}\n          </div>\n        </ta-button>\n      </div>\n    </div>\n  </ta-layout-side-cta>\n</ta-layout-side>\n", styles: [".link{color:var(--ta-text-secondary)}\n"] }]
        }], ctorParameters: () => [], propDecorators: { form: [{
                type: Input
            }], filtersSelected: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLWNvbnRhaW5lci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbXBvbmVudHMvZmlsdGVycy9maWx0ZXItY29udGFpbmVyL2ZpbHRlci1jb250YWluZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9jb21wb25lbnRzL2ZpbHRlcnMvZmlsdGVyLWNvbnRhaW5lci9maWx0ZXItY29udGFpbmVyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFL0UsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUUvQixPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFL0MsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQzlDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNoRCxPQUFPLEVBQ0wsZUFBZSxFQUNmLG1CQUFtQixFQUNuQiwwQkFBMEIsRUFDMUIsc0JBQXNCLEVBQ3RCLGFBQWEsR0FDZCxNQUFNLFFBQVEsQ0FBQztBQUNoQixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sV0FBVyxDQUFDOztBQWtCNUMsTUFBTSxPQUFPLHdCQUF5QixTQUFRLGVBQWU7SUFZM0Q7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQVhWLFNBQUksR0FBcUIsRUFBRSxDQUFDO1FBRzVCLG9CQUFlLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUVuQyxpQkFBWSxHQUFHLEtBQUssQ0FBQztRQUVyQixtQkFBYyxHQUFHLElBQUksT0FBTyxFQUFRLENBQUM7UUFDckMsY0FBUyxHQUFHLElBQUksT0FBTyxFQUFRLENBQUM7SUFJdkMsQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztZQUNuQixJQUFJLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzFFLENBQUM7SUFDSCxDQUFDO0lBRU0sS0FBSyxDQUFDLElBQVM7UUFDcEIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVNLEtBQUs7UUFDVixJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRU0sUUFBUTtRQUNiLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2pDLENBQUM7K0dBaENVLHdCQUF3QjttR0FBeEIsd0JBQXdCLGlMQ2pDckMsaWtDQWdDQSxpR0RUSSxpQkFBaUIsbUZBQ2pCLGFBQWEsaUlBQ2IsbUJBQW1CLDJEQUNuQiwwQkFBMEIsbUVBQzFCLGFBQWEsdU5BQ2Isc0JBQXNCLHVGQUN0QixlQUFlLHlKQUNmLGFBQWE7OzRGQUdKLHdCQUF3QjtrQkFoQnBDLFNBQVM7K0JBQ0UscUJBQXFCLGNBR25CLElBQUksV0FDUDt3QkFDUCxpQkFBaUI7d0JBQ2pCLGFBQWE7d0JBQ2IsbUJBQW1CO3dCQUNuQiwwQkFBMEI7d0JBQzFCLGFBQWE7d0JBQ2Isc0JBQXNCO3dCQUN0QixlQUFlO3dCQUNmLGFBQWE7cUJBQ2Q7d0RBSUQsSUFBSTtzQkFESCxLQUFLO2dCQUlOLGVBQWU7c0JBRGQsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBGb3JtQ29tcG9uZW50IH0gZnJvbSAnQHRhL2Zvcm0tYmFzaWMnO1xuaW1wb3J0IHsgSW5wdXRCYXNlIH0gZnJvbSAnQHRhL2Zvcm0tbW9kZWwnO1xuaW1wb3J0IHsgRm9udEljb25Db21wb25lbnQgfSBmcm9tICdAdGEvaWNvbnMnO1xuaW1wb3J0IHsgVHJhbnNsYXRlUGlwZSB9IGZyb20gJ0B0YS90cmFuc2xhdGlvbic7XG5pbXBvcnQge1xuICBCdXR0b25Db21wb25lbnQsXG4gIExheW91dFNpZGVDb21wb25lbnQsXG4gIExheW91dFNpZGVDb250ZW50Q29tcG9uZW50LFxuICBMYXlvdXRTaWRlQ3RhQ29tcG9uZW50LFxuICBMaW5rQ29tcG9uZW50LFxufSBmcm9tICdAdGEvdWknO1xuaW1wb3J0IHsgVGFCYXNlQ29tcG9uZW50IH0gZnJvbSAnQHRhL3V0aWxzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndGEtZmlsdGVyLWNvbnRhaW5lcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9maWx0ZXItY29udGFpbmVyLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZmlsdGVyLWNvbnRhaW5lci5jb21wb25lbnQuc2NzcyddLFxuICBzdGFuZGFsb25lOiB0cnVlLFxuICBpbXBvcnRzOiBbXG4gICAgRm9udEljb25Db21wb25lbnQsXG4gICAgTGlua0NvbXBvbmVudCxcbiAgICBMYXlvdXRTaWRlQ29tcG9uZW50LFxuICAgIExheW91dFNpZGVDb250ZW50Q29tcG9uZW50LFxuICAgIEZvcm1Db21wb25lbnQsXG4gICAgTGF5b3V0U2lkZUN0YUNvbXBvbmVudCxcbiAgICBCdXR0b25Db21wb25lbnQsXG4gICAgVHJhbnNsYXRlUGlwZSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgRmlsdGVyQ29udGFpbmVyQ29tcG9uZW50IGV4dGVuZHMgVGFCYXNlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KClcbiAgZm9ybTogSW5wdXRCYXNlPGFueT5bXSA9IFtdO1xuXG4gIEBPdXRwdXQoKVxuICBmaWx0ZXJzU2VsZWN0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBwdWJsaWMgaXNGaWx0ZXJPcGVuID0gZmFsc2U7XG5cbiAgcHVibGljIGFza1ZhbGlkYXRpb24kID0gbmV3IFN1YmplY3Q8bnVsbD4oKTtcbiAgcHVibGljIGFza0NsZWFyJCA9IG5ldyBTdWJqZWN0PG51bGw+KCk7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmFza0NsZWFyJCkge1xuICAgICAgdGhpcy5fcmVnaXN0ZXJTdWJzY3JpcHRpb24odGhpcy5hc2tDbGVhciQuc3Vic2NyaWJlKF8gPT4gdGhpcy5jbGVhcigpKSk7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGFwcGx5KGRhdGE6IGFueSkge1xuICAgIHRoaXMuZmlsdGVyc1NlbGVjdGVkLmVtaXQoZGF0YSk7XG4gIH1cblxuICBwdWJsaWMgY2xlYXIoKSB7XG4gICAgdGhpcy5maWx0ZXJzU2VsZWN0ZWQuZW1pdChudWxsKTtcbiAgfVxuXG4gIHB1YmxpYyB2YWxpZGF0ZSgpIHtcbiAgICB0aGlzLmFza1ZhbGlkYXRpb24kLm5leHQobnVsbCk7XG4gIH1cbn1cbiIsIjx0YS1sYXlvdXQtc2lkZSBjbGFzcz1cImQtZmxleCBmdWxsLXdpZHRoXCI+XG4gIDx0YS1sYXlvdXQtc2lkZS1jb250ZW50PlxuICAgIDxkaXYgY2xhc3M9XCJtLXNwYWNlLXNtXCI+XG4gICAgICA8dGEtZm9ybVxuICAgICAgICBbaW5wdXRzXT1cInRoaXMuZm9ybVwiXG4gICAgICAgIFtjYW5EaXNwbGF5QnV0dG9uXT1cImZhbHNlXCJcbiAgICAgICAgW2Fza1ZhbGlkYXRpb24kXT1cInRoaXMuYXNrVmFsaWRhdGlvbiRcIlxuICAgICAgICAodmFsaWQpPVwidGhpcy5hcHBseSgkZXZlbnQpXCJcbiAgICAgID48L3RhLWZvcm0+XG4gICAgPC9kaXY+XG4gIDwvdGEtbGF5b3V0LXNpZGUtY29udGVudD5cbiAgPHRhLWxheW91dC1zaWRlLWN0YT5cbiAgICA8ZGl2IGNsYXNzPVwiYWxpZ24tY2VudGVyIHNwYWNlLWJldHdlZW5cIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJwci1zcGFjZS1tZFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiYWxpZ24tY2VudGVyIGctc3BhY2UteHMgbGlua1wiPlxuICAgICAgICAgIDx0YS1mb250LWljb24gbmFtZT1cImNsb3NlLXRvb2xcIiB0eXBlPVwic21cIj48L3RhLWZvbnQtaWNvbj5cbiAgICAgICAgICA8dGEtbGluayBjbGFzcz1cImMtcG9pbnRlclwiIChhY3Rpb24pPVwidGhpcy5jbGVhcigpXCI+XG4gICAgICAgICAgICB7eyAnY29yZS5maWx0ZXIuY2xlYXInIHwgdHJhbnNsYXRlIH19XG4gICAgICAgICAgPC90YS1saW5rPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPHRhLWJ1dHRvbiAoYWN0aW9uKT1cInRoaXMudmFsaWRhdGUoKVwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJhbGlnbi1jZW50ZXIgbS1zcGFjZS14c1wiPlxuICAgICAgICAgICAgPHRhLWZvbnQtaWNvbiBuYW1lPVwiY2hlY2stbGluZVwiPjwvdGEtZm9udC1pY29uPlxuICAgICAgICAgICAge3sgJ2NvcmUuZmlsdGVyLnZhbGlkYXRlJyB8IHRyYW5zbGF0ZSB9fVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L3RhLWJ1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L3RhLWxheW91dC1zaWRlLWN0YT5cbjwvdGEtbGF5b3V0LXNpZGU+XG4iXX0=