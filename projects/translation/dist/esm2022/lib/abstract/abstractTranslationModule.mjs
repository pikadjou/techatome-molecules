import { inject } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { CamTranslationRegistryService } from '../services/translation-registry.service';
/**
 * @deprecated
 */
export class CamAbstractTranslationModule {
    constructor(id, lang) {
        this._registry = inject(CamTranslationRegistryService);
        this.translation = new BehaviorSubject({});
        this.id = id;
        this._lang = lang;
        this._registry.register(this);
    }
    getTranslation(lang) {
        this._addTranslation(this._lang[lang]);
        return this.translation;
    }
    _addTranslation(obj) {
        const translation = {};
        if (!translation[this.id]) {
            translation[this.id] = {};
        }
        translation[this.id] = obj;
        this.translation.next(translation);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJzdHJhY3RUcmFuc2xhdGlvbk1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvYWJzdHJhY3QvYWJzdHJhY3RUcmFuc2xhdGlvbk1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXZDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFFdkMsT0FBTyxFQUFFLDZCQUE2QixFQUFnQixNQUFNLDBDQUEwQyxDQUFDO0FBRXZHOztHQUVHO0FBQ0gsTUFBTSxPQUFnQiw0QkFBNEI7SUFRaEQsWUFBWSxFQUFVLEVBQUUsSUFBd0Q7UUFQdEUsY0FBUyxHQUFHLE1BQU0sQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO1FBR2xELGdCQUFXLEdBQThDLElBQUksZUFBZSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBS3pGLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDO1FBQ2IsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7UUFDbEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELGNBQWMsQ0FBQyxJQUFZO1FBQ3pCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3ZDLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUMxQixDQUFDO0lBRVMsZUFBZSxDQUFDLEdBQVc7UUFDbkMsTUFBTSxXQUFXLEdBQTZCLEVBQUUsQ0FBQztRQUNqRCxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO1lBQzFCLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQzVCLENBQUM7UUFDRCxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQztRQUUzQixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNyQyxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IENhbVRyYW5zbGF0aW9uUmVnaXN0cnlTZXJ2aWNlLCBJVHJhbnNsYXRpb24gfSBmcm9tICcuLi9zZXJ2aWNlcy90cmFuc2xhdGlvbi1yZWdpc3RyeS5zZXJ2aWNlJztcblxuLyoqXG4gKiBAZGVwcmVjYXRlZFxuICovXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQ2FtQWJzdHJhY3RUcmFuc2xhdGlvbk1vZHVsZSBpbXBsZW1lbnRzIElUcmFuc2xhdGlvbiB7XG4gIHByb3RlY3RlZCBfcmVnaXN0cnkgPSBpbmplY3QoQ2FtVHJhbnNsYXRpb25SZWdpc3RyeVNlcnZpY2UpO1xuXG4gIHB1YmxpYyBpZDogc3RyaW5nO1xuICBwcm90ZWN0ZWQgdHJhbnNsYXRpb246IEJlaGF2aW9yU3ViamVjdDx7IFtpbmRleDogc3RyaW5nXTogYW55IH0+ID0gbmV3IEJlaGF2aW9yU3ViamVjdCh7fSk7XG5cbiAgcHJpdmF0ZSBfbGFuZzogeyBbaW5kZXg6IHN0cmluZ106IG9iamVjdCB9O1xuXG4gIGNvbnN0cnVjdG9yKGlkOiBzdHJpbmcsIGxhbmc6IHsgZW46IG9iamVjdDsgZnI6IG9iamVjdDsgbmw6IG9iamVjdDsgZXM6IG9iamVjdCB9KSB7XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMuX2xhbmcgPSBsYW5nO1xuICAgIHRoaXMuX3JlZ2lzdHJ5LnJlZ2lzdGVyKHRoaXMpO1xuICB9XG5cbiAgZ2V0VHJhbnNsYXRpb24obGFuZzogc3RyaW5nKSB7XG4gICAgdGhpcy5fYWRkVHJhbnNsYXRpb24odGhpcy5fbGFuZ1tsYW5nXSk7XG4gICAgcmV0dXJuIHRoaXMudHJhbnNsYXRpb247XG4gIH1cblxuICBwcm90ZWN0ZWQgX2FkZFRyYW5zbGF0aW9uKG9iajogb2JqZWN0KTogdm9pZCB7XG4gICAgY29uc3QgdHJhbnNsYXRpb246IHsgW2luZGV4OiBzdHJpbmddOiBhbnkgfSA9IHt9O1xuICAgIGlmICghdHJhbnNsYXRpb25bdGhpcy5pZF0pIHtcbiAgICAgIHRyYW5zbGF0aW9uW3RoaXMuaWRdID0ge307XG4gICAgfVxuICAgIHRyYW5zbGF0aW9uW3RoaXMuaWRdID0gb2JqO1xuXG4gICAgdGhpcy50cmFuc2xhdGlvbi5uZXh0KHRyYW5zbGF0aW9uKTtcbiAgfVxufVxuIl19