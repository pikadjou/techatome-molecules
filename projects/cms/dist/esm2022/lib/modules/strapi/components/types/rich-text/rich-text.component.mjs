import { NgFor, NgTemplateOutlet } from '@angular/common';
import { Component, Input } from '@angular/core';
import { TitleComponent } from '@ta/ui';
import { LinkComponent } from '../link/link.component';
import { TextComponent } from '../text/text.component';
import * as i0 from "@angular/core";
export class RichTextComponent {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: RichTextComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: RichTextComponent, isStandalone: true, selector: "ta-rich-text", inputs: { richText: "richText" }, ngImport: i0, template: "@for (rich of this.richText; track rich) {\n  @switch (rich.type) {\n    @case ('heading') {\n      <ta-title [level]=\"rich.level\">\n        <ng-container *ngTemplateOutlet=\"textTemplate; context: { childrenText: rich.children }\"></ng-container>\n      </ta-title>\n    }\n    @case ('paragraph') {\n      <div class=\"paragraph\">\n        <ng-container *ngTemplateOutlet=\"textTemplate; context: { childrenText: rich.children }\"></ng-container>\n      </div>\n    }\n  }\n}\n\n<ng-template #textTemplate let-childrenText=\"childrenText\" [typedTemplate]=\"this.typeToken\">\n  @for (entity of childrenText; track entity) {\n    @switch (entity.type) {\n      @case ('text') {\n        <ta-rich-paragraph-text [text]=\"$any(entity)\"></ta-rich-paragraph-text>\n      }\n      @case ('link') {\n        <ta-rich-paragraph-link [link]=\"$any(entity)\"></ta-rich-paragraph-link>\n      }\n    }\n  }\n</ng-template>\n", styles: [".paragraph{font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-default-weight);margin:var(--ta-space-md) 0}\n"], dependencies: [{ kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: TitleComponent, selector: "ta-title", inputs: ["level", "isTheme", "isBold"] }, { kind: "component", type: TextComponent, selector: "ta-rich-paragraph-text", inputs: ["text"] }, { kind: "component", type: LinkComponent, selector: "ta-rich-paragraph-link", inputs: ["link"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: RichTextComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-rich-text', standalone: true, imports: [NgFor, NgTemplateOutlet, TitleComponent, TextComponent, LinkComponent], template: "@for (rich of this.richText; track rich) {\n  @switch (rich.type) {\n    @case ('heading') {\n      <ta-title [level]=\"rich.level\">\n        <ng-container *ngTemplateOutlet=\"textTemplate; context: { childrenText: rich.children }\"></ng-container>\n      </ta-title>\n    }\n    @case ('paragraph') {\n      <div class=\"paragraph\">\n        <ng-container *ngTemplateOutlet=\"textTemplate; context: { childrenText: rich.children }\"></ng-container>\n      </div>\n    }\n  }\n}\n\n<ng-template #textTemplate let-childrenText=\"childrenText\" [typedTemplate]=\"this.typeToken\">\n  @for (entity of childrenText; track entity) {\n    @switch (entity.type) {\n      @case ('text') {\n        <ta-rich-paragraph-text [text]=\"$any(entity)\"></ta-rich-paragraph-text>\n      }\n      @case ('link') {\n        <ta-rich-paragraph-link [link]=\"$any(entity)\"></ta-rich-paragraph-link>\n      }\n    }\n  }\n</ng-template>\n", styles: [".paragraph{font-size:var(--ta-font-body-md-default-size);line-height:var(--ta-font-body-md-default-line);font-weight:var(--ta-font-body-md-default-weight);margin:var(--ta-space-md) 0}\n"] }]
        }], propDecorators: { richText: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmljaC10ZXh0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvbW9kdWxlcy9zdHJhcGkvY29tcG9uZW50cy90eXBlcy9yaWNoLXRleHQvcmljaC10ZXh0LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvbW9kdWxlcy9zdHJhcGkvY29tcG9uZW50cy90eXBlcy9yaWNoLXRleHQvcmljaC10ZXh0LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBRXhDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7O0FBU3ZELE1BQU0sT0FBTyxpQkFBaUI7K0dBQWpCLGlCQUFpQjttR0FBakIsaUJBQWlCLDBHQ2Y5QiwwNUJBMkJBLG1QRGRtQixnQkFBZ0Isb0pBQUUsY0FBYyw2RkFBRSxhQUFhLHFGQUFFLGFBQWE7OzRGQUVwRSxpQkFBaUI7a0JBUDdCLFNBQVM7K0JBQ0UsY0FBYyxjQUdaLElBQUksV0FDUCxDQUFDLEtBQUssRUFBRSxnQkFBZ0IsRUFBRSxjQUFjLEVBQUUsYUFBYSxFQUFFLGFBQWEsQ0FBQzs4QkFJaEYsUUFBUTtzQkFEUCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdGb3IsIE5nVGVtcGxhdGVPdXRsZXQgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBUaXRsZUNvbXBvbmVudCB9IGZyb20gJ0B0YS91aSc7XG5pbXBvcnQgeyBSaWNoVGV4dCwgUmljaFRleHRDaGlsZHJlbiB9IGZyb20gJy4uLy4uLy4uL3NlcnZpY2VzL2R0by90eXBlcy9yaWNoLXRleHQnO1xuaW1wb3J0IHsgTGlua0NvbXBvbmVudCB9IGZyb20gJy4uL2xpbmsvbGluay5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGV4dENvbXBvbmVudCB9IGZyb20gJy4uL3RleHQvdGV4dC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0YS1yaWNoLXRleHQnLFxuICB0ZW1wbGF0ZVVybDogJy4vcmljaC10ZXh0LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vcmljaC10ZXh0LmNvbXBvbmVudC5zY3NzJ10sXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtOZ0ZvciwgTmdUZW1wbGF0ZU91dGxldCwgVGl0bGVDb21wb25lbnQsIFRleHRDb21wb25lbnQsIExpbmtDb21wb25lbnRdLFxufSlcbmV4cG9ydCBjbGFzcyBSaWNoVGV4dENvbXBvbmVudCB7XG4gIEBJbnB1dCgpXG4gIHJpY2hUZXh0ITogUmljaFRleHQ7XG5cbiAgcHVibGljIHJlYWRvbmx5IHR5cGVUb2tlbiE6IHsgY2hpbGRyZW5UZXh0OiBSaWNoVGV4dENoaWxkcmVuW10gfTtcbn1cbiIsIkBmb3IgKHJpY2ggb2YgdGhpcy5yaWNoVGV4dDsgdHJhY2sgcmljaCkge1xuICBAc3dpdGNoIChyaWNoLnR5cGUpIHtcbiAgICBAY2FzZSAoJ2hlYWRpbmcnKSB7XG4gICAgICA8dGEtdGl0bGUgW2xldmVsXT1cInJpY2gubGV2ZWxcIj5cbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cInRleHRUZW1wbGF0ZTsgY29udGV4dDogeyBjaGlsZHJlblRleHQ6IHJpY2guY2hpbGRyZW4gfVwiPjwvbmctY29udGFpbmVyPlxuICAgICAgPC90YS10aXRsZT5cbiAgICB9XG4gICAgQGNhc2UgKCdwYXJhZ3JhcGgnKSB7XG4gICAgICA8ZGl2IGNsYXNzPVwicGFyYWdyYXBoXCI+XG4gICAgICAgIDxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCJ0ZXh0VGVtcGxhdGU7IGNvbnRleHQ6IHsgY2hpbGRyZW5UZXh0OiByaWNoLmNoaWxkcmVuIH1cIj48L25nLWNvbnRhaW5lcj5cbiAgICAgIDwvZGl2PlxuICAgIH1cbiAgfVxufVxuXG48bmctdGVtcGxhdGUgI3RleHRUZW1wbGF0ZSBsZXQtY2hpbGRyZW5UZXh0PVwiY2hpbGRyZW5UZXh0XCIgW3R5cGVkVGVtcGxhdGVdPVwidGhpcy50eXBlVG9rZW5cIj5cbiAgQGZvciAoZW50aXR5IG9mIGNoaWxkcmVuVGV4dDsgdHJhY2sgZW50aXR5KSB7XG4gICAgQHN3aXRjaCAoZW50aXR5LnR5cGUpIHtcbiAgICAgIEBjYXNlICgndGV4dCcpIHtcbiAgICAgICAgPHRhLXJpY2gtcGFyYWdyYXBoLXRleHQgW3RleHRdPVwiJGFueShlbnRpdHkpXCI+PC90YS1yaWNoLXBhcmFncmFwaC10ZXh0PlxuICAgICAgfVxuICAgICAgQGNhc2UgKCdsaW5rJykge1xuICAgICAgICA8dGEtcmljaC1wYXJhZ3JhcGgtbGluayBbbGlua109XCIkYW55KGVudGl0eSlcIj48L3RhLXJpY2gtcGFyYWdyYXBoLWxpbms+XG4gICAgICB9XG4gICAgfVxuICB9XG48L25nLXRlbXBsYXRlPlxuIl19