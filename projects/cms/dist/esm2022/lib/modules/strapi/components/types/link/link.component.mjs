import { NgFor } from '@angular/common';
import { Component, Input } from '@angular/core';
import { LinkComponent as UiLinkComponent } from '@ta/ui';
import { TextComponent } from '../text/text.component';
import * as i0 from "@angular/core";
export class LinkComponent {
    goTo() {
        window.open(this.link.url);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: LinkComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.13", type: LinkComponent, isStandalone: true, selector: "ta-rich-paragraph-link", inputs: { link: "link" }, ngImport: i0, template: "@for (entity of this.link.children; track entity) {\n  <ta-link (action)=\"this.goTo()\">\n    @switch (entity.type) {\n      @case ('text') {\n        <ta-rich-paragraph-text [text]=\"$any(entity)\"></ta-rich-paragraph-text>\n      }\n    }\n  </ta-link>\n}\n", styles: ["ta-link{display:inline-block}\n"], dependencies: [{ kind: "component", type: UiLinkComponent, selector: "ta-link", inputs: ["state", "underline", "bold", "size", "icon"], outputs: ["action"] }, { kind: "component", type: TextComponent, selector: "ta-rich-paragraph-text", inputs: ["text"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: LinkComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ta-rich-paragraph-link', standalone: true, imports: [NgFor, UiLinkComponent, TextComponent], template: "@for (entity of this.link.children; track entity) {\n  <ta-link (action)=\"this.goTo()\">\n    @switch (entity.type) {\n      @case ('text') {\n        <ta-rich-paragraph-text [text]=\"$any(entity)\"></ta-rich-paragraph-text>\n      }\n    }\n  </ta-link>\n}\n", styles: ["ta-link{display:inline-block}\n"] }]
        }], propDecorators: { link: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGluay5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL21vZHVsZXMvc3RyYXBpL2NvbXBvbmVudHMvdHlwZXMvbGluay9saW5rLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvbW9kdWxlcy9zdHJhcGkvY29tcG9uZW50cy90eXBlcy9saW5rL2xpbmsuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3hDLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWpELE9BQU8sRUFBRSxhQUFhLElBQUksZUFBZSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBRTFELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7QUFTdkQsTUFBTSxPQUFPLGFBQWE7SUFJakIsSUFBSTtRQUNULE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM3QixDQUFDOytHQU5VLGFBQWE7bUdBQWIsYUFBYSw0R0NkMUIsc1FBU0EseUZER21CLGVBQWUsaUlBQUUsYUFBYTs7NEZBRXBDLGFBQWE7a0JBUHpCLFNBQVM7K0JBQ0Esd0JBQXdCLGNBR3BCLElBQUksV0FDUCxDQUFDLEtBQUssRUFBRSxlQUFlLEVBQUUsYUFBYSxDQUFDOzhCQUloRCxJQUFJO3NCQURILEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ0ZvciB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IExpbmtDb21wb25lbnQgYXMgVWlMaW5rQ29tcG9uZW50IH0gZnJvbSAnQHRhL3VpJztcbmltcG9ydCB7IFJpY2hQYXJhZ3JhcGhMaW5rIH0gZnJvbSAnLi4vLi4vLi4vc2VydmljZXMvZHRvL3R5cGVzL3JpY2gtdGV4dCc7XG5pbXBvcnQgeyBUZXh0Q29tcG9uZW50IH0gZnJvbSAnLi4vdGV4dC90ZXh0LmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuc2VsZWN0b3I6ICd0YS1yaWNoLXBhcmFncmFwaC1saW5rJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpbmsuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9saW5rLmNvbXBvbmVudC5zY3NzJ10sXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtOZ0ZvciwgVWlMaW5rQ29tcG9uZW50LCBUZXh0Q29tcG9uZW50XSxcbn0pXG5leHBvcnQgY2xhc3MgTGlua0NvbXBvbmVudCB7XG4gIEBJbnB1dCgpXG4gIGxpbmshOiBSaWNoUGFyYWdyYXBoTGluaztcblxuICBwdWJsaWMgZ29UbygpIHtcbiAgICB3aW5kb3cub3Blbih0aGlzLmxpbmsudXJsKTtcbiAgfVxufVxuIiwiQGZvciAoZW50aXR5IG9mIHRoaXMubGluay5jaGlsZHJlbjsgdHJhY2sgZW50aXR5KSB7XG4gIDx0YS1saW5rIChhY3Rpb24pPVwidGhpcy5nb1RvKClcIj5cbiAgICBAc3dpdGNoIChlbnRpdHkudHlwZSkge1xuICAgICAgQGNhc2UgKCd0ZXh0Jykge1xuICAgICAgICA8dGEtcmljaC1wYXJhZ3JhcGgtdGV4dCBbdGV4dF09XCIkYW55KGVudGl0eSlcIj48L3RhLXJpY2gtcGFyYWdyYXBoLXRleHQ+XG4gICAgICB9XG4gICAgfVxuICA8L3RhLWxpbms+XG59XG4iXX0=