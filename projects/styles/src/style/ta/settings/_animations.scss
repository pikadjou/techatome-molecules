@use 'sass:map';
@use 'ta/vars';
@use 'ta/utils/mixins/common';

/** Animations Settings **/

// Animation configurations
$animations: map.merge(
  (
    fadeIn: (
      from: (
        opacity: 0,
        transform: translateY(10px),
      ),
      to: (
        opacity: 1,
        transform: translateY(0),
      ),
    ),
    slideInRight: (
      from: (
        opacity: 0,
        transform: translateX(20px),
      ),
      to: (
        opacity: 1,
        transform: translateX(0),
      ),
    ),
    slideInLeft: (
      from: (
        opacity: 0,
        transform: translateX(-20px),
      ),
      to: (
        opacity: 1,
        transform: translateX(0),
      ),
    ),
    slideInUp: (
      from: (
        opacity: 0,
        transform: translateY(20px),
      ),
      to: (
        opacity: 1,
        transform: translateY(0),
      ),
    ),
    slideInDown: (
      from: (
        opacity: 0,
        transform: translateY(-20px),
      ),
      to: (
        opacity: 1,
        transform: translateY(0),
      ),
    ),
    scaleIn: (
      from: (
        opacity: 0,
        transform: scale(0.8),
      ),
      to: (
        opacity: 1,
        transform: scale(1),
      ),
    ),
    bounce: (
      "0%, 20%, 53%, 80%, 100%": (
        transform: translate3d(0, 0, 0),
      ),
      "40%, 43%": (
        transform: translate3d(0, -30px, 0),
      ),
      "70%": (
        transform: translate3d(0, -15px, 0),
      ),
      "90%": (
        transform: translate3d(0, -4px, 0),
      ),
    ),
    pulse: (
      "0%": (
        transform: scale(1),
      ),
      "50%": (
        transform: scale(1.05),
      ),
      "100%": (
        transform: scale(1),
      ),
    ),
    spin: (
      from: (
        transform: rotate(0deg),
      ),
      to: (
        transform: rotate(360deg),
      ),
    ),
  ),
  map.get(vars.$components, animations) or ()
);

// Animation durations
$animation-durations: map.merge(
  (
    fast: 0.15s,
    normal: 0.3s,
    slow: 0.5s,
    slower: 1s,
  ),
  map.get(vars.$components, animation-durations) or ()
);

// Animation easings
$animation-easings: map.merge(
  (
    ease: ease,
    ease-in: ease-in,
    ease-out: ease-out,
    ease-in-out: ease-in-out,
    linear: linear,
    bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55),
    elastic: cubic-bezier(0.175, 0.885, 0.32, 1.275),
  ),
  map.get(vars.$components, animation-easings) or ()
);

// Helper function to generate keyframes
@mixin generateKeyframes($name, $frames) {
  @keyframes #{$name} {
    @each $key, $properties in $frames {
      #{$key} {
        @each $property, $value in $properties {
          #{$property}: #{$value};
        }
      }
    }
  }
}

// Generate all keyframes
@mixin generateAnimations() {
  @each $name, $frames in $animations {
    @include generateKeyframes($name, $frames);
  }

  // Generate utility classes for animations
  @each $name in map.keys($animations) {
    .animate-#{$name} {
      animation-name: #{$name};
      animation-duration: map.get($animation-durations, normal);
      animation-timing-function: map.get($animation-easings, ease-out);
      animation-fill-mode: both;
    }
  }

  // Generate duration classes
  @each $duration-name, $duration-value in $animation-durations {
    .duration-#{$duration-name} {
      animation-duration: #{$duration-value};
    }
  }

  // Generate easing classes
  @each $easing-name, $easing-value in $animation-easings {
    .ease-#{$easing-name} {
      animation-timing-function: #{$easing-value};
    }
  }

  // Generate additional utility classes
  .animate-infinite {
    animation-iteration-count: infinite;
  }

  .animate-once {
    animation-iteration-count: 1;
  }

  .animate-paused {
    animation-play-state: paused;
  }

  .animate-running {
    animation-play-state: running;
  }

  // Legacy classes for compatibility
  .fade-in {
    animation: fadeIn map.get($animation-durations, normal) map.get($animation-easings, ease-out) both;
  }

  .slide-in-right {
    animation: slideInRight map.get($animation-durations, normal) map.get($animation-easings, ease-out) both;
  }
}