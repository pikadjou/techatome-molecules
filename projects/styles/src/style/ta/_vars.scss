@use 'sass:map';
@use 'sass:list';


/** Vars */
$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1400px,
  xxl: 1900px,
);
$grid-breakpoints: (
  xs: 0px,
  sm: 576px,
  mobile: 577px,
  md: 768px,
  tablette: 769px,
  desktop: 991px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
  xxxl: 1800px,
) !default;
$space-base: 8px !default;
$radius-base: 8px !default;

$brand: () !default;
$second: () !default;
$neutral: () !default;
$semantic: () !default;
$icon: () !default;
$text: () !default;
$surface: () !default;
$semantic-token: () !default;
$border: () !default;
$space: () !default;
$radius: () !default;
$shadow: () !default;
$transition: () !default;
$font: () !default;
$components: () !default;

/** Foundation **/
$brand: map.merge(
  (
    900: #121e38,// primary
    800: #192e50,
    700: #1f375d,
    600: #273f67,
    500: #2d466f, 
    400: #4c5f81,
    300: #6a7a95,
    200: #929fb3,
    100: #bcc4d2,
    50:  #e5e8ec,
  ),
  $brand
);

$second: map.merge(
  (
    900: #f26800,
    800: #f28700,
    700: #f19800,
    600: #f1ab00,
    500: #f0b800, 
    400: #f2c317, // primary
    300: #f4ce46,
    200: #f7db7c,
    100: #fae9b0,
    50:  #fdf7e0,
  ),
  $second
);

$neutral: map.merge(
  (
    black: #1F2245,   // Gris/blanc pour fond et contrastes
    700: #262626,
    600: #3c3c3c,
    500: #7d7d7d,
    400: #a9a9a9,
    300: #dddddd,
    200: #f4f7f9,     // Gris très clair, recommandé
    100: #f8f8f8,
    white: #ffffff,
  ),
  $neutral
);

$semantic: map.merge(
  (
    red: #E74C3C,
    orange: #F39C12,
    yellow: #FFD166, // Jaune doré accent
    green: #38A172,  // Vert validation
  ),
  $semantic
);

/** tokens **/
$icon: map.merge(
  (
    primary: map.get($neutral, black),
    secondary: map.get($neutral, 500),
    tertiary: map.get($neutral, 400),
    brand: (
      primary: map.get($brand, 900),
      secondary: map.get($second, 600),
    ),
    invert: (
      primary: map.get($neutral, white),
      secondary: map.get($brand, 600),
    ),
    disabled: map.get($neutral, 300),
    success: map.get($semantic, green),
    alert: map.get($semantic, red),
  ),
  $icon
);

$text: map.merge(
  (
    primary: map.get($neutral, black),
    secondary: map.get($neutral, 500),
    tertiary: map.get($neutral, 400),
    brand: (
      primary: map.get($brand, 900),
      secondary: map.get($second, 800),
    ),
    invert: (
      primary: map.get($neutral, white),
      secondary:map.get($neutral, white),
    ),
    body: map.get($neutral, 600),
    success: map.get($semantic, green),
    warning: map.get($semantic, orange),
    alert: map.get($semantic, red),
    link: map.get($brand, 800),
  ),
  $text
);

$surface: map.merge(
  (
    default: map.get($neutral, 200),
    primary: map.get($neutral, white),
    secondary: map.get($neutral, 100),
    tertiary: map.get($brand, 50),
    brand: (
      primary: map.get($brand, 900),
      secondary: map.get($second, 400),
      tertiary: map.get($brand, 100),
    ),
    hover: (
      primary: map.get($brand, 300),
      secondary: map.get($second, 300),
    ),
    invert: map.get($brand, 900),
    success: map.get($semantic, green),
    warning: map.get($semantic, orange),
    alert: map.get($semantic, red),
  ),
  $surface
);

$semantic-token: map.merge(
  (
    success: map.get($semantic, green),
    alert: map.get($semantic, red),
    warning: map.get($semantic, orange),
    link: map.get($brand, 800),
  ),
  $semantic-token
);

$border: map.merge(
  (
    primary: map.get($neutral, black),
    secondary: map.get($neutral, 500),
    tertiary: map.get($neutral, 400),
    brand: (
      primary: map.get($brand, 900),
      secondary: map.get($second, 600),
    ),
    hover: (
      primary: map.get($brand, 800),
      secondary: map.get($brand, 300),
    ),
    invert: (
      primary: map.get($neutral, white),
      secondary: map.get($second, 900),
    ),
    disabled: map.get($neutral, 300),
    success: map.get($semantic, green),
    alert: map.get($semantic, red),
  ),
  $border
);

$space: map.merge(
  (
    base: $space-base,
    xs: $space-base * 0.5,
    sm: $space-base * 1,
    md: $space-base * 2,
    lg: $space-base * 3,
    xl: $space-base * 4,
    xxl: $space-base * 6,
    xxxl: $space-base * 13,
  ),
  $space
);

$radius: map.merge(
  (
    minimal: $space-base * 0.5,
    rounded: $space-base * 1,
    label: $space-base * 2,
    full: $space-base * 5,
  ),
  $radius
);

$shadow: map.merge(
  (
    black: (
      sm: 0px 4px 8px 0px rgba(0, 0, 0, 0.1),
      md: 0px 4px 16px 0px rgba(0, 0, 0, 0.15),
      lg: 0px 8px 24px 4px rgba(0, 0, 0, 0.1),
    ),
    brand: (
      sm: 0px 4px 8px 0px rgba(107, 124, 234, 0.1),
      md: 0px 4px 16px 0px rgba(107, 124, 234, 0.15),
      lg: 0px 8px 24px 4px rgba(107, 124, 234, 0.1),
    ),
  ),
  $shadow
);

$font: map.merge(
  (
    family: (
      'Inter',
      'Diodrum Cyrillic',
      sans-serif,
    ),
    h1: (
      default: (
        size: 30px,
        line: 40px,
        weight: 300,
      ),
      desktop: (
        size: 42px,
        line: 52px,
      ),
    ),
    h2: (
      default: (
        size: 24px,
        line: 32px,
        weight: 300,
      ),
      desktop: (
        size: 30px,
        line: 36px,
      ),
      bold: (
        weight: 600,
      ),
    ),
    h3: (
      default: (
        size: 20px,
        line: 28px,
        weight: 400,
      ),
      desktop: (
        size: 24px,
        line: 32px,
      ),
      bold: (
        weight: 600,
      ),
    ),
    h4: (
      default: (
        size: 18px,
        line: 25px,
        weight: 400,
      ),
      desktop: (
        size: 22px,
        line: 28px,
      ),
      bold: (
        weight: 600,
      ),
    ),
    body: (
      md: (
        default: (
          size: 15px,
          line: 22px,
          weight: 400,
        ),
        desktop: (
          size: 16px,
          line: 24px,
        ),
        bold: (
          weight: 600,
        ),
      ),
      sm: (
        default: (
          size: 13px,
          line: 16px,
          weight: 400,
        ),
        desktop: (
          size: 13px,
          line: 18px,
        ),
        bold: (
          weight: 600,
        ),
      ),
      xs: (
        default: (
          size: 10px,
          line: 13px,
          weight: 400,
        ),
        desktop: (
          size: 11px,
          line: 14px,
        ),
        bold: (
          weight: 600,
        ),
      ),
    ),
    key: (
      xl: (
        default: (
          size: 36px,
          line: 42px,
          weight: 500,
        ),
        desktop: (
          size: 42px,
          line: 48px,
        ),
        bold: (
          weight: 600,
        ),
      ),
      lg: (
        default: (
          size: 20px,
          line: 28px,
          weight: 400,
        ),
        desktop: (
          size: 24px,
          line: 32px,
        ),
        bold: (
          weight: 600,
        ),
      ),
      md: (
        default: (
          size: 18px,
          line: 25px,
          weight: 400,
        ),
        desktop: (
          size: 22px,
          line: 28px,
        ),
        bold: (
          weight: 600,
        ),
      ),
      sm: (
        default: (
          size: 15px,
          line: 22px,
          weight: 400,
        ),
        desktop: (
          size: 16px,
          line: 24px,
        ),
        bold: (
          weight: 600,
        ),
      ),
      xs: (
        default: (
          size: 13px,
          line: 18px,
          weight: 400,
        ),
        desktop: (
          size: 13px,
          line: 18px,
        ),
      ),
      xxs: (
        default: (
          size: 10px,
          line: 13px,
          weight: 400,
        ),
        desktop: (
          size: 11px,
          line: 14px,
        ),
      ),
    ),
  ),
  $font
);

$components: map.merge(
  (
    max-width: 1200px,
    header: (
      top: $space-base * 5,
    ),
    button: (

      radius: map.get($radius, rounded),
      gap: map.get($space, md),
      padding-vertical: map.get($space, sm),
      padding-horizontal: map.get($space, md),
      
      small: (
        padding-vertical: map.get($space, xs),
        padding-horizontal: map.get($space, sm),
      ),
      
      large: (
        padding-vertical: map.get($space, md),
        padding-horizontal: map.get($space, lg),
      ),
      
      primary: (
        color: map.get($text, invert, primary),
        background: map.get($surface, brand, primary),
        border: map.get($border, brand, primary),
        hover: (
          color: map.get($text, primary),
          background: map.get($surface, primary),
          border: map.get($border, primary),
        ),
        disabled: (
          color: map.get($text, tertiary),
          border: map.get($border, disabled),
        ),
        inactive: (
          border: map.get($border, primary),
        ),
        icon: (
          color: map.get($icon, invert, primary),
        ),
      ),

      secondary: (
        color: map.get($text, brand, primary),
        background: map.get($surface, brand, secondary),
        border: map.get($border, brand, secondary),
        hover: (
          border: map.get($border, invert, secondary),
        ),
        disabled: (
          color: map.get($text, tertiary),
          border: map.get($border, disabled),
        ),
        inactive: (
          border: map.get($border, primary),
        ),
        icon: (
          color: map.get($icon, brand, primary),
        ),
      ),
      tertiary: (
        color: map.get($text, brand, primary),
        background: map.get($surface, primary),
        border: map.get($border, brand, primary),
        hover: (
          color: map.get($text, invert, primary),
          background: map.get($surface, hover, primary),
          border: map.get($border, hover, primary),
        ),
        disabled: (
          color: map.get($text, brand, secondary),
          background: map.get($surface, hover, secondary),
        ),
        inactive: (
          color: map.get($text, primary),
          background: map.get($surface, tertiary),
        )
      ),
      
      
      // Scope .circular
      circular: (
        height: 50px,
        width: 50px,
        radius: 50px,
        padding: 0,
        big: (
          height: 90px,
          width: 90px,
        ),
        small: (
          height: 40px,
          width: 40px,
        ),
      ),
    ),
    card: (
      // Styles de base .card
      border-radius: map.get($space, md),
      padding: map.get($space, md),
      background: map.get($surface, primary),
      color: map.get($text, primary),
      border: map.get($border, tertiary),

      
      // Scope .hover
      hover: (
        background: map.get($surface, hover, primary),
      ),
      
      // Scope .full-height
      full-height: (
        spacing-offset: map.get($space, md),
      ),
      
      // Scope .highlight
      highlight: (
        background: map.get($surface, hover, secondary),
        border: map.get($border, secondary),
      ),
      
      // Scope .card-shadow
      card-shadow: (
        box-shadow:  map.get($shadow, brand, sm),
      ),
    ),
    card-image: (
      // Styles de base .img-container
      aspect-ratio: '16 / 9',
      border-radius: map.get($radius, rounded),
      
      // Scope .img
      img: (
        width: 100%,
      ),
    ),
    text: (
      // Styles de base .text - utilise les mixins fonts existants
      // Les tailles sont gérées par les mixins fonts.fontSizeBody()
    ),
    toggle-card: (
      // Styles de base .toggle-card
      padding: map.get($space, lg),
      transition: 'all 0.2s ease-in-out',
      border: map.get($surface, secondary),
      border-radius: map.get($radius, rounded),
      background: map.get($surface, primary),
      box-shadow: '0 2px 4px rgba(0, 0, 0, 0.1)',
      
      // Scope hover (non-disabled)
      hover: (
        border-color: map.get($brand, 600),
        background: map.get($surface, secondary),
        box-shadow: '0 4px 12px rgba(0, 0, 0, 0.15)',
      ),
      
      // Scope --active
      active: (
        border-color: map.get($brand, 700),
        background: map.get($surface, secondary),
        hover: (
          border-color: map.get($brand, 600),
          background: map.get($surface, tertiary),
        ),
      ),
      
      // Scope --disabled
      disabled: (
        background: map.get($surface, tertiary),
        border-color: map.get($surface, secondary),
        opacity: 0.6,
        text-color: map.get($text, secondary),
      ),
      
      // Scope __content
      content: (
        flex: 1,
      ),
      
      // Scope __icon
      icon: (
        margin-right: map.get($space, md),
        color: map.get($text, secondary),
        font-size: map.get($font, key, lg, default, size),
        active: (
          color: map.get($brand, 700),
        ),
      ),
      
      // Scope __text
      text: (
        flex: 1,
      ),
      
      // Scope __title
      title: (
        font-size: map.get($font, key, md, default, size),
        font-weight: map.get($font, key, md, bold, weight),
        color: map.get($text, primary),
        margin: '0 0 #{map.get($space, xs)} 0',
      ),
      
      // Scope __description
      description: (
        font-size: map.get($font, key, sm, default, size),
        color: map.get($text, secondary),
        margin: 0,
      ),
      
      // Scope __indicator
      indicator: (
        margin-left: map.get($space, md),
      ),
      
      // Scope __check
      check: (
        width: 24px,
        height: 24px,
        border-radius: '50%',
        border: map.get($surface, secondary),
        background: map.get($surface, primary),
        transition: 'all 0.2s ease-in-out',
        font-size: map.get($font, key, sm, default, size),
        font-weight: map.get($font, key, sm, bold, weight),
        active: (
          background: map.get($brand, 700),
          border-color: map.get($brand, 700),
          color: map.get($text, tertiary),
        ),
      ),
    ),
  ),
  $components
);

$enable-grid-classes: false;
$enable-cssgrid: true;
