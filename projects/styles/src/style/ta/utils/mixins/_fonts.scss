@use "ta/vars";

@use 'ta/utils/mixins/common';
@use 'ta/utils/mixins/text';

@mixin font($font-family, $font-folder, $font-name, $font-weight) {
  $font-path: '/assets/fonts/' + $font-folder + $font-name;
  @font-face {
    font-family: $font-family;
    src: url($font-path + '.eot');
    src: local($font-name), url($font-path + '.eot?#iefix') format('embedded-opentype'),
      url($font-path + '.woff') format('woff'), url($font-path + '.woff2') format('woff2'),
      url($font-path + '.ttf') format('truetype');
    font-weight: $font-weight;
    font-style: normal;
    font-display: auto;
  }
}

@mixin fontSize($scope, $sub, $bold: false) {
  font-size: common.get-var(font, $scope, $sub, default, size);
  line-height: common.get-var(font, $scope, $sub, default, line);

  @if ($bold) {
    font-weight: common.get-var(font, $scope, $sub, bold, weight);
  } @else {
    font-weight: common.get-var(font, $scope, $sub, default, weight);
  }
  // @include media-breakpoint-up(mobile) {
  //   font-size: common.get-var(font, $scope, $sub, desktop, size);
  //   line-height: common.get-var(font, $scope, $sub, desktop, line);
  // }
}

@mixin fontSizeHeader($scope, $bold: false) {
  @include fontSize('', $scope, $bold);
}

@mixin fontSizeBody($scope, $bold: false) {
  @include fontSize(body, $scope, $bold);
}

@mixin fontSizeKey($scope, $bold: false) {
  @include fontSize(key, $scope, $bold);
}
