import { Apollo_gql, graphQlTake } from '@ta/server';
import { documentProps } from './dto/document';
export function GET_DOCUMENTS(filters) {
    const where = filters.ids && filters.ids.length > 0
        ? `where: { id: { in: [${filters.ids.map(id => `"${id}"`).join(', ')}] } }`
        : '';
    return {
        query: Apollo_gql `
        query Documents {
          documents(${graphQlTake(filters.take)}, order: { isNew: DESC, uploadedDate: DESC }, ${where}) {
            items {
              ${documentProps.get('id')}
              ${documentProps.get('url')}
              ${documentProps.get('description')}
              
            }
          }
        }
      `,
        variables: {},
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcmllcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvc2VydmljZXMvZmlsZXMvcXVlcmllcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFxQixXQUFXLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFeEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRS9DLE1BQU0sVUFBVSxhQUFhLENBQUMsT0FBMEM7SUFDdEUsTUFBTSxLQUFLLEdBQ1QsT0FBTyxDQUFDLEdBQUcsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxDQUFDO1FBQ25DLENBQUMsQ0FBQyx1QkFBdUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPO1FBQzNFLENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDVCxPQUFPO1FBQ0wsS0FBSyxFQUFFLFVBQVUsQ0FBQTs7c0JBRUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsaURBQWlELEtBQUs7O2dCQUVyRixhQUFhLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQztnQkFDdkIsYUFBYSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUM7Z0JBQ3hCLGFBQWEsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDOzs7OztPQUt6QztRQUNILFNBQVMsRUFBRSxFQUFFO0tBQ2QsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcG9sbG9fZ3FsLCBHcmFwaFF1ZXJ5UGF5bG9hZCwgZ3JhcGhRbFRha2UgfSBmcm9tICdAdGEvc2VydmVyJztcblxuaW1wb3J0IHsgZG9jdW1lbnRQcm9wcyB9IGZyb20gJy4vZHRvL2RvY3VtZW50JztcblxuZXhwb3J0IGZ1bmN0aW9uIEdFVF9ET0NVTUVOVFMoZmlsdGVyczogeyBpZHM/OiBzdHJpbmdbXTsgdGFrZT86IG51bWJlciB9KTogR3JhcGhRdWVyeVBheWxvYWQge1xuICBjb25zdCB3aGVyZSA9XG4gICAgZmlsdGVycy5pZHMgJiYgZmlsdGVycy5pZHMubGVuZ3RoID4gMFxuICAgICAgPyBgd2hlcmU6IHsgaWQ6IHsgaW46IFske2ZpbHRlcnMuaWRzLm1hcChpZCA9PiBgXCIke2lkfVwiYCkuam9pbignLCAnKX1dIH0gfWBcbiAgICAgIDogJyc7XG4gIHJldHVybiB7XG4gICAgcXVlcnk6IEFwb2xsb19ncWxgXG4gICAgICAgIHF1ZXJ5IERvY3VtZW50cyB7XG4gICAgICAgICAgZG9jdW1lbnRzKCR7Z3JhcGhRbFRha2UoZmlsdGVycy50YWtlKX0sIG9yZGVyOiB7IGlzTmV3OiBERVNDLCB1cGxvYWRlZERhdGU6IERFU0MgfSwgJHt3aGVyZX0pIHtcbiAgICAgICAgICAgIGl0ZW1zIHtcbiAgICAgICAgICAgICAgJHtkb2N1bWVudFByb3BzLmdldCgnaWQnKX1cbiAgICAgICAgICAgICAgJHtkb2N1bWVudFByb3BzLmdldCgndXJsJyl9XG4gICAgICAgICAgICAgICR7ZG9jdW1lbnRQcm9wcy5nZXQoJ2Rlc2NyaXB0aW9uJyl9XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgYCxcbiAgICB2YXJpYWJsZXM6IHt9LFxuICB9O1xufVxuIl19