@use 'ta/utils/mixins/common';

@use "ta/utils/mixins/common";

.categories-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
  gap: common.get-var(space, lg);
  padding: common.get-var(space, lg) 0;
  
  // Animation d'apparition progressive pour les cartes
  > .category-card {
    animation: fadeIn common.get-var(transition, normal) ease-out;
    
    @for $i from 1 through 10 {
      &:nth-child(#{$i}) {
        animation-delay: #{$i * 0.1}s;
      }
    }
  }
}

.category-card {
  position: relative;
  cursor: pointer;
  transition: all common.get-var(transition, normal);
  border: common.get-var('border-width') solid rgba(0, 0, 0, 0.08);
  border-radius: common.get-var(radius, label);
  background: common.get-var(surface, primary);
  overflow: hidden;
  
  // Barre colorée en haut de la carte
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, common.get-var(brand, 700), common.get-var(brand, 400));
    transform: scaleX(0);
    transform-origin: left;
    transition: transform common.get-var(transition, normal);
  }

  &:hover {
    transform: translateY(-4px);
    box-shadow: common.get-var(shadow, black, lg);
    border-color: common.get-var(brand, 700);
    
    &::before {
      transform: scaleX(1);
    }
    
    .category-actions {
      opacity: 1;
      transform: translateX(0);
    }
  }

  &:focus-visible {
    outline: common.get-var('border-width-thick') solid common.get-var(brand, 700);
    outline-offset: 2px;
    
    &::before {
      transform: scaleX(1);
    }
  }

  // Style pour les cartes avec sous-catégories
  &.has-subcategories {
    &::after {
      content: '';
      position: absolute;
      top: common.get-var(space, md);
      right: common.get-var(space, md);
      width: common.get-var('border-radius-md');
      height: common.get-var('border-radius-md');
      background: common.get-var(brand, 600);
      border-radius: 50%;
    }
  }

  .category-header {
    .category-icon {
      color: common.get-var(brand, 700);
      font-size: 20px;
      opacity: 0.8;
    }
    
    .subcategory-indicator {
      color: common.get-var(brand, 600);
      font-size: common.get-var('font-size-sm');
      margin-left: common.get-var(space, xs);
    }
  }

  .card-content {
    
    &.category-meta {
      padding: common.get-var(space, sm) common.get-var(space, lg) common.get-var(space, lg);
      border-top: common.get-var('border-width') solid rgba(0, 0, 0, 0.06);
      background: rgba(0, 0, 0, 0.02);
      
      .meta-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: common.get-var(space, sm);
        
        .meta-text {
          display: flex;
          align-items: center;
          gap: common.get-var(space, xs);
          
          .meta-icon {
            font-size: 14px;
            opacity: 0.7;
          }
        }
        
        .document-count {
          color: common.get-var(brand, 700);
          font-weight: 500;
        }
      }
    }
    
    .category-description {
      font-size: 0.95rem;
      margin-bottom: common.get-var(space, sm);
      line-height: 1.6;
      color: common.get-var(text, secondary);
    }
    
    .text-muted {
      font-size: 0.875rem;
      margin-top: common.get-var(space, sm);
      line-height: 1.6;
      color: common.get-var(text, secondary);
    }
  }
}

.category-actions {
  display: flex;
  gap: common.get-var(space, xs);
  margin-left: auto;
  opacity: 0.7;
  transform: translateX(4px);
  transition: all common.get-var(transition, normal);
  
  .action-button {
    mat-icon {
      font-size: common.get-var('font-size-md');
      width: common.get-var('font-size-md');
      height: common.get-var('font-size-md');
    }
  }
}

.text-muted {
  color: common.get-var(text, body);
}

// États de chargement
.category-card.loading {
  opacity: 0.6;
  pointer-events: none;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, 
      transparent, 
      rgba(255, 255, 255, 0.4), 
      transparent);
    animation: shimmer 1.5s infinite;
  }
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

// Responsive design
@media (max-width: common.get-var('breakpoint-md')) {
  .categories-grid {
    grid-template-columns: 1fr;
    gap: common.get-var(space, md);
    padding: common.get-var(space, md) 0;
  }
  
  .category-card {
    // Compact mobile layout
  }
  
  .category-actions {
    opacity: 1;
    transform: translateX(0);
  }
}

@media (max-width: 480px) {
  .categories-grid {
    grid-template-columns: 1fr;
  }
  
  .category-card {
    ta-card-header {
      flex-direction: column;
      align-items: flex-start;
      gap: common.get-var(space, sm);
      
      ta-card-title {
        font-size: common.get-var('font-size-md');
      }
    }
    
    .category-actions {
      align-self: flex-end;
    }
  }
}

// État vide
.empty-state {
  grid-column: 1 / -1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: common.get-var(space, xxl);
  text-align: center;
  background: common.get-var(surface, primary);
  border-radius: common.get-var(radius, label);
  border: 2px dashed rgba(0, 0, 0, 0.1);
  min-height: 300px;
  
  .empty-icon {
    font-size: 64px;
    color: common.get-var(text, tertiary);
    margin-bottom: common.get-var(space, lg);
    opacity: 0.6;
  }
  
  ta-title {
    margin: 0 0 common.get-var(space, md);
    font-size: common.get-var('font-size-lg');
    font-weight: 600;
    color: common.get-var(text, primary);
  }
  
  ta-text {
    margin: 0 0 common.get-var(space, lg);
    color: common.get-var(text, secondary);
    max-width: 400px;
    line-height: 1.6;
  }
  
  ta-button {
    min-width: 200px;
    height: 44px;
    font-weight: 500;
    
    mat-icon {
      margin-right: common.get-var(space, sm);
    }
  }
}